#pragma ACCEL kernel

void main_top(int *b)
{
  int i;
  int a = 0;
  for (i = 0; i < 100; i++) 
// Original: #pragma ACCEL pipeline
{
    for (int i0 = 0; i0 < 100; i0++) {
      a++;
    }
    for (int i1 = 0; i1 < 100; i1++) {
      a++;
    }
  }
   *b = a++;
}

void mars_kernel_0_3_assign_a(int *target,int *orig)
{
   *target =  *orig;
}

void mars_kernel_0_3_node_0_stage_0(int i,int exec,int *a)
{
  
#pragma HLS INLINE OFF
  if (exec == 1) {
    for (int i0 = 0; i0 < 100; i0++) {
       *a = 1;
    }
  }
}

void mars_kernel_0_3_node_1_stage_1(int i,int exec,int *a)
{
  
#pragma HLS INLINE OFF
  if (exec == 1) {
    for (int i1 = 0; i1 < 100; i1++) {
       *a = 2;
    }
  }
}

void mars_kernel_0_3(int mars_i,int mars_init,int mars_cond,int *mars_a_0,int *mars_a_1)
{
  
#pragma HLS INLINE OFF
  mars_kernel_0_3_node_0_stage_0(mars_i - 0,(int )(mars_i >= mars_init + 0 & mars_i <= mars_cond + 0),mars_a_0);
  mars_kernel_0_3_node_1_stage_1(mars_i - 1,(int )(mars_i >= mars_init + 1 & mars_i <= mars_cond + 1),mars_a_1);
}
#pragma ACCEL kernel

void main_top1(int *b)
{
  int i;
  int a = 0;
  int mars_count_0_3 = 0;
  int mars_kernel_0_3_a_0 = a;
  int mars_kernel_0_3_a_1 = a;
  for (i = 0; i < 100 + 1; i++) 
// Original: #pragma ACCEL pipeline
{
    if (mars_count_0_3 == 0) 
      mars_kernel_0_3(i,0,99,&mars_kernel_0_3_a_0,&mars_kernel_0_3_a_1);
     else 
      mars_kernel_0_3(i,0,99,&mars_kernel_0_3_a_1,&mars_kernel_0_3_a_0);
    mars_count_0_3++;
    if (mars_count_0_3 == 2) 
      mars_count_0_3 = 0;
  }
  mars_kernel_0_3_assign_a(&a,&mars_kernel_0_3_a_0);
   *b = a++;
}
