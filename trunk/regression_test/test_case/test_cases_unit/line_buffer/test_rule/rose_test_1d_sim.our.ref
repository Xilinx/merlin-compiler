#include<stdio.h>
#include<string.h>
#include"header.h"
#pragma ACCEL kernel

void func_top_1(float *merlin_in)
{
  
#pragma ACCEL interface variable=merlin_in depth=100,100 max_depth=100,100 BURST_OFF streaming_access=0,10000
  for (int i = 0; i < 100; i++) {
    float slide_wind_0[5];
    __merlin_streaming_range(merlin_in,(0L + i * 1L) * 100L,100L);
    for (int j = -4; j < 100 - 5 + 1; j++) {
      if (j + 4L + 0L < 100L) {
        float tmp_wind_0;
        int j_0;
        for (j_0 = 1L; j_0 <= 4L; ++j_0) {
          
#pragma ACCEL PARALLEL COMPLETE
          slide_wind_0[j_0 + -1] = slide_wind_0[j_0];
        }
        tmp_wind_0 = merlin_in[(0L + i * 1L) * 100L + (j + 4L + 0L) * 1L];
        slide_wind_0[4L] = tmp_wind_0;
      }
      if (j >= 0L && j <= 95L) {
        for (int q = 0; q < 5; q++) {
          
#pragma ACCEL PARALLEL COMPLETE
          float tmp = slide_wind_0[q + 0L];
          printf("%d, %d, %d : %f\n",i,j,q,(double )tmp);
        }
      }
    }
  }
}
float c[10000];

int main()
{
  for (size_t i = 0; i < 10000; i++) {
    c[i] = i;
  }
  func_top_1(c);
  return 0;
}
