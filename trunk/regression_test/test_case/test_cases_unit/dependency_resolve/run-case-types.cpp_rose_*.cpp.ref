
void simple_int()
{
  int i;
  int x;
  for ((i = 0 , x *= 8); i < 100; ++i) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100 && (x *= 8); ++i) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100; (++i , x *= 8)) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100; ++i) {
    
#pragma ACCEL pipeline
    x *= 8;
  }
  while(1){
    
#pragma ACCEL pipeline
    x *= 8;
  }
  while((x *= 8)){
    
#pragma ACCEL pipeline
  }
}

double f(double x,double y)
{
  return x + y;
}

void complicated()
{
  int i;
  int x;
  int y;
  int z;
  for ((i = 0 , x *= (y + z) + f(y,z)); i < 100; ++i) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100 && (x *= (y + z) + f(y,z)); ++i) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100; (++i , x *= (y + z) + f(y,z))) {
    
#pragma ACCEL pipeline
  }
  for (i = 0; i < 100; ++i) {
    
#pragma ACCEL pipeline
    x *= (y + z) + f(y,z);
  }
  while(1){
    
#pragma ACCEL pipeline
    x *= (y + z) + f(y,z);
  }
  while((x *= (y + z) + f(y,z))){
    
#pragma ACCEL pipeline
  }
}
#pragma ACCEL kernel

void g()
{
  simple_int();
  complicated();
}
