#include<assert.h>
#pragma ACCEL kernel

void verify(int merlin_return_value[1],int *i,int *j,float *c,float *c2)
{
  
#pragma ACCEL interface variable=c2 scope_type=global depth=1,1024,1024 max_depth=1,1024,1024
  
#pragma ACCEL interface variable=c scope_type=global depth=1,1024,1024 max_depth=1,1024,1024
  
#pragma ACCEL interface variable=j scope_type=global depth=1 max_depth=1
  
#pragma ACCEL interface variable=i scope_type=global depth=1 max_depth=1
  float sum = (float )0.0;
  float sum2 = (float )0.0;
  for ( *i = 0;  *i < 1024; ( *i)++) {
    for ( *j = 0;  *j < 1024; ( *j)++) {
      
#pragma ACCEL PIPELINE AUTO
      sum += c[( *i) * 1024L + ( *j)];
      sum2 += c2[( *i) * 1024L + ( *j)];
    }
  }
}
