#include<assert.h>
#include "cmost.h"
#pragma ACCEL kernel

void top(int *a)
{
  __merlin_access_range(a,0,99);
  for (int i = 0; i < 200; ++i) {
    if (i * i < 100) {
      a[i]++;
    }
  }
}

void sub(int *a,int h)
{
  for (int i = 0; i < h; ++i) {
    a[i] = i;
  }
  a[h - 1] = 0;
}
#pragma ACCEL kernel

void top2(int *a,int h)
{
  h <= 64?((void )0) : __assert_fail("h <=64","test_negative_buffer_size.c",20,__PRETTY_FUNCTION__);
  sub(a,h);
}
