[
    {
        "line": 241,
        "col": 10,
        "source": "__merlinkernel_logistic_regression_kernel.c",
        "topo_id": "F_0_0_0_17",
        "unparse_info": "void logistic_regression_kernel(int n_samples,merlin_uint_512 * global_weights,merlin_uint_512 * global_data,merlin_uint_512 * global_gradient) {...}",
        "type": "kernel",
        "name": "logistic_regression_kernel",
        "begin": "242",
        "end": "334",
        "interfaces": [
            {
                "line": 241,
                "col": 46,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_0_0",
                "unparse_info": "n_samples",
                "type": "interface",
                "name": "n_samples",
                "var_type": "scalar",
                "const": "yes"
            },
            {
                "line": 241,
                "col": 73,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_0_1",
                "unparse_info": "global_weights",
                "type": "interface",
                "name": "global_weights",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 241,
                "col": 105,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_0_2",
                "unparse_info": "global_data",
                "type": "interface",
                "name": "global_data",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 241,
                "col": 134,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_0_3",
                "unparse_info": "global_gradient",
                "type": "interface",
                "name": "global_gradient",
                "var_type": "array",
                "const": "yes"
            }
        ],
        "arrays": [
            {
                "line": 271,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_14_1",
                "unparse_info": "weights",
                "type": "array",
                "name": "weights"
            },
            {
                "line": 274,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_16_1",
                "unparse_info": "gradient",
                "type": "array",
                "name": "gradient"
            },
            {
                "line": 280,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_21_1",
                "unparse_info": "regs",
                "type": "array",
                "name": "regs"
            },
            {
                "line": 283,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_23_1",
                "unparse_info": "buffer",
                "type": "array",
                "name": "buffer"
            }
        ],
        "var_refs": [
            {
                "line": 295,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_3_1_0_0_0_0",
                "unparse_info": "gradient",
                "type": "var_ref",
                "name": "gradient"
            },
            {
                "line": 300,
                "col": 36,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_0_0_1_0",
                "unparse_info": "buffer",
                "type": "var_ref",
                "name": "buffer"
            },
            {
                "line": 300,
                "col": 62,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_0_0_1_1_0",
                "unparse_info": "global_weights",
                "type": "var_ref",
                "name": "global_weights"
            },
            {
                "line": 316,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_3_1_0_0_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 316,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_3_1_0_1_0_0",
                "unparse_info": "weights",
                "type": "var_ref",
                "name": "weights"
            },
            {
                "line": 318,
                "col": 18,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_2_0_1_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 326,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_3_1_0_0_0_0",
                "unparse_info": "weights",
                "type": "var_ref",
                "name": "weights"
            },
            {
                "line": 326,
                "col": 25,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_3_1_0_1_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 328,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_4_0_0_0_0",
                "unparse_info": "weights",
                "type": "var_ref",
                "name": "weights"
            },
            {
                "line": 328,
                "col": 28,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_4_0_1_0",
                "unparse_info": "buffer",
                "type": "var_ref",
                "name": "buffer"
            },
            {
                "line": 332,
                "col": 41,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_27_0_1_1_0_0",
                "unparse_info": "global_data",
                "type": "var_ref",
                "name": "global_data"
            },
            {
                "line": 332,
                "col": 54,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_27_0_1_2",
                "unparse_info": "weights",
                "type": "var_ref",
                "name": "weights"
            },
            {
                "line": 332,
                "col": 62,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_27_0_1_3",
                "unparse_info": "gradient",
                "type": "var_ref",
                "name": "gradient"
            },
            {
                "line": 343,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_1_0_0_0",
                "unparse_info": "buffer",
                "type": "var_ref",
                "name": "buffer"
            },
            {
                "line": 343,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_1_0_1_0_0",
                "unparse_info": "gradient",
                "type": "var_ref",
                "name": "gradient"
            },
            {
                "line": 351,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_3_1_0_0_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 351,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_3_1_0_1_0_0",
                "unparse_info": "gradient",
                "type": "var_ref",
                "name": "gradient"
            },
            {
                "line": 353,
                "col": 18,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_3_0_1_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 361,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_3_1_0_0_0_0",
                "unparse_info": "gradient",
                "type": "var_ref",
                "name": "gradient"
            },
            {
                "line": 361,
                "col": 26,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_3_1_0_1_0",
                "unparse_info": "regs",
                "type": "var_ref",
                "name": "regs"
            },
            {
                "line": 365,
                "col": 56,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_1_0_1_0_0",
                "unparse_info": "global_gradient",
                "type": "var_ref",
                "name": "global_gradient"
            },
            {
                "line": 365,
                "col": 72,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_1_0_1_1",
                "unparse_info": "buffer",
                "type": "var_ref",
                "name": "buffer"
            }
        ],
        "var_defs": [
            {
                "line": 277,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_18_1",
                "unparse_info": "i",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 278,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_19_1",
                "unparse_info": "j",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 279,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_20_1",
                "unparse_info": "k",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 288,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_0_1",
                "unparse_info": "j",
                "type": "var_def",
                "name": ""
            }
        ],
        "stmts": [
            {
                "line": 241,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_17",
                "unparse_info": "void logistic_regression_kernel(int n_samples,merlin_uint_512 * global_weights,merlin_uint_512 * global_data,merlin_uint_512 * global_gradient) {...}",
                "type": "stmt"
            },
            {
                "line": 241,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_0",
                "unparse_info": "int n_samples,merlin_uint_512 * global_weights,merlin_uint_512 * global_data,merlin_uint_512 * global_gradient",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_17_2",
                "unparse_info": "function definition: void logistic_regression_kernel(int n_samples,merlin_uint_512 * global_weights,merlin_uint_512 * global_data,merlin_uint_512 * global_gradient) {...}",
                "type": "stmt"
            },
            {
                "line": 242,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0",
                "unparse_info": "{#pragma HLS INTERFACE m_axi port=global_data offset=slave depth=3180000#pragma HLS INTERFACE m_axi port=global_gradient offset=slave depth=3140#pragma HLS INTERFACE m_axi port=global_weights offset=slave depth=3140#pragma HLS INTERFACE s_axilite port=global_data bundle=control#pragma HLS INTERFACE s_axilite port=global_gradient bundle=control#pragma HLS INTERFACE s_axilite port=global_weights bundle=control#pragma HLS INTERFACE s_axilite port=n_samples bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma HLS DATA_PACK VARIABLE=global_gradient#pragma HLS DATA_PACK VARIABLE=global_data#pragma HLS DATA_PACK VARIABLE=global_weights#pragma ACCEL interface variable=global_weights max_depth=50240 depth=50240#pragma ACCEL interface variable=global_data max_depth=50880000 depth=50880000#pragma ACCEL interface variable=global_gradient max_depth=50240 depth=50240float weights[64][784 + 1];#pragma HLS array_partition variable=weights complete dim=1float gradient[64][784 + 1];#pragma HLS array_partition variable=gradient complete dim=1int i;int j;int k;float regs[64];#pragma HLS array_partition variable=regs complete dim=1float buffer[784 + 1];#pragma HLS array_partition variable=buffer cyclic factor=8 dim=1merlinL13:for(i = 0;i < 64;i++) {int j;merlinL12:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinegradient[i][j] = 0.f;}}merlinL11:for(i = 0;i < 64;i++) {memcpy_wide_bus_read_float_512(buffer,(merlin_uint_512 *)global_weights,(size_t )((784 + 1) * i * 4),(unsigned long )((784 + 1) * 4),(size_t )785L);merlinL10:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinemerlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}shift_left(regs);merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}weights[64 - 1][j] = buffer[j];}}pipeline(n_samples,((volatile float *)global_data),weights,gradient);merlinL7:for(i = 0;i < 64;i++) {merlinL6:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinebuffer[j] = gradient[0][j];merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}shift_left(regs);merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}}memcpy_wide_bus_write_float_512((merlin_uint_512 *)global_gradient,buffer,(size_t )(4 *(i *(784 + 1))),(unsigned long )((784 + 1) * 4),(size_t )785L);}}",
                "type": "stmt"
            },
            {
                "line": 244,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_0",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=global_data offset=slave depth=3180000",
                "type": "stmt"
            },
            {
                "line": 246,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_1",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=global_gradient offset=slave depth=3140",
                "type": "stmt"
            },
            {
                "line": 248,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_2",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=global_weights offset=slave depth=3140",
                "type": "stmt"
            },
            {
                "line": 250,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_3",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=global_data bundle=control",
                "type": "stmt"
            },
            {
                "line": 252,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_4",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=global_gradient bundle=control",
                "type": "stmt"
            },
            {
                "line": 254,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_5",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=global_weights bundle=control",
                "type": "stmt"
            },
            {
                "line": 256,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_6",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=n_samples bundle=control",
                "type": "stmt"
            },
            {
                "line": 258,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_7",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=return bundle=control",
                "type": "stmt"
            },
            {
                "line": 260,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_8",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=global_gradient",
                "type": "stmt"
            },
            {
                "line": 262,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_9",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=global_data",
                "type": "stmt"
            },
            {
                "line": 264,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_10",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=global_weights",
                "type": "stmt"
            },
            {
                "line": 266,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_11",
                "unparse_info": "#pragma ACCEL interface variable=global_weights max_depth=50240 depth=50240",
                "type": "stmt"
            },
            {
                "line": 268,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_12",
                "unparse_info": "#pragma ACCEL interface variable=global_data max_depth=50880000 depth=50880000",
                "type": "stmt"
            },
            {
                "line": 270,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_13",
                "unparse_info": "#pragma ACCEL interface variable=global_gradient max_depth=50240 depth=50240",
                "type": "stmt"
            },
            {
                "line": 271,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_14",
                "unparse_info": "float weights[64][784 + 1];",
                "type": "stmt"
            },
            {
                "line": 273,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_15",
                "unparse_info": "#pragma HLS array_partition variable=weights complete dim=1",
                "type": "stmt"
            },
            {
                "line": 274,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_16",
                "unparse_info": "float gradient[64][784 + 1];",
                "type": "stmt"
            },
            {
                "line": 276,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_17",
                "unparse_info": "#pragma HLS array_partition variable=gradient complete dim=1",
                "type": "stmt"
            },
            {
                "line": 277,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_18",
                "unparse_info": "int i;",
                "type": "stmt"
            },
            {
                "line": 278,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_19",
                "unparse_info": "int j;",
                "type": "stmt"
            },
            {
                "line": 279,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_20",
                "unparse_info": "int k;",
                "type": "stmt"
            },
            {
                "line": 280,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_21",
                "unparse_info": "float regs[64];",
                "type": "stmt"
            },
            {
                "line": 282,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_22",
                "unparse_info": "#pragma HLS array_partition variable=regs complete dim=1",
                "type": "stmt"
            },
            {
                "line": 283,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_23",
                "unparse_info": "float buffer[784 + 1];",
                "type": "stmt"
            },
            {
                "line": 285,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_24",
                "unparse_info": "#pragma HLS array_partition variable=buffer cyclic factor=8 dim=1",
                "type": "stmt"
            },
            {
                "line": 286,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25",
                "unparse_info": "merlinL13:for(i = 0;i < 64;i++) {int j;merlinL12:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinegradient[i][j] = 0.f;}}",
                "type": "stmt"
            },
            {
                "line": 287,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_25_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "stmt"
            },
            {
                "line": 287,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_0",
                "unparse_info": "i = 0;;",
                "type": "stmt"
            },
            {
                "line": 287,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_0_0",
                "unparse_info": "i = 0;",
                "type": "stmt"
            },
            {
                "line": 287,
                "col": 15,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_1",
                "unparse_info": "i < 64;",
                "type": "stmt"
            },
            {
                "line": 287,
                "col": 28,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3",
                "unparse_info": "{int j;merlinL12:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinegradient[i][j] = 0.f;}}",
                "type": "stmt"
            },
            {
                "line": 288,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "V_0_0_0_17_2_0_25_0_3_0",
                "unparse_info": "int j;",
                "type": "stmt"
            },
            {
                "line": 289,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1",
                "unparse_info": "merlinL12:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinegradient[i][j] = 0.f;}",
                "type": "stmt"
            },
            {
                "line": 290,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_25_0_3_1_0",
                "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                "type": "stmt"
            },
            {
                "line": 290,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_0",
                "unparse_info": "j = 0;;",
                "type": "stmt"
            },
            {
                "line": 290,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_0_0",
                "unparse_info": "j = 0;",
                "type": "stmt"
            },
            {
                "line": 290,
                "col": 17,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_1",
                "unparse_info": "j < 784 + 1;",
                "type": "stmt"
            },
            {
                "line": 292,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_3",
                "unparse_info": "{#pragma HLS pipelinegradient[i][j] = 0.f;}",
                "type": "stmt"
            },
            {
                "line": 294,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 295,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_25_0_3_1_0_3_1",
                "unparse_info": "gradient[i][j] = 0.f;",
                "type": "stmt"
            },
            {
                "line": 298,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26",
                "unparse_info": "merlinL11:for(i = 0;i < 64;i++) {memcpy_wide_bus_read_float_512(buffer,(merlin_uint_512 *)global_weights,(size_t )((784 + 1) * i * 4),(unsigned long )((784 + 1) * 4),(size_t )785L);merlinL10:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinemerlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}shift_left(regs);merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}weights[64 - 1][j] = buffer[j];}}",
                "type": "stmt"
            },
            {
                "line": 299,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_26_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "stmt"
            },
            {
                "line": 299,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_0",
                "unparse_info": "i = 0;;",
                "type": "stmt"
            },
            {
                "line": 299,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_0_0",
                "unparse_info": "i = 0;",
                "type": "stmt"
            },
            {
                "line": 299,
                "col": 15,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_1",
                "unparse_info": "i < 64;",
                "type": "stmt"
            },
            {
                "line": 299,
                "col": 28,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3",
                "unparse_info": "{memcpy_wide_bus_read_float_512(buffer,(merlin_uint_512 *)global_weights,(size_t )((784 + 1) * i * 4),(unsigned long )((784 + 1) * 4),(size_t )785L);merlinL10:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinemerlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}shift_left(regs);merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}weights[64 - 1][j] = buffer[j];}}",
                "type": "stmt"
            },
            {
                "line": 300,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_0",
                "unparse_info": "memcpy_wide_bus_read_float_512(buffer,(merlin_uint_512 *)global_weights,(size_t )((784 + 1) * i * 4),(unsigned long )((784 + 1) * 4),(size_t )785L);",
                "type": "stmt"
            },
            {
                "line": 301,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1",
                "unparse_info": "merlinL10:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinemerlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}shift_left(regs);merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}weights[64 - 1][j] = buffer[j];}",
                "type": "stmt"
            },
            {
                "line": 302,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0",
                "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                "type": "stmt"
            },
            {
                "line": 302,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_0",
                "unparse_info": "j = 0;;",
                "type": "stmt"
            },
            {
                "line": 302,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_0_0",
                "unparse_info": "j = 0;",
                "type": "stmt"
            },
            {
                "line": 302,
                "col": 17,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_1",
                "unparse_info": "j < 784 + 1;",
                "type": "stmt"
            },
            {
                "line": 306,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3",
                "unparse_info": "{#pragma HLS pipelinemerlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}shift_left(regs);merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}weights[64 - 1][j] = buffer[j];}",
                "type": "stmt"
            },
            {
                "line": 308,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 309,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1",
                "unparse_info": "merlinL9:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = weights[k][j];}",
                "type": "stmt"
            },
            {
                "line": 310,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0_3_1_0",
                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                "type": "stmt"
            },
            {
                "line": 310,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_0",
                "unparse_info": "k = 0;;",
                "type": "stmt"
            },
            {
                "line": 310,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_0_0",
                "unparse_info": "k = 0;",
                "type": "stmt"
            },
            {
                "line": 310,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_1",
                "unparse_info": "k < 64;",
                "type": "stmt"
            },
            {
                "line": 313,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_3",
                "unparse_info": "{#pragma HLS unrollregs[k] = weights[k][j];}",
                "type": "stmt"
            },
            {
                "line": 315,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 316,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_1_0_3_1",
                "unparse_info": "regs[k] = weights[k][j];",
                "type": "stmt"
            },
            {
                "line": 318,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_2",
                "unparse_info": "shift_left(regs);",
                "type": "stmt"
            },
            {
                "line": 319,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3",
                "unparse_info": "merlinL8:for(k = 0;k < 64;k++) {#pragma HLS unrollweights[k][j] = regs[k];}",
                "type": "stmt"
            },
            {
                "line": 320,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0_3_3_0",
                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                "type": "stmt"
            },
            {
                "line": 320,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_0",
                "unparse_info": "k = 0;;",
                "type": "stmt"
            },
            {
                "line": 320,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_0_0",
                "unparse_info": "k = 0;",
                "type": "stmt"
            },
            {
                "line": 320,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_1",
                "unparse_info": "k < 64;",
                "type": "stmt"
            },
            {
                "line": 323,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_3",
                "unparse_info": "{#pragma HLS unrollweights[k][j] = regs[k];}",
                "type": "stmt"
            },
            {
                "line": 325,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 326,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_3_0_3_1",
                "unparse_info": "weights[k][j] = regs[k];",
                "type": "stmt"
            },
            {
                "line": 328,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_4",
                "unparse_info": "weights[64 - 1][j] = buffer[j];",
                "type": "stmt"
            },
            {
                "line": 332,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_27",
                "unparse_info": "pipeline(n_samples,((volatile float *)global_data),weights,gradient);",
                "type": "stmt"
            },
            {
                "line": 333,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28",
                "unparse_info": "merlinL7:for(i = 0;i < 64;i++) {merlinL6:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinebuffer[j] = gradient[0][j];merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}shift_left(regs);merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}}memcpy_wide_bus_write_float_512((merlin_uint_512 *)global_gradient,buffer,(size_t )(4 *(i *(784 + 1))),(unsigned long )((784 + 1) * 4),(size_t )785L);}",
                "type": "stmt"
            },
            {
                "line": 334,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_28_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "stmt"
            },
            {
                "line": 334,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_0",
                "unparse_info": "i = 0;;",
                "type": "stmt"
            },
            {
                "line": 334,
                "col": 8,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_0_0",
                "unparse_info": "i = 0;",
                "type": "stmt"
            },
            {
                "line": 334,
                "col": 15,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_1",
                "unparse_info": "i < 64;",
                "type": "stmt"
            },
            {
                "line": 334,
                "col": 28,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3",
                "unparse_info": "{merlinL6:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinebuffer[j] = gradient[0][j];merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}shift_left(regs);merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}}memcpy_wide_bus_write_float_512((merlin_uint_512 *)global_gradient,buffer,(size_t )(4 *(i *(784 + 1))),(unsigned long )((784 + 1) * 4),(size_t )785L);}",
                "type": "stmt"
            },
            {
                "line": 335,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0",
                "unparse_info": "merlinL6:for(j = 0;j < 784 + 1;j++) {#pragma HLS pipelinebuffer[j] = gradient[0][j];merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}shift_left(regs);merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}}",
                "type": "stmt"
            },
            {
                "line": 336,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0",
                "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                "type": "stmt"
            },
            {
                "line": 336,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_0",
                "unparse_info": "j = 0;;",
                "type": "stmt"
            },
            {
                "line": 336,
                "col": 10,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_0_0",
                "unparse_info": "j = 0;",
                "type": "stmt"
            },
            {
                "line": 336,
                "col": 17,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_1",
                "unparse_info": "j < 784 + 1;",
                "type": "stmt"
            },
            {
                "line": 340,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3",
                "unparse_info": "{#pragma HLS pipelinebuffer[j] = gradient[0][j];merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}shift_left(regs);merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}}",
                "type": "stmt"
            },
            {
                "line": 342,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_0",
                "unparse_info": "#pragma HLS pipeline",
                "type": "stmt"
            },
            {
                "line": 343,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_1",
                "unparse_info": "buffer[j] = gradient[0][j];",
                "type": "stmt"
            },
            {
                "line": 344,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2",
                "unparse_info": "merlinL5:for(k = 0;k < 64;k++) {#pragma HLS unrollregs[k] = gradient[k][j];}",
                "type": "stmt"
            },
            {
                "line": 345,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0_3_2_0",
                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                "type": "stmt"
            },
            {
                "line": 345,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_0",
                "unparse_info": "k = 0;;",
                "type": "stmt"
            },
            {
                "line": 345,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_0_0",
                "unparse_info": "k = 0;",
                "type": "stmt"
            },
            {
                "line": 345,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_1",
                "unparse_info": "k < 64;",
                "type": "stmt"
            },
            {
                "line": 348,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_3",
                "unparse_info": "{#pragma HLS unrollregs[k] = gradient[k][j];}",
                "type": "stmt"
            },
            {
                "line": 350,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 351,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_2_0_3_1",
                "unparse_info": "regs[k] = gradient[k][j];",
                "type": "stmt"
            },
            {
                "line": 353,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_3",
                "unparse_info": "shift_left(regs);",
                "type": "stmt"
            },
            {
                "line": 354,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4",
                "unparse_info": "merlinL4:for(k = 0;k < 64;k++) {#pragma HLS unrollgradient[k][j] = regs[k];}",
                "type": "stmt"
            },
            {
                "line": 355,
                "col": 7,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0_3_4_0",
                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                "type": "stmt"
            },
            {
                "line": 355,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_0",
                "unparse_info": "k = 0;;",
                "type": "stmt"
            },
            {
                "line": 355,
                "col": 12,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_0_0",
                "unparse_info": "k = 0;",
                "type": "stmt"
            },
            {
                "line": 355,
                "col": 19,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_1",
                "unparse_info": "k < 64;",
                "type": "stmt"
            },
            {
                "line": 358,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_3",
                "unparse_info": "{#pragma HLS unrollgradient[k][j] = regs[k];}",
                "type": "stmt"
            },
            {
                "line": 360,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_3_0",
                "unparse_info": "#pragma HLS unroll",
                "type": "stmt"
            },
            {
                "line": 361,
                "col": 9,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_4_0_3_1",
                "unparse_info": "gradient[k][j] = regs[k];",
                "type": "stmt"
            },
            {
                "line": 365,
                "col": 5,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_28_0_3_1",
                "unparse_info": "memcpy_wide_bus_write_float_512((merlin_uint_512 *)global_gradient,buffer,(size_t )(4 *(i *(784 + 1))),(unsigned long )((784 + 1) * 4),(size_t )785L);",
                "type": "stmt"
            }
        ],
        "childs": [
            {
                "line": 287,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_25_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "287",
                "end": "290",
                "lc-trip-count": 64,
                "loop_label": "merlinL13",
                "loop_body_line": 287,
                "loop_body_col": 28,
                "childs": [
                    {
                        "line": 290,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_17_2_0_25_0_3_1_0",
                        "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "290",
                        "end": "296",
                        "lc-trip-count": 785,
                        "loop_label": "merlinL12",
                        "loop_body_line": 292,
                        "loop_body_col": 1,
                        "childs": []
                    }
                ]
            },
            {
                "line": 299,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_26_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "299",
                "end": "302",
                "lc-trip-count": 64,
                "loop_label": "merlinL11",
                "loop_body_line": 299,
                "loop_body_col": 28,
                "childs": [
                    {
                        "line": 300,
                        "col": 35,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_17_2_0_26_0_3_0_0",
                        "unparse_info": "memcpy_wide_bus_read_float_512(buffer,(merlin_uint_512 *)global_weights,(size_t )((784 + 1) * i * 4),(unsigned long )((784 + 1) * 4),(size_t )785L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_read_float_512",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 302,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0",
                        "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "302",
                        "end": "329",
                        "lc-trip-count": 785,
                        "loop_label": "merlinL10",
                        "loop_body_line": 306,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 310,
                                "col": 7,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0_3_1_0",
                                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "310",
                                "end": "317",
                                "lc-trip-count": 64,
                                "loop_label": "merlinL9",
                                "loop_body_line": 313,
                                "loop_body_col": 1,
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 318,
                                "col": 17,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_17_2_0_26_0_3_1_0_3_2_0",
                                "unparse_info": "shift_left(regs)",
                                "type": "callfunction",
                                "name": "shift_left",
                                "function_id": "F_0_0_0_5",
                                "childs": []
                            },
                            {
                                "line": 320,
                                "col": 7,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_17_2_0_26_0_3_1_0_3_3_0",
                                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "320",
                                "end": "327",
                                "lc-trip-count": 64,
                                "loop_label": "merlinL8",
                                "loop_body_line": 323,
                                "loop_body_col": 1,
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ]
            },
            {
                "line": 332,
                "col": 11,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "X_0_0_0_17_2_0_27_0",
                "unparse_info": "pipeline(n_samples,((volatile float *)global_data),weights,gradient)",
                "type": "callfunction",
                "name": "pipeline",
                "function_id": "F_0_0_0_15",
                "childs": []
            },
            {
                "line": 334,
                "col": 3,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "L_0_0_0_17_2_0_28_0",
                "unparse_info": "for(i = 0;i < 64;i++) {...}",
                "type": "loop",
                "name": "i",
                "canonical": "yes",
                "begin": "334",
                "end": "366",
                "lc-trip-count": 64,
                "loop_label": "merlinL7",
                "loop_body_line": 334,
                "loop_body_col": 28,
                "childs": [
                    {
                        "line": 336,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0",
                        "unparse_info": "for(j = 0;j < 784 + 1;j++) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "336",
                        "end": "355",
                        "lc-trip-count": 785,
                        "loop_label": "merlinL6",
                        "loop_body_line": 340,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 345,
                                "col": 7,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0_3_2_0",
                                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "345",
                                "end": "352",
                                "lc-trip-count": 64,
                                "loop_label": "merlinL5",
                                "loop_body_line": 348,
                                "loop_body_col": 1,
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 353,
                                "col": 17,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_17_2_0_28_0_3_0_0_3_3_0",
                                "unparse_info": "shift_left(regs)",
                                "type": "callfunction",
                                "name": "shift_left",
                                "function_id": "F_0_0_0_5",
                                "childs": []
                            },
                            {
                                "line": 355,
                                "col": 7,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_17_2_0_28_0_3_0_0_3_4_0",
                                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "355",
                                "end": "362",
                                "lc-trip-count": 64,
                                "loop_label": "merlinL4",
                                "loop_body_line": 358,
                                "loop_body_col": 1,
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    },
                    {
                        "line": 365,
                        "col": 36,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_17_2_0_28_0_3_1_0",
                        "unparse_info": "memcpy_wide_bus_write_float_512((merlin_uint_512 *)global_gradient,buffer,(size_t )(4 *(i *(784 + 1))),(unsigned long )((784 + 1) * 4),(size_t )785L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_write_float_512",
                        "function_id": "",
                        "childs": []
                    }
                ]
            }
        ],
        "sub_functions": [
            {
                "line": 3328,
                "col": 1,
                "source": "mars_wide_bus.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_read_float_512(float * a_buf,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_read_float_512",
                "begin": "3331",
                "end": "3363",
                "arrays": [],
                "childs": [
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 3352,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "3352",
                        "end": "3358",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 3356,
                                "col": 22,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "(merlin_get_range_512(&a[start],(j * data_width),data_width))",
                                "type": "callfunction",
                                "name": "merlin_get_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 3363,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "3363",
                        "end": "3574",
                        "lc-trip-count": 0,
                        "loop_label": "L2",
                        "loop_body_line": 3363,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 3371,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3371",
                                "end": "3377",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3375,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3381,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3381",
                                "end": "3389",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3387,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3393,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3393",
                                "end": "3401",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3399,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3405,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3405",
                                "end": "3413",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3411,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3417,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3417",
                                "end": "3425",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3423,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3429,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3429",
                                "end": "3437",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3435,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3441,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3441",
                                "end": "3449",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3447,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3453,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3453",
                                "end": "3461",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3459,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3465,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3465",
                                "end": "3473",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3471,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3477,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3477",
                                "end": "3485",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3483,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3489,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3489",
                                "end": "3497",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3495,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3501,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3501",
                                "end": "3509",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3507,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3513,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3513",
                                "end": "3521",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3519,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3525,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3525",
                                "end": "3533",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3531,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3537,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3537",
                                "end": "3545",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3543,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3549,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3549",
                                "end": "3557",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3555,
                                        "col": 24,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 3356,
                        "col": 22,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3357,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3375,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3376,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3387,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3388,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3399,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3400,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3411,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3412,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3423,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3424,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3435,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3436,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3447,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3448,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3459,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3460,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3471,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3472,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3483,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3484,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3495,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3496,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3507,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3508,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3519,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3520,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3531,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3532,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3543,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3544,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 3555,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 3556,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 3333,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3334,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3335,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3336,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3337,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3338,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3339,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3340,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3341,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3342,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3345,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3356,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3375,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3387,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3399,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3411,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3423,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3435,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3447,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3459,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3471,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3483,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3495,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3507,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3519,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3531,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3543,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3555,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 3328,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_read_float_512(float * a_buf,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3328,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float * a_buf,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 3331,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_read_float_512(float * a_buf,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3331,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t i;size_t j;int len =(end - start);if(head_align == 0) {len =((buf_size + num_elements - 1) / num_elements);}len <= const_buf_size / num_elements + 2?((void )0) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__);len >= buf_size / num_elements?((void )0) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__);if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3332,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 3333,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 3334,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 3335,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3336,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3337,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3338,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3339,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 3340,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3341,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3342,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 3344,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 3345,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int len =(end - start);",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) {len =((buf_size + num_elements - 1) / num_elements);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3346,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{len =((buf_size + num_elements - 1) / num_elements);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3347,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 3349,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len <= const_buf_size / num_elements + 2?((void )0) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus.h\",3349,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 3350,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len >= buf_size / num_elements?((void )0) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus.h\",3350,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "1 == len;",
                        "type": "stmt"
                    },
                    {
                        "line": 3351,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3352,
                        "col": 40,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align || j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[j - head_align] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3353,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3354,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align || j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3354,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align || j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3355,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3356,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3357,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[j - head_align] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3359,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 3362,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 15,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < len;",
                        "type": "stmt"
                    },
                    {
                        "line": 3363,
                        "col": 29,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3367,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3370,
                        "col": 26,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3371,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3372,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3373,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3373,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3374,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3375,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3376,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 0] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3380,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3381,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 1) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3382,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3383,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 1) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3383,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3384,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3385,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3385,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3386,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3387,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3388,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 1] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 3392,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3393,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 2) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3394,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3395,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 2) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3395,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 3396,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3397,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3397,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3398,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3399,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3400,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 2] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 3404,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3405,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 3) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3406,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3407,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 3) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3407,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 3408,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3409,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3409,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3410,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3411,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3412,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 3] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 3416,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3417,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 4) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3418,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3419,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 4) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3419,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 3420,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3421,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3421,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3422,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3423,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3424,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 4] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 5;",
                        "type": "stmt"
                    },
                    {
                        "line": 3428,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3429,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 5) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3430,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3431,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 5) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3431,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 5;",
                        "type": "stmt"
                    },
                    {
                        "line": 3432,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3433,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3433,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3434,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3435,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3436,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 5] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 3440,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3441,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 6) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3442,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3443,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 6) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3443,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 3444,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3445,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3445,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3446,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3447,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3448,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 6] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 3452,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3453,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 7) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3454,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3455,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 7) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3455,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 3456,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3457,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3457,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3458,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3459,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3460,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 7] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 3464,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3465,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 8) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3466,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3467,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 8) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3467,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 3468,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3469,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3469,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3470,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3471,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3472,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 8] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 9;",
                        "type": "stmt"
                    },
                    {
                        "line": 3476,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3477,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 9) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3478,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3479,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 9) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3479,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 9;",
                        "type": "stmt"
                    },
                    {
                        "line": 3480,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3481,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3481,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3482,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3483,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3484,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 9] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 10;",
                        "type": "stmt"
                    },
                    {
                        "line": 3488,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3489,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 10) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3490,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3491,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 10) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3491,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 10;",
                        "type": "stmt"
                    },
                    {
                        "line": 3492,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3493,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3493,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3494,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3495,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3496,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 10] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 11;",
                        "type": "stmt"
                    },
                    {
                        "line": 3500,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3501,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 11) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3502,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3503,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 11) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3503,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 11;",
                        "type": "stmt"
                    },
                    {
                        "line": 3504,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3505,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3505,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3506,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3507,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3508,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 11] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 12;",
                        "type": "stmt"
                    },
                    {
                        "line": 3512,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3513,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 12) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3514,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3515,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 12) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3515,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 12;",
                        "type": "stmt"
                    },
                    {
                        "line": 3516,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3517,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3517,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3518,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3519,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3520,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 12] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 3524,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3525,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 13) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3526,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3527,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 13) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3527,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 3528,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3529,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3529,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3530,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3531,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3532,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 13] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 14;",
                        "type": "stmt"
                    },
                    {
                        "line": 3536,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3537,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 14) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3538,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3539,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 14) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3539,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 14;",
                        "type": "stmt"
                    },
                    {
                        "line": 3540,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3541,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3541,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3542,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3543,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3544,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 14] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 3548,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3549,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < 15) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 3550,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3551,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < 15) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3551,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < 15;",
                        "type": "stmt"
                    },
                    {
                        "line": 3552,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3553,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3553,
                        "col": 13,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3554,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3555,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 3556,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[i * num_elements + j - 15] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 8,
                "col": 1,
                "source": "memcpy_512.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "uint64_t merlin_get_range_512(merlin_uint_512 * tmp,int low,int len) {...}",
                "type": "function",
                "name": "merlin_get_range_512",
                "begin": "8",
                "end": "46",
                "arrays": [],
                "childs": [
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "15",
                        "end": "19",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "22",
                        "end": "26",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "29",
                        "end": "33",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "36",
                        "end": "40",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 18,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 18,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 25,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 25,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 32,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 32,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 39,
                        "col": 14,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 39,
                        "col": 19,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "uint64_t merlin_get_range_512(merlin_uint_512 * tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_uint_512 * tmp,int low,int len",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: uint64_t merlin_get_range_512(merlin_uint_512 * tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFuint64_t ret = 0;int i;int start = low;switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}return ret;}",
                        "type": "stmt"
                    },
                    {
                        "line": 9,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "uint64_t ret = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 11,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 16,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 14,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 16,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 17,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 18,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 20,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 23,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 25,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 32,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 34,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 30,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 37,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 38,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ret;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 18,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_5",
                "unparse_info": "void shift_left(float [64] regs) {...}",
                "type": "function",
                "name": "shift_left",
                "begin": "19",
                "end": "24",
                "arrays": [],
                "childs": [
                    {
                        "line": 24,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_5_2_0_2_0",
                        "unparse_info": "for(i = 0;i < 64 - 1;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "24",
                        "end": "32",
                        "lc-trip-count": 63,
                        "loop_label": "merlinL0",
                        "loop_body_line": 28,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 31,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_3_1_0_0_0",
                        "unparse_info": "regs",
                        "type": "var_ref",
                        "name": "regs"
                    },
                    {
                        "line": 31,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_3_1_0_1_0",
                        "unparse_info": "regs",
                        "type": "var_ref",
                        "name": "regs"
                    }
                ],
                "var_defs": [
                    {
                        "line": 22,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_1_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 18,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_5",
                        "unparse_info": "void shift_left(float [64] regs) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 18,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_0",
                        "unparse_info": "float [64] regs",
                        "type": "stmt"
                    },
                    {
                        "line": 19,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_5_2",
                        "unparse_info": "function definition: void shift_left(float [64] regs) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 19,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0",
                        "unparse_info": "{#pragma HLS INLINEint i;merlinL0:for(i = 0;i < 64 - 1;i++) {#pragma HLS unrollregs[i] = regs[i + 1];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_5_2_0_1",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 23,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2",
                        "unparse_info": "merlinL0:for(i = 0;i < 64 - 1;i++) {#pragma HLS unrollregs[i] = regs[i + 1];}",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_5_2_0_2_0",
                        "unparse_info": "for(i = 0;i < 64 - 1;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_1",
                        "unparse_info": "i < 64 - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS unrollregs[i] = regs[i + 1];}",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_5_2_0_2_0_3_1",
                        "unparse_info": "regs[i] = regs[i + 1];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 190,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_15",
                "unparse_info": "void pipeline(int n_samples,volatile merlin_uint... global_data,float [64][784 + 1] weights,float [64][784 + 1] gradient) {...}",
                "type": "function",
                "name": "pipeline",
                "begin": "191",
                "end": "218",
                "arrays": [
                    {
                        "line": 195,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_2_1",
                        "unparse_info": "data_0",
                        "type": "array",
                        "name": "data_0"
                    },
                    {
                        "line": 196,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_3_1",
                        "unparse_info": "result1_0",
                        "type": "array",
                        "name": "result1_0"
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_4_1",
                        "unparse_info": "result2_0",
                        "type": "array",
                        "name": "result2_0"
                    },
                    {
                        "line": 199,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_6_1",
                        "unparse_info": "mars_kernel_0_8_data_0_0",
                        "type": "array",
                        "name": "mars_kernel_0_8_data_0_0"
                    },
                    {
                        "line": 202,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_8_1",
                        "unparse_info": "mars_kernel_0_8_data_0_1",
                        "type": "array",
                        "name": "mars_kernel_0_8_data_0_1"
                    },
                    {
                        "line": 203,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_9_1",
                        "unparse_info": "mars_kernel_0_8_data_0_2",
                        "type": "array",
                        "name": "mars_kernel_0_8_data_0_2"
                    },
                    {
                        "line": 204,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_10_1",
                        "unparse_info": "mars_kernel_0_8_data_0_3",
                        "type": "array",
                        "name": "mars_kernel_0_8_data_0_3"
                    },
                    {
                        "line": 205,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_11_1",
                        "unparse_info": "mars_kernel_0_8_result1_0_0",
                        "type": "array",
                        "name": "mars_kernel_0_8_result1_0_0"
                    },
                    {
                        "line": 208,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_13_1",
                        "unparse_info": "mars_kernel_0_8_result1_0_1",
                        "type": "array",
                        "name": "mars_kernel_0_8_result1_0_1"
                    },
                    {
                        "line": 211,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_15_1",
                        "unparse_info": "mars_kernel_0_8_result2_0_0",
                        "type": "array",
                        "name": "mars_kernel_0_8_result2_0_0"
                    },
                    {
                        "line": 214,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_17_1",
                        "unparse_info": "mars_kernel_0_8_result2_0_1",
                        "type": "array",
                        "name": "mars_kernel_0_8_result2_0_1"
                    }
                ],
                "childs": [
                    {
                        "line": 218,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_15_2_0_19_0",
                        "unparse_info": "for(i = 0;i < n_stage + 3;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "218",
                        "end": "237",
                        "lc-trip-count": 0,
                        "loop_label": "merlinL1",
                        "loop_body_line": 222,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 226,
                                "col": 22,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0",
                                "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights)",
                                "type": "callfunction",
                                "name": "mars_kernel_0_8",
                                "function_id": "F_0_0_0_14",
                                "childs": []
                            },
                            {
                                "line": 228,
                                "col": 22,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0",
                                "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights)",
                                "type": "callfunction",
                                "name": "mars_kernel_0_8",
                                "function_id": "F_0_0_0_14",
                                "childs": []
                            },
                            {
                                "line": 230,
                                "col": 22,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0",
                                "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights)",
                                "type": "callfunction",
                                "name": "mars_kernel_0_8",
                                "function_id": "F_0_0_0_14",
                                "childs": []
                            },
                            {
                                "line": 232,
                                "col": 22,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0",
                                "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights)",
                                "type": "callfunction",
                                "name": "mars_kernel_0_8",
                                "function_id": "F_0_0_0_14",
                                "childs": []
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 226,
                        "col": 48,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_3",
                        "unparse_info": "mars_kernel_0_8_data_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_0"
                    },
                    {
                        "line": 226,
                        "col": 73,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_4",
                        "unparse_info": "mars_kernel_0_8_data_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_1"
                    },
                    {
                        "line": 226,
                        "col": 98,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_5",
                        "unparse_info": "mars_kernel_0_8_data_0_2",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_2"
                    },
                    {
                        "line": 226,
                        "col": 123,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_6",
                        "unparse_info": "mars_kernel_0_8_data_0_3",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_3"
                    },
                    {
                        "line": 226,
                        "col": 148,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_7",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 226,
                        "col": 160,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_8",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    },
                    {
                        "line": 226,
                        "col": 169,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_9",
                        "unparse_info": "mars_kernel_0_8_result1_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_0"
                    },
                    {
                        "line": 226,
                        "col": 197,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_10",
                        "unparse_info": "mars_kernel_0_8_result1_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_1"
                    },
                    {
                        "line": 226,
                        "col": 225,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_11",
                        "unparse_info": "mars_kernel_0_8_result2_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_0"
                    },
                    {
                        "line": 226,
                        "col": 253,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_12",
                        "unparse_info": "mars_kernel_0_8_result2_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_1"
                    },
                    {
                        "line": 226,
                        "col": 281,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1_0_1_13",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 228,
                        "col": 48,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_3",
                        "unparse_info": "mars_kernel_0_8_data_0_3",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_3"
                    },
                    {
                        "line": 228,
                        "col": 73,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_4",
                        "unparse_info": "mars_kernel_0_8_data_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_0"
                    },
                    {
                        "line": 228,
                        "col": 98,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_5",
                        "unparse_info": "mars_kernel_0_8_data_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_1"
                    },
                    {
                        "line": 228,
                        "col": 123,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_6",
                        "unparse_info": "mars_kernel_0_8_data_0_2",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_2"
                    },
                    {
                        "line": 228,
                        "col": 148,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_7",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 228,
                        "col": 160,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_8",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    },
                    {
                        "line": 228,
                        "col": 169,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_9",
                        "unparse_info": "mars_kernel_0_8_result1_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_1"
                    },
                    {
                        "line": 228,
                        "col": 197,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_10",
                        "unparse_info": "mars_kernel_0_8_result1_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_0"
                    },
                    {
                        "line": 228,
                        "col": 225,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_11",
                        "unparse_info": "mars_kernel_0_8_result2_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_1"
                    },
                    {
                        "line": 228,
                        "col": 253,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_12",
                        "unparse_info": "mars_kernel_0_8_result2_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_0"
                    },
                    {
                        "line": 228,
                        "col": 281,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1_0_1_13",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 230,
                        "col": 48,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_3",
                        "unparse_info": "mars_kernel_0_8_data_0_2",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_2"
                    },
                    {
                        "line": 230,
                        "col": 73,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_4",
                        "unparse_info": "mars_kernel_0_8_data_0_3",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_3"
                    },
                    {
                        "line": 230,
                        "col": 98,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_5",
                        "unparse_info": "mars_kernel_0_8_data_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_0"
                    },
                    {
                        "line": 230,
                        "col": 123,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_6",
                        "unparse_info": "mars_kernel_0_8_data_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_1"
                    },
                    {
                        "line": 230,
                        "col": 148,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_7",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 230,
                        "col": 160,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_8",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    },
                    {
                        "line": 230,
                        "col": 169,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_9",
                        "unparse_info": "mars_kernel_0_8_result1_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_0"
                    },
                    {
                        "line": 230,
                        "col": 197,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_10",
                        "unparse_info": "mars_kernel_0_8_result1_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_1"
                    },
                    {
                        "line": 230,
                        "col": 225,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_11",
                        "unparse_info": "mars_kernel_0_8_result2_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_0"
                    },
                    {
                        "line": 230,
                        "col": 253,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_12",
                        "unparse_info": "mars_kernel_0_8_result2_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_1"
                    },
                    {
                        "line": 230,
                        "col": 281,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1_0_1_13",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 232,
                        "col": 48,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_3",
                        "unparse_info": "mars_kernel_0_8_data_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_1"
                    },
                    {
                        "line": 232,
                        "col": 73,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_4",
                        "unparse_info": "mars_kernel_0_8_data_0_2",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_2"
                    },
                    {
                        "line": 232,
                        "col": 98,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_5",
                        "unparse_info": "mars_kernel_0_8_data_0_3",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_3"
                    },
                    {
                        "line": 232,
                        "col": 123,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_6",
                        "unparse_info": "mars_kernel_0_8_data_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_data_0_0"
                    },
                    {
                        "line": 232,
                        "col": 148,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_7",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 232,
                        "col": 160,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_8",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    },
                    {
                        "line": 232,
                        "col": 169,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_9",
                        "unparse_info": "mars_kernel_0_8_result1_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_1"
                    },
                    {
                        "line": 232,
                        "col": 197,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_10",
                        "unparse_info": "mars_kernel_0_8_result1_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result1_0_0"
                    },
                    {
                        "line": 232,
                        "col": 225,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_11",
                        "unparse_info": "mars_kernel_0_8_result2_0_1",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_1"
                    },
                    {
                        "line": 232,
                        "col": 253,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_12",
                        "unparse_info": "mars_kernel_0_8_result2_0_0",
                        "type": "var_ref",
                        "name": "mars_kernel_0_8_result2_0_0"
                    },
                    {
                        "line": 232,
                        "col": 281,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2_0_1_13",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    }
                ],
                "var_defs": [
                    {
                        "line": 192,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_0_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 193,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_1_1",
                        "unparse_info": "n_stage",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 198,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_5_1",
                        "unparse_info": "mars_count_0_8",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 190,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_15",
                        "unparse_info": "void pipeline(int n_samples,volatile merlin_uint... global_data,float [64][784 + 1] weights,float [64][784 + 1] gradient) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 190,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_0",
                        "unparse_info": "int n_samples,volatile merlin_uint... global_data,float [64][784 + 1] weights,float [64][784 + 1] gradient",
                        "type": "stmt"
                    },
                    {
                        "line": 191,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_15_2",
                        "unparse_info": "function definition: void pipeline(int n_samples,volatile merlin_uint... global_data,float [64][784 + 1] weights,float [64][784 + 1] gradient) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 191,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0",
                        "unparse_info": "{int i;int n_stage = n_samples / 32;float data_0[32][784 + 64];float result1_0[32][64];float result2_0[32][64];int mars_count_0_8 = 0;float mars_kernel_0_8_data_0_0[32][784 + 64];#pragma HLS array_partition variable=mars_kernel_0_8_data_0_0 cyclic factor=8 dim=2float mars_kernel_0_8_data_0_1[32][784 + 64];float mars_kernel_0_8_data_0_2[32][784 + 64];float mars_kernel_0_8_data_0_3[32][784 + 64];float mars_kernel_0_8_result1_0_0[32][64];#pragma HLS array_partition variable=mars_kernel_0_8_result1_0_0 complete dim=2float mars_kernel_0_8_result1_0_1[32][64];#pragma HLS array_partition variable=mars_kernel_0_8_result1_0_1 complete dim=2float mars_kernel_0_8_result2_0_0[32][64];#pragma HLS array_partition variable=mars_kernel_0_8_result2_0_0 complete dim=2float mars_kernel_0_8_result2_0_1[32][64];#pragma HLS array_partition variable=mars_kernel_0_8_result2_0_1 complete dim=2merlinL1:for(i = 0;i < n_stage + 3;i++) {#pragma HLS loop_tripcount max=1875if(mars_count_0_8 == 0) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else if(mars_count_0_8 == 1) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);else if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);mars_count_0_8++;if(mars_count_0_8 == 4) mars_count_0_8 = 0;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 192,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_0",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 193,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_1",
                        "unparse_info": "int n_stage = n_samples / 32;",
                        "type": "stmt"
                    },
                    {
                        "line": 195,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_2",
                        "unparse_info": "float data_0[32][784 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 196,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_3",
                        "unparse_info": "float result1_0[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_4",
                        "unparse_info": "float result2_0[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 198,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_5",
                        "unparse_info": "int mars_count_0_8 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 199,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_6",
                        "unparse_info": "float mars_kernel_0_8_data_0_0[32][784 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 201,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_7",
                        "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_8_data_0_0 cyclic factor=8 dim=2",
                        "type": "stmt"
                    },
                    {
                        "line": 202,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_8",
                        "unparse_info": "float mars_kernel_0_8_data_0_1[32][784 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 203,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_9",
                        "unparse_info": "float mars_kernel_0_8_data_0_2[32][784 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 204,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_10",
                        "unparse_info": "float mars_kernel_0_8_data_0_3[32][784 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 205,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_11",
                        "unparse_info": "float mars_kernel_0_8_result1_0_0[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 207,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_12",
                        "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_8_result1_0_0 complete dim=2",
                        "type": "stmt"
                    },
                    {
                        "line": 208,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_13",
                        "unparse_info": "float mars_kernel_0_8_result1_0_1[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 210,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_14",
                        "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_8_result1_0_1 complete dim=2",
                        "type": "stmt"
                    },
                    {
                        "line": 211,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_15",
                        "unparse_info": "float mars_kernel_0_8_result2_0_0[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 213,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_16",
                        "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_8_result2_0_0 complete dim=2",
                        "type": "stmt"
                    },
                    {
                        "line": 214,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_15_2_0_17",
                        "unparse_info": "float mars_kernel_0_8_result2_0_1[32][64];",
                        "type": "stmt"
                    },
                    {
                        "line": 216,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_18",
                        "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_8_result2_0_1 complete dim=2",
                        "type": "stmt"
                    },
                    {
                        "line": 217,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19",
                        "unparse_info": "merlinL1:for(i = 0;i < n_stage + 3;i++) {#pragma HLS loop_tripcount max=1875if(mars_count_0_8 == 0) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else if(mars_count_0_8 == 1) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);else if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);mars_count_0_8++;if(mars_count_0_8 == 4) mars_count_0_8 = 0;}",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_15_2_0_19_0",
                        "unparse_info": "for(i = 0;i < n_stage + 3;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_1",
                        "unparse_info": "i < n_stage + 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 222,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3",
                        "unparse_info": "{#pragma HLS loop_tripcount max=1875if(mars_count_0_8 == 0) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else if(mars_count_0_8 == 1) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);else if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);mars_count_0_8++;if(mars_count_0_8 == 4) mars_count_0_8 = 0;}",
                        "type": "stmt"
                    },
                    {
                        "line": 224,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_0",
                        "unparse_info": "#pragma HLS loop_tripcount max=1875",
                        "type": "stmt"
                    },
                    {
                        "line": 225,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1",
                        "unparse_info": "if(mars_count_0_8 == 0) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else if(mars_count_0_8 == 1) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);else if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 225,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_0",
                        "unparse_info": "mars_count_0_8 == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 226,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_1",
                        "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 11,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2",
                        "unparse_info": "if(mars_count_0_8 == 1) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);else if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_0",
                        "unparse_info": "mars_count_0_8 == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 228,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_1",
                        "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 229,
                        "col": 11,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2",
                        "unparse_info": "if(mars_count_0_8 == 2) mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);else mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 229,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_0",
                        "unparse_info": "mars_count_0_8 == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 230,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_1",
                        "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,mars_kernel_0_8_data_0_1,global_data,gradient,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result2_0_0,mars_kernel_0_8_result2_0_1,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_1_2_2_2",
                        "unparse_info": "mars_kernel_0_8(i,0,- 1 + n_samples / 32,mars_kernel_0_8_data_0_1,mars_kernel_0_8_data_0_2,mars_kernel_0_8_data_0_3,mars_kernel_0_8_data_0_0,global_data,gradient,mars_kernel_0_8_result1_0_1,mars_kernel_0_8_result1_0_0,mars_kernel_0_8_result2_0_1,mars_kernel_0_8_result2_0_0,weights);",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_2",
                        "unparse_info": "mars_count_0_8++;",
                        "type": "stmt"
                    },
                    {
                        "line": 234,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_3",
                        "unparse_info": "if(mars_count_0_8 == 4) mars_count_0_8 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 234,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_3_0",
                        "unparse_info": "mars_count_0_8 == 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_15_2_0_19_0_3_3_1",
                        "unparse_info": "mars_count_0_8 = 0;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 180,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_14",
                "unparse_info": "void mars_kernel_0_8(int mars_i,int mars_init,int mars_cond,float [32][784 + 64] mars_data_0_0,float [32][784 + 64] mars_data_0_1,float [32][784 + 64] mars_data_0_2,float [32][784 + 64] mars_data_0_3,volatile merlin_uint... global_data,float [64][784 + 1] mars_gradient_3,float [32][64] mars_result1_0_1,float [32][64] mars_result1_0_2,float [32][64] mars_result2_0_2,float [32][64] mars_result2_0_3,float [64][784 + 1] mars_weights_1) {...}",
                "type": "function",
                "name": "mars_kernel_0_8",
                "begin": "181",
                "end": "188",
                "arrays": [],
                "childs": [
                    {
                        "line": 184,
                        "col": 33,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_1_0",
                        "unparse_info": "mars_kernel_0_8_node_0_stage_0(mars_i - 0,(int )(mars_i >= mars_init + 0 & mars_i <= mars_cond + 0),mars_data_0_0,global_data)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_8_node_0_stage_0",
                        "function_id": "F_0_0_0_10",
                        "childs": []
                    },
                    {
                        "line": 185,
                        "col": 33,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_2_0",
                        "unparse_info": "mars_kernel_0_8_node_1_stage_1(mars_i - 1,(int )(mars_i >= mars_init + 1 & mars_i <= mars_cond + 1),mars_data_0_1,mars_result1_0_1,mars_weights_1)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_8_node_1_stage_1",
                        "function_id": "F_0_0_0_11",
                        "childs": []
                    },
                    {
                        "line": 186,
                        "col": 33,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_3_0",
                        "unparse_info": "mars_kernel_0_8_node_2_stage_2(mars_i - 2,(int )(mars_i >= mars_init + 2 & mars_i <= mars_cond + 2),mars_data_0_2,mars_result1_0_2,mars_result2_0_2)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_8_node_2_stage_2",
                        "function_id": "F_0_0_0_12",
                        "childs": []
                    },
                    {
                        "line": 187,
                        "col": 33,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_4_0",
                        "unparse_info": "mars_kernel_0_8_node_3_stage_3(mars_i - 3,(int )(mars_i >= mars_init + 3 & mars_i <= mars_cond + 3),mars_data_0_3,mars_gradient_3,mars_result2_0_3)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_8_node_3_stage_3",
                        "function_id": "F_0_0_0_13",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 184,
                        "col": 103,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_1_0_1_2",
                        "unparse_info": "mars_data_0_0",
                        "type": "var_ref",
                        "name": "mars_data_0_0"
                    },
                    {
                        "line": 184,
                        "col": 117,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_1_0_1_3",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 185,
                        "col": 103,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_2_0_1_2",
                        "unparse_info": "mars_data_0_1",
                        "type": "var_ref",
                        "name": "mars_data_0_1"
                    },
                    {
                        "line": 185,
                        "col": 117,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_2_0_1_3",
                        "unparse_info": "mars_result1_0_1",
                        "type": "var_ref",
                        "name": "mars_result1_0_1"
                    },
                    {
                        "line": 185,
                        "col": 134,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_2_0_1_4",
                        "unparse_info": "mars_weights_1",
                        "type": "var_ref",
                        "name": "mars_weights_1"
                    },
                    {
                        "line": 186,
                        "col": 103,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_3_0_1_2",
                        "unparse_info": "mars_data_0_2",
                        "type": "var_ref",
                        "name": "mars_data_0_2"
                    },
                    {
                        "line": 186,
                        "col": 117,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_3_0_1_3",
                        "unparse_info": "mars_result1_0_2",
                        "type": "var_ref",
                        "name": "mars_result1_0_2"
                    },
                    {
                        "line": 186,
                        "col": 134,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_3_0_1_4",
                        "unparse_info": "mars_result2_0_2",
                        "type": "var_ref",
                        "name": "mars_result2_0_2"
                    },
                    {
                        "line": 187,
                        "col": 103,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_4_0_1_2",
                        "unparse_info": "mars_data_0_3",
                        "type": "var_ref",
                        "name": "mars_data_0_3"
                    },
                    {
                        "line": 187,
                        "col": 117,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_4_0_1_3",
                        "unparse_info": "mars_gradient_3",
                        "type": "var_ref",
                        "name": "mars_gradient_3"
                    },
                    {
                        "line": 187,
                        "col": 133,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_4_0_1_4",
                        "unparse_info": "mars_result2_0_3",
                        "type": "var_ref",
                        "name": "mars_result2_0_3"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 180,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_14",
                        "unparse_info": "void mars_kernel_0_8(int mars_i,int mars_init,int mars_cond,float [32][784 + 64] mars_data_0_0,float [32][784 + 64] mars_data_0_1,float [32][784 + 64] mars_data_0_2,float [32][784 + 64] mars_data_0_3,volatile merlin_uint... global_data,float [64][784 + 1] mars_gradient_3,float [32][64] mars_result1_0_1,float [32][64] mars_result1_0_2,float [32][64] mars_result2_0_2,float [32][64] mars_result2_0_3,float [64][784 + 1] mars_weights_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 180,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_0",
                        "unparse_info": "int mars_i,int mars_init,int mars_cond,float [32][784 + 64] mars_data_0_0,float [32][784 + 64] mars_data_0_1,float [32][784 + 64] mars_data_0_2,float [32][784 + 64] mars_data_0_3,volatile merlin_uint... global_data,float [64][784 + 1] mars_gradient_3,float [32][64] mars_result1_0_1,float [32][64] mars_result1_0_2,float [32][64] mars_result2_0_2,float [32][64] mars_result2_0_3,float [64][784 + 1] mars_weights_1",
                        "type": "stmt"
                    },
                    {
                        "line": 181,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_14_2",
                        "unparse_info": "function definition: void mars_kernel_0_8(int mars_i,int mars_init,int mars_cond,float [32][784 + 64] mars_data_0_0,float [32][784 + 64] mars_data_0_1,float [32][784 + 64] mars_data_0_2,float [32][784 + 64] mars_data_0_3,volatile merlin_uint... global_data,float [64][784 + 1] mars_gradient_3,float [32][64] mars_result1_0_1,float [32][64] mars_result1_0_2,float [32][64] mars_result2_0_2,float [32][64] mars_result2_0_3,float [64][784 + 1] mars_weights_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 181,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFmars_kernel_0_8_node_0_stage_0(mars_i - 0,(int )(mars_i >= mars_init + 0 & mars_i <= mars_cond + 0),mars_data_0_0,global_data);mars_kernel_0_8_node_1_stage_1(mars_i - 1,(int )(mars_i >= mars_init + 1 & mars_i <= mars_cond + 1),mars_data_0_1,mars_result1_0_1,mars_weights_1);mars_kernel_0_8_node_2_stage_2(mars_i - 2,(int )(mars_i >= mars_init + 2 & mars_i <= mars_cond + 2),mars_data_0_2,mars_result1_0_2,mars_result2_0_2);mars_kernel_0_8_node_3_stage_3(mars_i - 3,(int )(mars_i >= mars_init + 3 & mars_i <= mars_cond + 3),mars_data_0_3,mars_gradient_3,mars_result2_0_3);}",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 184,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_1",
                        "unparse_info": "mars_kernel_0_8_node_0_stage_0(mars_i - 0,(int )(mars_i >= mars_init + 0 & mars_i <= mars_cond + 0),mars_data_0_0,global_data);",
                        "type": "stmt"
                    },
                    {
                        "line": 185,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_2",
                        "unparse_info": "mars_kernel_0_8_node_1_stage_1(mars_i - 1,(int )(mars_i >= mars_init + 1 & mars_i <= mars_cond + 1),mars_data_0_1,mars_result1_0_1,mars_weights_1);",
                        "type": "stmt"
                    },
                    {
                        "line": 186,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_3",
                        "unparse_info": "mars_kernel_0_8_node_2_stage_2(mars_i - 2,(int )(mars_i >= mars_init + 2 & mars_i <= mars_cond + 2),mars_data_0_2,mars_result1_0_2,mars_result2_0_2);",
                        "type": "stmt"
                    },
                    {
                        "line": 187,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_14_2_0_4",
                        "unparse_info": "mars_kernel_0_8_node_3_stage_3(mars_i - 3,(int )(mars_i >= mars_init + 3 & mars_i <= mars_cond + 3),mars_data_0_3,mars_gradient_3,mars_result2_0_3);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 144,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_10",
                "unparse_info": "void mars_kernel_0_8_node_0_stage_0(int i,int exec,float [32][784 + 64] data_0,volatile merlin_uint... global_data) {...}",
                "type": "function",
                "name": "mars_kernel_0_8_node_0_stage_0",
                "begin": "145",
                "end": "152",
                "arrays": [],
                "childs": [
                    {
                        "line": 149,
                        "col": 14,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_1_0_0",
                        "unparse_info": "recv_data(global_data,(unsigned int )(i * 32 *(784 + 64)),data_0)",
                        "type": "callfunction",
                        "name": "recv_data",
                        "function_id": "F_0_0_0_6",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 149,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_1_0_0_1_0",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    },
                    {
                        "line": 149,
                        "col": 64,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_1_0_0_1_2",
                        "unparse_info": "data_0",
                        "type": "var_ref",
                        "name": "data_0"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 144,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_10",
                        "unparse_info": "void mars_kernel_0_8_node_0_stage_0(int i,int exec,float [32][784 + 64] data_0,volatile merlin_uint... global_data) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 144,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_0",
                        "unparse_info": "int i,int exec,float [32][784 + 64] data_0,volatile merlin_uint... global_data",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_10_2",
                        "unparse_info": "function definition: void mars_kernel_0_8_node_0_stage_0(int i,int exec,float [32][784 + 64] data_0,volatile merlin_uint... global_data) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {recv_data(global_data,(unsigned int )(i * 32 *(784 + 64)),data_0);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 147,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1",
                        "unparse_info": "if(exec == 1) {recv_data(global_data,(unsigned int )(i * 32 *(784 + 64)),data_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 18,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_1",
                        "unparse_info": "{recv_data(global_data,(unsigned int )(i * 32 *(784 + 64)),data_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 149,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_10_2_0_1_1_0",
                        "unparse_info": "recv_data(global_data,(unsigned int )(i * 32 *(784 + 64)),data_0);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 35,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_6",
                "unparse_info": "void recv_data(volatile merlin_uint... global_data,unsigned int offset,float [32][784 + 64] data) {...}",
                "type": "function",
                "name": "recv_data",
                "begin": "36",
                "end": "39",
                "arrays": [],
                "childs": [
                    {
                        "line": 38,
                        "col": 40,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_2_0_0_0",
                        "unparse_info": "memcpy_wide_bus_read_float_2d_848_512(data,0,0,(merlin_uint_512 *)global_data,(offset * 4),(unsigned long )((64 + 784) * 32 * 4),27136L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_read_float_2d_848_512",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 38,
                        "col": 41,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_2_0_0_0_1_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 38,
                        "col": 69,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_2_0_0_0_1_3_0",
                        "unparse_info": "global_data",
                        "type": "var_ref",
                        "name": "global_data"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 35,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_6",
                        "unparse_info": "void recv_data(volatile merlin_uint... global_data,unsigned int offset,float [32][784 + 64] data) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_0",
                        "unparse_info": "volatile merlin_uint... global_data,unsigned int offset,float [32][784 + 64] data",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_6_2",
                        "unparse_info": "function definition: void recv_data(volatile merlin_uint... global_data,unsigned int offset,float [32][784 + 64] data) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_2_0",
                        "unparse_info": "{memcpy_wide_bus_read_float_2d_848_512(data,0,0,(merlin_uint_512 *)global_data,(offset * 4),(unsigned long )((64 + 784) * 32 * 4),27136L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 38,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_6_2_0_0",
                        "unparse_info": "memcpy_wide_bus_read_float_2d_848_512(data,0,0,(merlin_uint_512 *)global_data,(offset * 4),(unsigned long )((64 + 784) * 32 * 4),27136L);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 1048,
                "col": 1,
                "source": "mars_wide_bus_2d.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_read_float_2d_848_512(float [][848] a_buf,size_t index2_offset,size_t index1_offset,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_read_float_2d_848_512",
                "begin": "1051",
                "end": "1097",
                "arrays": [],
                "childs": [
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 1085,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "1085",
                        "end": "1092",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 1090,
                                "col": 22,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "(merlin_get_range_512(&a[start],(j * data_width),data_width))",
                                "type": "callfunction",
                                "name": "merlin_get_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 1097,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "1097",
                        "end": "1140",
                        "lc-trip-count": 0,
                        "loop_label": "L2",
                        "loop_body_line": 1097,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 1106,
                                "col": 9,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "1106",
                                "end": "1112",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 1110,
                                        "col": 26,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 1116,
                                "col": 9,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "1116",
                                "end": "1124",
                                "lc-trip-count": 0,
                                "childs": [
                                    {
                                        "line": 1117,
                                        "col": 11,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 848;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "1117",
                                        "end": "1123",
                                        "lc-trip-count": 848,
                                        "childs": [
                                            {
                                                "line": 1121,
                                                "col": 28,
                                                "source": "mars_wide_bus_2d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                                "type": "callfunction",
                                                "name": "merlin_get_range_512",
                                                "function_id": "",
                                                "childs": []
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "line": 1128,
                                "col": 7,
                                "source": "mars_wide_bus_2d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "1128",
                                "end": "1137",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 1134,
                                        "col": 24,
                                        "source": "mars_wide_bus_2d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_512(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 1090,
                        "col": 22,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1091,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1110,
                        "col": 26,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1111,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1121,
                        "col": 28,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1122,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 1134,
                        "col": 24,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 1136,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 1053,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1054,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1055,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1056,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1057,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1058,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1059,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1060,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1061,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1062,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1066,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1067,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1068,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1069,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1078,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1089,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1090,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1110,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1121,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1134,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 1135,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_index",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 1048,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_read_float_2d_848_512(float [][848] a_buf,size_t index2_offset,size_t index1_offset,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1048,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float [][848] a_buf,size_t index2_offset,size_t index1_offset,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 1051,
                        "col": 34,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_read_float_2d_848_512(float [][848] a_buf,size_t index2_offset,size_t index1_offset,merlin_uint_512 * a,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1051,
                        "col": 34,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t i;size_t j;size_t index2 = index2_offset;size_t index1 = index1_offset;const size_t index_offset = 848 * index2_offset + index1_offset;const size_t bound = 848 / num_elements;const size_t bound0 = num_elements / 848;int aligned = 0;if(848 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(num_elements % 848 == 0 && index2_offset * 848 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 848 / num_elements;}int len =(end - start);if(head_align == 0) len =((buf_size + num_elements - 1) / num_elements);len <= const_buf_size / num_elements + 2?((void )0) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__);len >= buf_size / num_elements?((void )0) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__);if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}return ;}L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1052,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 1053,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 1054,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 1055,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1056,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1057,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 1058,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1059,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 1060,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1061,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1062,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 1064,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index2 = index2_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1065,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index1 = index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1066,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t index_offset = 848 * index2_offset + index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1067,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound = 848 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1068,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound0 = num_elements / 848;",
                        "type": "stmt"
                    },
                    {
                        "line": 1069,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int aligned = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(848 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(num_elements % 848 == 0 && index2_offset * 848 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 848 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "848 % num_elements == 0 && index1_offset % num_elements == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1070,
                        "col": 76,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 1;index1 = index1_offset / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1071,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1072,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = index1_offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1073,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(num_elements % 848 == 0 && index2_offset * 848 % num_elements == 0 && !index1_offset) {aligned = - 1;index2 = index2_offset * 848 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1073,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements % 848 == 0 && index2_offset * 848 % num_elements == 0 && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1074,
                        "col": 80,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = - 1;index2 = index2_offset * 848 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1075,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1076,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = index2_offset * 848 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1078,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int len =(end - start);",
                        "type": "stmt"
                    },
                    {
                        "line": 1079,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 1079,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1080,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =((buf_size + num_elements - 1) / num_elements);",
                        "type": "stmt"
                    },
                    {
                        "line": 1082,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len <= const_buf_size / num_elements + 2?((void )0) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_2d.h\",1082,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 1083,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len >= buf_size / num_elements?((void )0) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_2d.h\",1083,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "1 == len;",
                        "type": "stmt"
                    },
                    {
                        "line": 1084,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 10,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1085,
                        "col": 40,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buf_index = j - head_align + index_offset;int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1086,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1087,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align || j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1087,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align || j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1088,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1089,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_index = j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1090,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1091,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1093,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 1096,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 3,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 8,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 8,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < len;",
                        "type": "stmt"
                    },
                    {
                        "line": 1097,
                        "col": 29,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1101,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 5,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0 && aligned;",
                        "type": "stmt"
                    },
                    {
                        "line": 1104,
                        "col": 37,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}else if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1105,
                        "col": 25,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 21,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1106,
                        "col": 44,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1107,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1108,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1108,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1109,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1110,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1111,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index2][index1 * num_elements + j] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index1 == bound - 1) {index1 = 0;++index2;}else index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 == bound - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index1 = 0;++index2;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 1113,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == - 1) {int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 18,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1114,
                        "col": 33,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1115,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 14,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 22,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < bound0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1116,
                        "col": 41,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j1 = 0;j1 < 848;++j1) {j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 848;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 16,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 16,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 24,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 848;",
                        "type": "stmt"
                    },
                    {
                        "line": 1117,
                        "col": 43,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j =(j0 * 848 + j1);if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1118,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j =(j0 * 848 + j1);",
                        "type": "stmt"
                    },
                    {
                        "line": 1119,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1119,
                        "col": 17,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1120,
                        "col": 15,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1121,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1122,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index2 * bound0 + j0][j1] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    },
                    {
                        "line": 1125,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 1127,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 7,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 12,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 19,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 1128,
                        "col": 42,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));size_t buf_index = i * num_elements + j - head_align + index_offset;a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));}",
                        "type": "stmt"
                    },
                    {
                        "line": 1129,
                        "col": 1,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 1130,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1130,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1131,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1132,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1132,
                        "col": 13,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 1133,
                        "col": 11,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 1134,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits =(merlin_get_range_512(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 1135,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_index = i * num_elements + j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 1136,
                        "col": 9,
                        "source": "mars_wide_bus_2d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buf_index / 848][buf_index % 848] = *((float *)(&raw_bits));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 153,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_11",
                "unparse_info": "void mars_kernel_0_8_node_1_stage_1(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [64][784 + 1] weights) {...}",
                "type": "function",
                "name": "mars_kernel_0_8_node_1_stage_1",
                "begin": "154",
                "end": "161",
                "arrays": [],
                "childs": [
                    {
                        "line": 158,
                        "col": 13,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1_0_0",
                        "unparse_info": "compute1(data_0,weights,result1_0)",
                        "type": "callfunction",
                        "name": "compute1",
                        "function_id": "F_0_0_0_7",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 158,
                        "col": 14,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1_0_0_1_0",
                        "unparse_info": "data_0",
                        "type": "var_ref",
                        "name": "data_0"
                    },
                    {
                        "line": 158,
                        "col": 21,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1_0_0_1_1",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 158,
                        "col": 29,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1_0_0_1_2",
                        "unparse_info": "result1_0",
                        "type": "var_ref",
                        "name": "result1_0"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 153,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_11",
                        "unparse_info": "void mars_kernel_0_8_node_1_stage_1(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [64][784 + 1] weights) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 153,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_0",
                        "unparse_info": "int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [64][784 + 1] weights",
                        "type": "stmt"
                    },
                    {
                        "line": 154,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_11_2",
                        "unparse_info": "function definition: void mars_kernel_0_8_node_1_stage_1(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [64][784 + 1] weights) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 154,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {compute1(data_0,weights,result1_0);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 156,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 157,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1",
                        "unparse_info": "if(exec == 1) {compute1(data_0,weights,result1_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 157,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 157,
                        "col": 18,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1",
                        "unparse_info": "{compute1(data_0,weights,result1_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 158,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_11_2_0_1_1_0",
                        "unparse_info": "compute1(data_0,weights,result1_0);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 41,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_7",
                "unparse_info": "void compute1(float [32][784 + 64] data,float [64][784 + 1] weights,float [32][64] result1) {...}",
                "type": "function",
                "name": "compute1",
                "begin": "42",
                "end": "65",
                "arrays": [],
                "childs": [
                    {
                        "line": 47,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_3_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "47",
                        "end": "55",
                        "lc-trip-count": 32,
                        "loop_label": "merlinL3",
                        "loop_body_line": 51,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 55,
                                "col": 5,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_7_2_0_3_0_3_1_0",
                                "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                "type": "loop",
                                "name": "k",
                                "canonical": "yes",
                                "begin": "55",
                                "end": "62",
                                "lc-trip-count": 64,
                                "loop_label": "merlinL2",
                                "loop_body_line": 58,
                                "loop_body_col": 1,
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    },
                    {
                        "line": 65,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_4_0",
                        "unparse_info": "for(i = 0;i < 784;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "65",
                        "end": "67",
                        "lc-trip-count": 784,
                        "loop_label": "STAGE1uD0",
                        "loop_body_line": 65,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 67,
                                "col": 5,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_7_2_0_4_0_3_0_0",
                                "unparse_info": "for(j = 0;j < 32;j++) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "67",
                                "end": "76",
                                "lc-trip-count": 32,
                                "loop_label": "STAGE1un0",
                                "loop_body_line": 72,
                                "loop_body_col": 1,
                                "childs": [
                                    {
                                        "line": 76,
                                        "col": 7,
                                        "source": "__merlinkernel_logistic_regression_kernel.c",
                                        "topo_id": "L_0_0_0_7_2_0_4_0_3_0_0_3_1_0",
                                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                        "type": "loop",
                                        "name": "k",
                                        "canonical": "yes",
                                        "begin": "76",
                                        "end": "83",
                                        "lc-trip-count": 64,
                                        "loop_label": "STAGE1uL0",
                                        "loop_body_line": 79,
                                        "loop_body_col": 1,
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 61,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_3_1_0_0_0_0",
                        "unparse_info": "result1",
                        "type": "var_ref",
                        "name": "result1"
                    },
                    {
                        "line": 61,
                        "col": 23,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_3_1_0_1_0_0",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 82,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3_1_0_0_0_0",
                        "unparse_info": "result1",
                        "type": "var_ref",
                        "name": "result1"
                    },
                    {
                        "line": 82,
                        "col": 26,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3_1_0_1_0_0_0",
                        "unparse_info": "weights",
                        "type": "var_ref",
                        "name": "weights"
                    },
                    {
                        "line": 82,
                        "col": 46,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3_1_0_1_1_0_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    }
                ],
                "var_defs": [
                    {
                        "line": 43,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_0_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_1_1",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_2_1",
                        "unparse_info": "k",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 41,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_7",
                        "unparse_info": "void compute1(float [32][784 + 64] data,float [64][784 + 1] weights,float [32][64] result1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_0",
                        "unparse_info": "float [32][784 + 64] data,float [64][784 + 1] weights,float [32][64] result1",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_7_2",
                        "unparse_info": "function definition: void compute1(float [32][784 + 64] data,float [64][784 + 1] weights,float [32][64] result1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0",
                        "unparse_info": "{int i;int j;int k;merlinL3:for(j = 0;j < 32;j++) {#pragma HLS pipelinemerlinL2:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] = weights[k][0];}}STAGE1uD0:for(i = 0;i < 784;i++) {STAGE1un0:for(j = 0;j < 32;j++) {#pragma HLS pipelineSTAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 43,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_7_2_0_0",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_7_2_0_1",
                        "unparse_info": "int j;",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_7_2_0_2",
                        "unparse_info": "int k;",
                        "type": "stmt"
                    },
                    {
                        "line": 46,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3",
                        "unparse_info": "merlinL3:for(j = 0;j < 32;j++) {#pragma HLS pipelinemerlinL2:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] = weights[k][0];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_3_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_0",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_0_0",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_1",
                        "unparse_info": "j < 32;",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3",
                        "unparse_info": "{#pragma HLS pipelinemerlinL2:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] = weights[k][0];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_0",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1",
                        "unparse_info": "merlinL2:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] = weights[k][0];}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_3_0_3_1_0",
                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_0",
                        "unparse_info": "k = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_0_0",
                        "unparse_info": "k = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 17,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_1",
                        "unparse_info": "k < 64;",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_3",
                        "unparse_info": "{#pragma HLS unrollresult1[j][k] = weights[k][0];}",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 61,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_3_0_3_1_0_3_1",
                        "unparse_info": "result1[j][k] = weights[k][0];",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4",
                        "unparse_info": "STAGE1uD0:for(i = 0;i < 784;i++) {STAGE1un0:for(j = 0;j < 32;j++) {#pragma HLS pipelineSTAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_4_0",
                        "unparse_info": "for(i = 0;i < 784;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_1",
                        "unparse_info": "i < 784;",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 29,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3",
                        "unparse_info": "{STAGE1un0:for(j = 0;j < 32;j++) {#pragma HLS pipelineSTAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 66,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0",
                        "unparse_info": "STAGE1un0:for(j = 0;j < 32;j++) {#pragma HLS pipelineSTAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_4_0_3_0_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_0",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_0_0",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 17,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_1",
                        "unparse_info": "j < 32;",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3",
                        "unparse_info": "{#pragma HLS pipelineSTAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_0",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1",
                        "unparse_info": "STAGE1uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_7_2_0_4_0_3_0_0_3_1_0",
                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 12,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_0",
                        "unparse_info": "k = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 12,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_0_0",
                        "unparse_info": "k = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 19,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_1",
                        "unparse_info": "k < 64;",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3",
                        "unparse_info": "{#pragma HLS unrollresult1[j][k] += weights[k][i + 1] * data[j][i + 64];}",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_7_2_0_4_0_3_0_0_3_1_0_3_1",
                        "unparse_info": "result1[j][k] += weights[k][i + 1] * data[j][i + 64];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 162,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_12",
                "unparse_info": "void mars_kernel_0_8_node_2_stage_2(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [32][64] result2_0) {...}",
                "type": "function",
                "name": "mars_kernel_0_8_node_2_stage_2",
                "begin": "163",
                "end": "170",
                "arrays": [],
                "childs": [
                    {
                        "line": 167,
                        "col": 13,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1_0_0",
                        "unparse_info": "compute2(result1_0,data_0,result2_0)",
                        "type": "callfunction",
                        "name": "compute2",
                        "function_id": "F_0_0_0_8",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 167,
                        "col": 14,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1_0_0_1_0",
                        "unparse_info": "result1_0",
                        "type": "var_ref",
                        "name": "result1_0"
                    },
                    {
                        "line": 167,
                        "col": 24,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1_0_0_1_1",
                        "unparse_info": "data_0",
                        "type": "var_ref",
                        "name": "data_0"
                    },
                    {
                        "line": 167,
                        "col": 31,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1_0_0_1_2",
                        "unparse_info": "result2_0",
                        "type": "var_ref",
                        "name": "result2_0"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 162,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_12",
                        "unparse_info": "void mars_kernel_0_8_node_2_stage_2(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [32][64] result2_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 162,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_0",
                        "unparse_info": "int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [32][64] result2_0",
                        "type": "stmt"
                    },
                    {
                        "line": 163,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_12_2",
                        "unparse_info": "function definition: void mars_kernel_0_8_node_2_stage_2(int i,int exec,float [32][784 + 64] data_0,float [32][64] result1_0,float [32][64] result2_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 163,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {compute2(result1_0,data_0,result2_0);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 165,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1",
                        "unparse_info": "if(exec == 1) {compute2(result1_0,data_0,result2_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 18,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1",
                        "unparse_info": "{compute2(result1_0,data_0,result2_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 167,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_12_2_0_1_1_0",
                        "unparse_info": "compute2(result1_0,data_0,result2_0);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 88,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_8",
                "unparse_info": "void compute2(float [32][64] result1,float [32][784 + 64] data,float [32][64] result2) {...}",
                "type": "function",
                "name": "compute2",
                "begin": "89",
                "end": "93",
                "arrays": [],
                "childs": [
                    {
                        "line": 93,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_8_2_0_2_0",
                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                        "type": "loop",
                        "name": "k",
                        "canonical": "yes",
                        "begin": "93",
                        "end": "96",
                        "lc-trip-count": 64,
                        "loop_label": "STAGE2uL0",
                        "loop_body_line": 93,
                        "loop_body_col": 28,
                        "childs": [
                            {
                                "line": 96,
                                "col": 5,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_8_2_0_2_0_3_0_0",
                                "unparse_info": "for(j = 0;j < 32;j++) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "96",
                                "end": "103",
                                "lc-trip-count": 32,
                                "loop_label": "STAGE2un0",
                                "loop_body_line": 98,
                                "loop_body_col": 1,
                                "childs": [
                                    {
                                        "line": 102,
                                        "col": 78,
                                        "source": "__merlinkernel_logistic_regression_kernel.c",
                                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_2_0_1_1_1",
                                        "unparse_info": "sqrtf(temp)",
                                        "type": "callfunction",
                                        "name": "",
                                        "function_id": "",
                                        "childs": []
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 101,
                        "col": 34,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_1_1_0_0_1_0_0_0",
                        "unparse_info": "result1",
                        "type": "var_ref",
                        "name": "result1"
                    },
                    {
                        "line": 101,
                        "col": 50,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_1_1_0_0_1_1_0_0",
                        "unparse_info": "result1",
                        "type": "var_ref",
                        "name": "result1"
                    },
                    {
                        "line": 102,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_2_0_0_0_0",
                        "unparse_info": "result2",
                        "type": "var_ref",
                        "name": "result2"
                    },
                    {
                        "line": 102,
                        "col": 23,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_2_0_1_0_0_0_0",
                        "unparse_info": "result1",
                        "type": "var_ref",
                        "name": "result1"
                    },
                    {
                        "line": 102,
                        "col": 53,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_2_0_1_1_0_0_1_0_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    }
                ],
                "var_defs": [
                    {
                        "line": 90,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_0_1",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 91,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_1_1",
                        "unparse_info": "k",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 101,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_1_1",
                        "unparse_info": "temp",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 88,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_8",
                        "unparse_info": "void compute2(float [32][64] result1,float [32][784 + 64] data,float [32][64] result2) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_0",
                        "unparse_info": "float [32][64] result1,float [32][784 + 64] data,float [32][64] result2",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_8_2",
                        "unparse_info": "function definition: void compute2(float [32][64] result1,float [32][784 + 64] data,float [32][64] result2) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0",
                        "unparse_info": "{int j;int k;STAGE2uL0:for(k = 0;k < 64;k++) {STAGE2un0:for(j = 0;j < 32;j++) {#pragma HLS pipelinefloat temp =((float )1) + result1[j][k] * result1[j][k];result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_8_2_0_0",
                        "unparse_info": "int j;",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_8_2_0_1",
                        "unparse_info": "int k;",
                        "type": "stmt"
                    },
                    {
                        "line": 92,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2",
                        "unparse_info": "STAGE2uL0:for(k = 0;k < 64;k++) {STAGE2un0:for(j = 0;j < 32;j++) {#pragma HLS pipelinefloat temp =((float )1) + result1[j][k] * result1[j][k];result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_8_2_0_2_0",
                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_0",
                        "unparse_info": "k = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_0_0",
                        "unparse_info": "k = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_1",
                        "unparse_info": "k < 64;",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 28,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3",
                        "unparse_info": "{STAGE2un0:for(j = 0;j < 32;j++) {#pragma HLS pipelinefloat temp =((float )1) + result1[j][k] * result1[j][k];result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 95,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0",
                        "unparse_info": "STAGE2un0:for(j = 0;j < 32;j++) {#pragma HLS pipelinefloat temp =((float )1) + result1[j][k] * result1[j][k];result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);}",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_8_2_0_2_0_3_0_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_0",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_0_0",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 17,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_1",
                        "unparse_info": "j < 32;",
                        "type": "stmt"
                    },
                    {
                        "line": 98,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3",
                        "unparse_info": "{#pragma HLS pipelinefloat temp =((float )1) + result1[j][k] * result1[j][k];result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);}",
                        "type": "stmt"
                    },
                    {
                        "line": 100,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_0",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_8_2_0_2_0_3_0_0_3_1",
                        "unparse_info": "float temp =((float )1) + result1[j][k] * result1[j][k];",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0_0_3_2",
                        "unparse_info": "result2[j][k] = result1[j][k] / temp -(2.f * data[j][k] - 1.f) / sqrtf(temp);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 171,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_13",
                "unparse_info": "void mars_kernel_0_8_node_3_stage_3(int i,int exec,float [32][784 + 64] data_0,float [64][784 + 1] gradient,float [32][64] result2_0) {...}",
                "type": "function",
                "name": "mars_kernel_0_8_node_3_stage_3",
                "begin": "172",
                "end": "179",
                "arrays": [],
                "childs": [
                    {
                        "line": 176,
                        "col": 13,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1_0_0",
                        "unparse_info": "compute3(result2_0,data_0,gradient)",
                        "type": "callfunction",
                        "name": "compute3",
                        "function_id": "F_0_0_0_9",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 176,
                        "col": 14,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1_0_0_1_0",
                        "unparse_info": "result2_0",
                        "type": "var_ref",
                        "name": "result2_0"
                    },
                    {
                        "line": 176,
                        "col": 24,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1_0_0_1_1",
                        "unparse_info": "data_0",
                        "type": "var_ref",
                        "name": "data_0"
                    },
                    {
                        "line": 176,
                        "col": 31,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1_0_0_1_2",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 171,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_13",
                        "unparse_info": "void mars_kernel_0_8_node_3_stage_3(int i,int exec,float [32][784 + 64] data_0,float [64][784 + 1] gradient,float [32][64] result2_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 171,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_0",
                        "unparse_info": "int i,int exec,float [32][784 + 64] data_0,float [64][784 + 1] gradient,float [32][64] result2_0",
                        "type": "stmt"
                    },
                    {
                        "line": 172,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_13_2",
                        "unparse_info": "function definition: void mars_kernel_0_8_node_3_stage_3(int i,int exec,float [32][784 + 64] data_0,float [64][784 + 1] gradient,float [32][64] result2_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 172,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {compute3(result2_0,data_0,gradient);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 174,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1",
                        "unparse_info": "if(exec == 1) {compute3(result2_0,data_0,gradient);}",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 18,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1",
                        "unparse_info": "{compute3(result2_0,data_0,gradient);}",
                        "type": "stmt"
                    },
                    {
                        "line": 176,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_13_2_0_1_1_0",
                        "unparse_info": "compute3(result2_0,data_0,gradient);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 108,
                "col": 1,
                "source": "__merlinkernel_logistic_regression_kernel.c",
                "topo_id": "F_0_0_0_9",
                "unparse_info": "void compute3(float [32][64] result2,float [32][784 + 64] data,float [64][784 + 1] gradient) {...}",
                "type": "function",
                "name": "compute3",
                "begin": "109",
                "end": "114",
                "arrays": [],
                "childs": [
                    {
                        "line": 114,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_9_2_0_3_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "114",
                        "end": "116",
                        "lc-trip-count": 32,
                        "loop_label": "STAGE3un0",
                        "loop_body_line": 114,
                        "loop_body_col": 28,
                        "childs": [
                            {
                                "line": 116,
                                "col": 5,
                                "source": "__merlinkernel_logistic_regression_kernel.c",
                                "topo_id": "L_0_0_0_9_2_0_3_0_3_0_0",
                                "unparse_info": "for(i = 0;i < 784 + 1;i++) {...}",
                                "type": "loop",
                                "name": "i",
                                "canonical": "yes",
                                "begin": "116",
                                "end": "125",
                                "lc-trip-count": 785,
                                "loop_label": "STAGE3uD0",
                                "loop_body_line": 121,
                                "loop_body_col": 1,
                                "childs": [
                                    {
                                        "line": 125,
                                        "col": 7,
                                        "source": "__merlinkernel_logistic_regression_kernel.c",
                                        "topo_id": "L_0_0_0_9_2_0_3_0_3_0_0_3_1_0",
                                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                                        "type": "loop",
                                        "name": "k",
                                        "canonical": "yes",
                                        "begin": "125",
                                        "end": "139",
                                        "lc-trip-count": 64,
                                        "loop_label": "STAGE3uL0",
                                        "loop_body_line": 128,
                                        "loop_body_col": 1,
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ]
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 136,
                        "col": 23,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_2_0_0_1_0_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 138,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_3_0_0_0_0",
                        "unparse_info": "gradient",
                        "type": "var_ref",
                        "name": "gradient"
                    },
                    {
                        "line": 138,
                        "col": 27,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_3_0_1_0_0_0",
                        "unparse_info": "result2",
                        "type": "var_ref",
                        "name": "result2"
                    }
                ],
                "var_defs": [
                    {
                        "line": 110,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_0_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 111,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_1_1",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 112,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_2_1",
                        "unparse_info": "k",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 131,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_1_1",
                        "unparse_info": "rose_temp",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 108,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_9",
                        "unparse_info": "void compute3(float [32][64] result2,float [32][784 + 64] data,float [64][784 + 1] gradient) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 108,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_0",
                        "unparse_info": "float [32][64] result2,float [32][784 + 64] data,float [64][784 + 1] gradient",
                        "type": "stmt"
                    },
                    {
                        "line": 109,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "F_0_0_0_9_2",
                        "unparse_info": "function definition: void compute3(float [32][64] result2,float [32][784 + 64] data,float [64][784 + 1] gradient) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 109,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0",
                        "unparse_info": "{int i;int j;int k;STAGE3un0:for(j = 0;j < 32;j++) {STAGE3uD0:for(i = 0;i < 784 + 1;i++) {#pragma HLS pipelineSTAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 110,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_9_2_0_0",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 111,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_9_2_0_1",
                        "unparse_info": "int j;",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_9_2_0_2",
                        "unparse_info": "int k;",
                        "type": "stmt"
                    },
                    {
                        "line": 113,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3",
                        "unparse_info": "STAGE3un0:for(j = 0;j < 32;j++) {STAGE3uD0:for(i = 0;i < 784 + 1;i++) {#pragma HLS pipelineSTAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 3,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_9_2_0_3_0",
                        "unparse_info": "for(j = 0;j < 32;j++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_0",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 8,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_0_0",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_1",
                        "unparse_info": "j < 32;",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 28,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3",
                        "unparse_info": "{STAGE3uD0:for(i = 0;i < 784 + 1;i++) {#pragma HLS pipelineSTAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0",
                        "unparse_info": "STAGE3uD0:for(i = 0;i < 784 + 1;i++) {#pragma HLS pipelineSTAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 116,
                        "col": 5,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_9_2_0_3_0_3_0_0",
                        "unparse_info": "for(i = 0;i < 784 + 1;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 116,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 116,
                        "col": 10,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 116,
                        "col": 17,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_1",
                        "unparse_info": "i < 784 + 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 121,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3",
                        "unparse_info": "{#pragma HLS pipelineSTAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 123,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_0",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 124,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1",
                        "unparse_info": "STAGE3uL0:for(k = 0;k < 64;k++) {#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}",
                        "type": "stmt"
                    },
                    {
                        "line": 125,
                        "col": 7,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "L_0_0_0_9_2_0_3_0_3_0_0_3_1_0",
                        "unparse_info": "for(k = 0;k < 64;k++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 125,
                        "col": 12,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_0",
                        "unparse_info": "k = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 125,
                        "col": 12,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_0_0",
                        "unparse_info": "k = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 125,
                        "col": 19,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_1",
                        "unparse_info": "k < 64;",
                        "type": "stmt"
                    },
                    {
                        "line": 128,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3",
                        "unparse_info": "{#pragma HLS unrollfloat rose_temp;if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}gradient[k][i] += result2[j][k] * rose_temp;}",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 1,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 131,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "V_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_1",
                        "unparse_info": "float rose_temp;",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2",
                        "unparse_info": "if(i == 0) {rose_temp = 1.f;}else {rose_temp = data[j][i - 1 + 64];}",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 13,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_0",
                        "unparse_info": "i == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 21,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_1",
                        "unparse_info": "{rose_temp = 1.f;}",
                        "type": "stmt"
                    },
                    {
                        "line": 133,
                        "col": 11,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_1_0",
                        "unparse_info": "rose_temp = 1.f;",
                        "type": "stmt"
                    },
                    {
                        "line": 135,
                        "col": 15,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_2",
                        "unparse_info": "{rose_temp = data[j][i - 1 + 64];}",
                        "type": "stmt"
                    },
                    {
                        "line": 136,
                        "col": 11,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_2_2_0",
                        "unparse_info": "rose_temp = data[j][i - 1 + 64];",
                        "type": "stmt"
                    },
                    {
                        "line": 138,
                        "col": 9,
                        "source": "__merlinkernel_logistic_regression_kernel.c",
                        "topo_id": "X_0_0_0_9_2_0_3_0_3_0_0_3_1_0_3_3",
                        "unparse_info": "gradient[k][i] += result2[j][k] * rose_temp;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 3562,
                "col": 1,
                "source": "mars_wide_bus.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_write_float_512(merlin_uint_512 * c,float * c_buf,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_write_float_512",
                "begin": "3565",
                "end": "3777",
                "arrays": [],
                "childs": [
                    {
                        "line": 3582,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "3582",
                        "end": "3591",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 3590,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits)",
                                "type": "callfunction",
                                "name": "merlin_set_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 3596,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "3596",
                        "end": "3603",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 3602,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits)",
                                "type": "callfunction",
                                "name": "merlin_set_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 3610,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus.h\",3610,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 3612,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < burst_len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "3612",
                        "end": "3778",
                        "lc-trip-count": 0,
                        "loop_label": "L3",
                        "loop_body_line": 3612,
                        "loop_body_col": 35,
                        "childs": [
                            {
                                "line": 3620,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3620",
                                "end": "3625",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3624,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3630,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3630",
                                "end": "3635",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3634,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3639,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3639",
                                "end": "3644",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3643,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3648,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3648",
                                "end": "3653",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3652,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3657,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3657",
                                "end": "3662",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3661,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3666,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3666",
                                "end": "3671",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3670,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3675,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3675",
                                "end": "3680",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3679,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3684,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3684",
                                "end": "3689",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3688,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3693,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3693",
                                "end": "3698",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3697,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3702,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3702",
                                "end": "3707",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3706,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3711,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3711",
                                "end": "3716",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3715,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3720,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3720",
                                "end": "3725",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3724,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3729,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3729",
                                "end": "3734",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3733,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3738,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3738",
                                "end": "3743",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3742,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3747,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3747",
                                "end": "3752",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3751,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 3756,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "3756",
                                "end": "3761",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 3760,
                                        "col": 9,
                                        "source": "mars_wide_bus.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_512",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    },
                    {
                        "line": 3767,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "3767",
                        "end": "3774",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 3773,
                                "col": 7,
                                "source": "mars_wide_bus.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits)",
                                "type": "callfunction",
                                "name": "merlin_set_range_512",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 3588,
                        "col": 23,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3590,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3600,
                        "col": 23,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3602,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3610,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 3622,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3624,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3632,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3634,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3641,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3643,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3650,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3652,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3659,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3661,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3668,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3670,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3677,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3679,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3686,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3688,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3695,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3697,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3704,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3706,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3713,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3715,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3722,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3724,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3731,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3733,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3740,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3742,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3749,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3751,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3758,
                        "col": 25,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3760,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 3771,
                        "col": 23,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 3773,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    }
                ],
                "var_defs": [
                    {
                        "line": 3567,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3568,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3569,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3570,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3571,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3572,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3573,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3574,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3575,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3576,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3577,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3578,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3578,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3588,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3589,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3594,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3600,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3601,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3609,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "burst_len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3622,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3623,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3632,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3633,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3641,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3642,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3650,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3651,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3659,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3660,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3668,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3669,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3677,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3678,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3686,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3687,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3695,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3696,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3704,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3705,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3713,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3714,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3722,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3723,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3731,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3732,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3740,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3741,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3749,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3750,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3758,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3759,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3765,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "pos",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3771,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_tmp",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 3772,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "raw_bits",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 3562,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_write_float_512(merlin_uint_512 * c,float * c_buf,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3562,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_uint_512 * c,float * c_buf,size_t offset_byte,size_t size_byte,const size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 3565,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_write_float_512(merlin_uint_512 * c,float * c_buf,size_t offset_byte,size_t size_byte,const size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3565,
                        "col": 69,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(float );const size_t bus_width =(512 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t len = end - start;size_t i;size_t j;if(head_align == 0) len =(buf_size + num_elements - 1) / num_elements;if(len == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}return ;}unsigned int align = 0;if(head_align != 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}start++;align++;}if(tail_align != num_elements - 1) align++;int burst_len =(len - align);burst_len <= const_buf_size / num_elements?((void )0) : __assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus.h\",3610,__PRETTY_FUNCTION__);L3:for(i = 0;i < burst_len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}}if(tail_align != num_elements - 1) {size_t pos =(len - align) * num_elements;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;float buf_tmp = c_buf[pos + j];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3566,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 3567,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(float );",
                        "type": "stmt"
                    },
                    {
                        "line": 3568,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(512 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 3569,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3570,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3571,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 3572,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3573,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 3574,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3575,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3576,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3577,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t len = end - start;",
                        "type": "stmt"
                    },
                    {
                        "line": 3578,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 3578,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 3579,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) len =(buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3579,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3580,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =(buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3581,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(len == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3581,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3581,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3582,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3582,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3582,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3582,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3582,
                        "col": 40,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3583,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3584,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3584,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3585,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3586,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3586,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3587,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3588,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[j - head_align];",
                        "type": "stmt"
                    },
                    {
                        "line": 3589,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3590,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3592,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 3594,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "unsigned int align = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3595,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align != 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}start++;align++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3595,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align != 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3595,
                        "col": 24,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}start++;align++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 3596,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3596,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3596,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3596,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3596,
                        "col": 40,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align) continue;float buf_tmp = c_buf[j - head_align];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3597,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3598,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3598,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3599,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3600,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[j - head_align];",
                        "type": "stmt"
                    },
                    {
                        "line": 3601,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3602,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3604,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start++;",
                        "type": "stmt"
                    },
                    {
                        "line": 3605,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 3607,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(tail_align != num_elements - 1) align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 3607,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align != num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3608,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 3609,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int burst_len =(len - align);",
                        "type": "stmt"
                    },
                    {
                        "line": 3610,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "burst_len <= const_buf_size / num_elements?((void )0) : __assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus.h\",3610,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 3611,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L3:for(i = 0;i < burst_len;++i) {#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3612,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < burst_len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3612,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3612,
                        "col": 8,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3612,
                        "col": 15,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < burst_len;",
                        "type": "stmt"
                    },
                    {
                        "line": 3612,
                        "col": 35,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3616,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 3619,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3619,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3619,
                        "col": 26,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3620,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3620,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3620,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3620,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3620,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j - 0];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3621,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3622,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j - 0];",
                        "type": "stmt"
                    },
                    {
                        "line": 3623,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3624,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3629,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3629,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3629,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3630,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3630,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3630,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3630,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3630,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 15];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3631,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3632,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 15];",
                        "type": "stmt"
                    },
                    {
                        "line": 3633,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3634,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3638,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 2) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3638,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 3638,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3639,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3639,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3639,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3639,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3639,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 14];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3640,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3641,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 14];",
                        "type": "stmt"
                    },
                    {
                        "line": 3642,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3643,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3647,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 3) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3647,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 3647,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3648,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3648,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3648,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3648,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3648,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 13];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3649,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3650,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 13];",
                        "type": "stmt"
                    },
                    {
                        "line": 3651,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3652,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3656,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 4) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3656,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 3656,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3657,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3657,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3657,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3657,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3657,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 12];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3658,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3659,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 12];",
                        "type": "stmt"
                    },
                    {
                        "line": 3660,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3661,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3665,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 5) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3665,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 5;",
                        "type": "stmt"
                    },
                    {
                        "line": 3665,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3666,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3666,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3666,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3666,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3666,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 11];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3667,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3668,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 11];",
                        "type": "stmt"
                    },
                    {
                        "line": 3669,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3670,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3674,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 6) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3674,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 3674,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3675,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3675,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3675,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3675,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3675,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 10];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3676,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3677,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 10];",
                        "type": "stmt"
                    },
                    {
                        "line": 3678,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3679,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3683,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 7) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3683,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 3683,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3684,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3684,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3684,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3684,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3684,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 9];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3685,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3686,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 9];",
                        "type": "stmt"
                    },
                    {
                        "line": 3687,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3688,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3692,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 8) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3692,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 3692,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3693,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3693,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3693,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3693,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3693,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 8];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3694,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3695,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 8];",
                        "type": "stmt"
                    },
                    {
                        "line": 3696,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3697,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3701,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 9) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3701,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 9;",
                        "type": "stmt"
                    },
                    {
                        "line": 3701,
                        "col": 31,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3702,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3702,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3702,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3702,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3702,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 7];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3703,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3704,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 7];",
                        "type": "stmt"
                    },
                    {
                        "line": 3705,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3706,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3710,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 10) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3710,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 10;",
                        "type": "stmt"
                    },
                    {
                        "line": 3710,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3711,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3711,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3711,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3711,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3711,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 6];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3712,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3713,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 6];",
                        "type": "stmt"
                    },
                    {
                        "line": 3714,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3715,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3719,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 11) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3719,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 11;",
                        "type": "stmt"
                    },
                    {
                        "line": 3719,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3720,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3720,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3720,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3720,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3720,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 5];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3721,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3722,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 5];",
                        "type": "stmt"
                    },
                    {
                        "line": 3723,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3724,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3728,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 12) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3728,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 12;",
                        "type": "stmt"
                    },
                    {
                        "line": 3728,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3729,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3729,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3729,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3729,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3729,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 4];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3730,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3731,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 4];",
                        "type": "stmt"
                    },
                    {
                        "line": 3732,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3733,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3737,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 13) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3737,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 3737,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3738,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3738,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3738,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3738,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3738,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 3];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3739,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3740,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 3];",
                        "type": "stmt"
                    },
                    {
                        "line": 3741,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3742,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3746,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 14) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3746,
                        "col": 14,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 14;",
                        "type": "stmt"
                    },
                    {
                        "line": 3746,
                        "col": 32,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3747,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3747,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3747,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3747,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3747,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 2];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3748,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3749,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 2];",
                        "type": "stmt"
                    },
                    {
                        "line": 3750,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3751,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3755,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3756,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3756,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3756,
                        "col": 12,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3756,
                        "col": 19,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3756,
                        "col": 42,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfloat buf_tmp = c_buf[i * num_elements + j + 1];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3757,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3758,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[i * num_elements + j + 1];",
                        "type": "stmt"
                    },
                    {
                        "line": 3759,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3760,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[i + start],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    },
                    {
                        "line": 3764,
                        "col": 3,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(tail_align != num_elements - 1) {size_t pos =(len - align) * num_elements;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;float buf_tmp = c_buf[pos + j];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3764,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align != num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 3764,
                        "col": 39,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{size_t pos =(len - align) * num_elements;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;float buf_tmp = c_buf[pos + j];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 3765,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t pos =(len - align) * num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3766,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "pos +=(num_elements - head_align) % num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3767,
                        "col": 5,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 3767,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 3767,
                        "col": 10,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 3767,
                        "col": 17,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 3767,
                        "col": 40,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j > tail_align) continue;float buf_tmp = c_buf[pos + j];int raw_bits = *((int *)(&buf_tmp));merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits);}",
                        "type": "stmt"
                    },
                    {
                        "line": 3768,
                        "col": 1,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 3769,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3769,
                        "col": 11,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 3770,
                        "col": 9,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 3771,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "float buf_tmp = c_buf[pos + j];",
                        "type": "stmt"
                    },
                    {
                        "line": 3772,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int raw_bits = *((int *)(&buf_tmp));",
                        "type": "stmt"
                    },
                    {
                        "line": 3773,
                        "col": 7,
                        "source": "mars_wide_bus.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_512(&c[end - 1],(j * data_width),data_width,raw_bits);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 48,
                "col": 1,
                "source": "memcpy_512.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void merlin_set_range_512(merlin_uint_512 * tmp,int low,int len,uint64_t val) {...}",
                "type": "function",
                "name": "merlin_set_range_512",
                "begin": "49",
                "end": "84",
                "arrays": [],
                "childs": [
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "55",
                        "end": "59",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "62",
                        "end": "66",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "69",
                        "end": "73",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "76",
                        "end": "80",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 57,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 64,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 71,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 78,
                        "col": 12,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void merlin_set_range_512(merlin_uint_512 * tmp,int low,int len,uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_uint_512 * tmp,int low,int len,uint64_t val",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void merlin_set_range_512(merlin_uint_512 * tmp,int low,int len,uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFint i;int start = low;switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 11,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 16,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 56,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 61,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 63,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 68,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 8,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 17,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 29,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 77,
                        "col": 1,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 7,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 3,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_512.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?((void )0) : __assert_fail(\"0\",\"memcpy_512.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    }
                ]
            }
        ]
    }
]