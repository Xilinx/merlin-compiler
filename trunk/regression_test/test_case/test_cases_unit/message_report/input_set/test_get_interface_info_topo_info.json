[
    {
        "line": 496,
        "col": 10,
        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
        "topo_id": "F_0_0_0_27",
        "unparse_info": "void aes256_encrypt_ecb_kernel(unsigned char [32] key,::merlin_uint_128* data) {...}",
        "type": "kernel",
        "name": "aes256_encrypt_ecb_kernel",
        "begin": "497",
        "end": "557",
        "interfaces": [
            {
                "line": 496,
                "col": 55,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_0_0",
                "unparse_info": "key",
                "type": "interface",
                "name": "key",
                "var_type": "array",
                "const": "yes"
            },
            {
                "line": 496,
                "col": 80,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_0_1",
                "unparse_info": "data",
                "type": "interface",
                "name": "data",
                "var_type": "array",
                "const": "yes"
            }
        ],
        "arrays": [
            {
                "line": 510,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_6_1",
                "unparse_info": "key_buf_0",
                "type": "array",
                "name": "key_buf_0"
            },
            {
                "line": 530,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_12_1",
                "unparse_info": "data_buf_0_0",
                "type": "array",
                "name": "data_buf_0_0"
            },
            {
                "line": 532,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_14_1",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_0",
                "type": "array",
                "name": "mars_kernel_0_2_data_buf_0_0_0"
            },
            {
                "line": 540,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_17_1",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_1",
                "type": "array",
                "name": "mars_kernel_0_2_data_buf_0_0_1"
            },
            {
                "line": 548,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_20_1",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_2",
                "type": "array",
                "name": "mars_kernel_0_2_data_buf_0_0_2"
            }
        ],
        "var_refs": [
            {
                "line": 521,
                "col": 23,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_3_1_0_1_0_0",
                "unparse_info": "key_buf_0",
                "type": "var_ref",
                "name": "key_buf_0"
            },
            {
                "line": 521,
                "col": 57,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_3_1_0_1_2",
                "unparse_info": "key",
                "type": "var_ref",
                "name": "key"
            },
            {
                "line": 565,
                "col": 32,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0_1_3",
                "unparse_info": "data",
                "type": "var_ref",
                "name": "data"
            },
            {
                "line": 565,
                "col": 37,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0_1_4",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_0",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_0"
            },
            {
                "line": 565,
                "col": 68,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0_1_5",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_1",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_1"
            },
            {
                "line": 565,
                "col": 99,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0_1_6",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_2",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_2"
            },
            {
                "line": 565,
                "col": 130,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0_1_7",
                "unparse_info": "key_buf_0",
                "type": "var_ref",
                "name": "key_buf_0"
            },
            {
                "line": 567,
                "col": 32,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0_1_3",
                "unparse_info": "data",
                "type": "var_ref",
                "name": "data"
            },
            {
                "line": 567,
                "col": 37,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0_1_4",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_2",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_2"
            },
            {
                "line": 567,
                "col": 68,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0_1_5",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_0",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_0"
            },
            {
                "line": 567,
                "col": 99,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0_1_6",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_1",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_1"
            },
            {
                "line": 567,
                "col": 130,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0_1_7",
                "unparse_info": "key_buf_0",
                "type": "var_ref",
                "name": "key_buf_0"
            },
            {
                "line": 569,
                "col": 32,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0_1_3",
                "unparse_info": "data",
                "type": "var_ref",
                "name": "data"
            },
            {
                "line": 569,
                "col": 37,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0_1_4",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_1",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_1"
            },
            {
                "line": 569,
                "col": 68,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0_1_5",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_2",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_2"
            },
            {
                "line": 569,
                "col": 99,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0_1_6",
                "unparse_info": "mars_kernel_0_2_data_buf_0_0_0",
                "type": "var_ref",
                "name": "mars_kernel_0_2_data_buf_0_0_0"
            },
            {
                "line": 569,
                "col": 130,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0_1_7",
                "unparse_info": "key_buf_0",
                "type": "var_ref",
                "name": "key_buf_0"
            }
        ],
        "var_defs": [
            {
                "line": 518,
                "col": 10,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_0_0_1",
                "unparse_info": "i1_sub",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 531,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_13_1",
                "unparse_info": "mars_count_0_2",
                "type": "var_def",
                "name": ""
            },
            {
                "line": 557,
                "col": 8,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_0_0_1",
                "unparse_info": "i1",
                "type": "var_def",
                "name": ""
            }
        ],
        "stmts": [
            {
                "line": 496,
                "col": 10,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_27",
                "unparse_info": "void aes256_encrypt_ecb_kernel(unsigned char [32] key,::merlin_uint_128* data) {...}",
                "type": "stmt"
            },
            {
                "line": 496,
                "col": 10,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_0",
                "unparse_info": "unsigned char [32] key,::merlin_uint_128* data",
                "type": "stmt"
            },
            {
                "line": 497,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_27_2",
                "unparse_info": "function definition: void aes256_encrypt_ecb_kernel(unsigned char [32] key,::merlin_uint_128* data) {...}",
                "type": "stmt"
            },
            {
                "line": 497,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0",
                "unparse_info": "{#pragma HLS INTERFACE m_axi port=data offset=slave depth=1048576#pragma HLS INTERFACE m_axi port=key offset=slave depth=32#pragma HLS INTERFACE s_axilite port=data bundle=control#pragma HLS INTERFACE s_axilite port=key bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma HLS DATA_PACK VARIABLE=dataunsigned char key_buf_0[2][32];#pragma HLS array_partition variable=key_buf_0 complete dim=2#pragma HLS array_partition variable=key_buf_0 complete dim=1{merlinL4:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {#pragma HLS UNROLLmerlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL);}}#pragma ACCEL interface variable=data max_depth=16777216 depth=16777216#pragma ACCEL interface variable=key max_depth=32 depth=32unsigned char data_buf_0_0[2][4096][16];int mars_count_0_2 = 0;unsigned char mars_kernel_0_2_data_buf_0_0_0[2][4096][16];#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_0 complete dim=3#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_0 complete dim=1unsigned char mars_kernel_0_2_data_buf_0_0_1[2][4096][16];#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_1 complete dim=3#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_1 complete dim=1unsigned char mars_kernel_0_2_data_buf_0_0_2[2][4096][16];#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_2 complete dim=3#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_2 complete dim=1merlinL3:for(int i1 = 0;i1 < 128 + 2;i1++) {if(mars_count_0_2 == 0) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0);else if(mars_count_0_2 == 1) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);else mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);mars_count_0_2++;if(mars_count_0_2 == 3) mars_count_0_2 = 0;}}",
                "type": "stmt"
            },
            {
                "line": 499,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_0",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=data offset=slave depth=1048576",
                "type": "stmt"
            },
            {
                "line": 501,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_1",
                "unparse_info": "#pragma HLS INTERFACE m_axi port=key offset=slave depth=32",
                "type": "stmt"
            },
            {
                "line": 503,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_2",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=data bundle=control",
                "type": "stmt"
            },
            {
                "line": 505,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_3",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=key bundle=control",
                "type": "stmt"
            },
            {
                "line": 507,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_4",
                "unparse_info": "#pragma HLS INTERFACE s_axilite port=return bundle=control",
                "type": "stmt"
            },
            {
                "line": 509,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_5",
                "unparse_info": "#pragma HLS DATA_PACK VARIABLE=data",
                "type": "stmt"
            },
            {
                "line": 510,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_6",
                "unparse_info": "unsigned char key_buf_0[2][32];",
                "type": "stmt"
            },
            {
                "line": 513,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_7",
                "unparse_info": "#pragma HLS array_partition variable=key_buf_0 complete dim=2",
                "type": "stmt"
            },
            {
                "line": 515,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_8",
                "unparse_info": "#pragma HLS array_partition variable=key_buf_0 complete dim=1",
                "type": "stmt"
            },
            {
                "line": 516,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9",
                "unparse_info": "{merlinL4:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {#pragma HLS UNROLLmerlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL);}}",
                "type": "stmt"
            },
            {
                "line": 517,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0",
                "unparse_info": "merlinL4:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {#pragma HLS UNROLLmerlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL);}",
                "type": "stmt"
            },
            {
                "line": 518,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "L_0_0_0_27_2_0_9_0_0",
                "unparse_info": "for(int i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                "type": "stmt"
            },
            {
                "line": 518,
                "col": 10,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_0",
                "unparse_info": "int i1_sub = 0;;",
                "type": "stmt"
            },
            {
                "line": 518,
                "col": 10,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_9_0_0_0_0",
                "unparse_info": "int i1_sub = 0;",
                "type": "stmt"
            },
            {
                "line": 518,
                "col": 26,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_1",
                "unparse_info": "i1_sub < 2;",
                "type": "stmt"
            },
            {
                "line": 518,
                "col": 48,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_3",
                "unparse_info": "{#pragma HLS UNROLLmerlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL);}",
                "type": "stmt"
            },
            {
                "line": 520,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_3_0",
                "unparse_info": "#pragma HLS UNROLL",
                "type": "stmt"
            },
            {
                "line": 521,
                "col": 7,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_9_0_0_3_1",
                "unparse_info": "merlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL);",
                "type": "stmt"
            },
            {
                "line": 525,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_10",
                "unparse_info": "#pragma ACCEL interface variable=data max_depth=16777216 depth=16777216",
                "type": "stmt"
            },
            {
                "line": 527,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_11",
                "unparse_info": "#pragma ACCEL interface variable=key max_depth=32 depth=32",
                "type": "stmt"
            },
            {
                "line": 530,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_12",
                "unparse_info": "unsigned char data_buf_0_0[2][4096][16];",
                "type": "stmt"
            },
            {
                "line": 531,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_13",
                "unparse_info": "int mars_count_0_2 = 0;",
                "type": "stmt"
            },
            {
                "line": 532,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_14",
                "unparse_info": "unsigned char mars_kernel_0_2_data_buf_0_0_0[2][4096][16];",
                "type": "stmt"
            },
            {
                "line": 537,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_15",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_0 complete dim=3",
                "type": "stmt"
            },
            {
                "line": 539,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_16",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_0 complete dim=1",
                "type": "stmt"
            },
            {
                "line": 540,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_17",
                "unparse_info": "unsigned char mars_kernel_0_2_data_buf_0_0_1[2][4096][16];",
                "type": "stmt"
            },
            {
                "line": 545,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_18",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_1 complete dim=3",
                "type": "stmt"
            },
            {
                "line": 547,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_19",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_1 complete dim=1",
                "type": "stmt"
            },
            {
                "line": 548,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_20",
                "unparse_info": "unsigned char mars_kernel_0_2_data_buf_0_0_2[2][4096][16];",
                "type": "stmt"
            },
            {
                "line": 553,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_21",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_2 complete dim=3",
                "type": "stmt"
            },
            {
                "line": 555,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_22",
                "unparse_info": "#pragma HLS array_partition variable=mars_kernel_0_2_data_buf_0_0_2 complete dim=1",
                "type": "stmt"
            },
            {
                "line": 556,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23",
                "unparse_info": "merlinL3:for(int i1 = 0;i1 < 128 + 2;i1++) {if(mars_count_0_2 == 0) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0);else if(mars_count_0_2 == 1) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);else mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);mars_count_0_2++;if(mars_count_0_2 == 3) mars_count_0_2 = 0;}",
                "type": "stmt"
            },
            {
                "line": 557,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "L_0_0_0_27_2_0_23_0",
                "unparse_info": "for(int i1 = 0;i1 < 128 + 2;i1++) {...}",
                "type": "stmt"
            },
            {
                "line": 557,
                "col": 8,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_0",
                "unparse_info": "int i1 = 0;;",
                "type": "stmt"
            },
            {
                "line": 557,
                "col": 8,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "V_0_0_0_27_2_0_23_0_0_0",
                "unparse_info": "int i1 = 0;",
                "type": "stmt"
            },
            {
                "line": 557,
                "col": 20,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_1",
                "unparse_info": "i1 < 128 + 2;",
                "type": "stmt"
            },
            {
                "line": 563,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3",
                "unparse_info": "{if(mars_count_0_2 == 0) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0);else if(mars_count_0_2 == 1) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);else mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);mars_count_0_2++;if(mars_count_0_2 == 3) mars_count_0_2 = 0;}",
                "type": "stmt"
            },
            {
                "line": 564,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0",
                "unparse_info": "if(mars_count_0_2 == 0) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0);else if(mars_count_0_2 == 1) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);else mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);",
                "type": "stmt"
            },
            {
                "line": 564,
                "col": 9,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_0",
                "unparse_info": "mars_count_0_2 == 0;",
                "type": "stmt"
            },
            {
                "line": 565,
                "col": 7,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1",
                "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0);",
                "type": "stmt"
            },
            {
                "line": 566,
                "col": 11,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2",
                "unparse_info": "if(mars_count_0_2 == 1) mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);else mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);",
                "type": "stmt"
            },
            {
                "line": 566,
                "col": 15,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_0",
                "unparse_info": "mars_count_0_2 == 1;",
                "type": "stmt"
            },
            {
                "line": 567,
                "col": 7,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1",
                "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0);",
                "type": "stmt"
            },
            {
                "line": 569,
                "col": 7,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2",
                "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0);",
                "type": "stmt"
            },
            {
                "line": 570,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_1",
                "unparse_info": "mars_count_0_2++;",
                "type": "stmt"
            },
            {
                "line": 571,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_2",
                "unparse_info": "if(mars_count_0_2 == 3) mars_count_0_2 = 0;",
                "type": "stmt"
            },
            {
                "line": 571,
                "col": 9,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_2_0",
                "unparse_info": "mars_count_0_2 == 3;",
                "type": "stmt"
            },
            {
                "line": 572,
                "col": 7,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "X_0_0_0_27_2_0_23_0_3_2_1",
                "unparse_info": "mars_count_0_2 = 0;",
                "type": "stmt"
            }
        ],
        "childs": [
            {
                "line": 518,
                "col": 5,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "L_0_0_0_27_2_0_9_0_0",
                "unparse_info": "for(int i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                "type": "loop",
                "name": "i1_sub",
                "canonical": "yes",
                "begin": "518",
                "end": "522",
                "lc-trip-count": 2,
                "loop_label": "merlinL4",
                "loop_body_line": 518,
                "loop_body_col": 48,
                "childs": [
                    {
                        "line": 521,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_27_2_0_9_0_0_3_1_0",
                        "unparse_info": "merlin_memcpy_0(key_buf_0[((long )i1_sub) - 0L],0,key,0,(sizeof(unsigned char ) *((unsigned long )32)),32UL)",
                        "type": "callfunction",
                        "name": "merlin_memcpy_0",
                        "function_id": "F_0_0_0_26",
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "hls_mark_unroll": "yes"
            },
            {
                "line": 557,
                "col": 3,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "L_0_0_0_27_2_0_23_0",
                "unparse_info": "for(int i1 = 0;i1 < 128 + 2;i1++) {...}",
                "type": "loop",
                "name": "i1",
                "canonical": "yes",
                "begin": "557",
                "end": "574",
                "lc-trip-count": 130,
                "loop_label": "merlinL3",
                "loop_body_line": 563,
                "loop_body_col": 1,
                "childs": [
                    {
                        "line": 565,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_27_2_0_23_0_3_0_1_0",
                        "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,key_buf_0)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2",
                        "function_id": "F_0_0_0_24",
                        "childs": []
                    },
                    {
                        "line": 567,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_1_0",
                        "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,mars_kernel_0_2_data_buf_0_0_1,key_buf_0)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2",
                        "function_id": "F_0_0_0_24",
                        "childs": []
                    },
                    {
                        "line": 569,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_27_2_0_23_0_3_0_2_2_0",
                        "unparse_info": "mars_kernel_0_2(i1,0,127,data,mars_kernel_0_2_data_buf_0_0_1,mars_kernel_0_2_data_buf_0_0_2,mars_kernel_0_2_data_buf_0_0_0,key_buf_0)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2",
                        "function_id": "F_0_0_0_24",
                        "childs": []
                    }
                ]
            }
        ],
        "sub_functions": [
            {
                "line": 477,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_26",
                "unparse_info": "void merlin_memcpy_0(unsigned char [32] dst,int dst_idx_1,unsigned char [32] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                "type": "function",
                "name": "merlin_memcpy_0",
                "begin": "478",
                "end": "493",
                "arrays": [],
                "childs": [
                    {
                        "line": 486,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_26_2_0_5",
                        "unparse_info": "for(i = 0;i <(len / 1);++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "486",
                        "end": "492",
                        "lc-trip-count": 0,
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 491,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3_2_0_0_0",
                        "unparse_info": "dst",
                        "type": "var_ref",
                        "name": "dst"
                    },
                    {
                        "line": 491,
                        "col": 30,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3_2_0_1_0",
                        "unparse_info": "src",
                        "type": "var_ref",
                        "name": "src"
                    }
                ],
                "var_defs": [
                    {
                        "line": 483,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_2_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 484,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_3_1",
                        "unparse_info": "total_offset1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 485,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_4_1",
                        "unparse_info": "total_offset2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 477,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_26",
                        "unparse_info": "void merlin_memcpy_0(unsigned char [32] dst,int dst_idx_1,unsigned char [32] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 477,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_0",
                        "unparse_info": "unsigned char [32] dst,int dst_idx_1,unsigned char [32] src,int src_idx_0,unsigned int len,unsigned int max_len",
                        "type": "stmt"
                    },
                    {
                        "line": 478,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_26_2",
                        "unparse_info": "function definition: void merlin_memcpy_0(unsigned char [32] dst,int dst_idx_1,unsigned char [32] src,int src_idx_0,unsigned int len,unsigned int max_len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 478,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0",
                        "unparse_info": "{#pragma HLS inline off#pragma HLS function_instantiate variable=dst_idx_1,src_idx_0unsigned long i;unsigned long total_offset1 =(0 * 32 + dst_idx_1);unsigned long total_offset2 =(0 * 32 + src_idx_0);for(i = 0;i <(len / 1);++i) {#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=32dst[total_offset1 + i] = src[total_offset2 + i];}}",
                        "type": "stmt"
                    },
                    {
                        "line": 480,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 482,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_1",
                        "unparse_info": "#pragma HLS function_instantiate variable=dst_idx_1,src_idx_0",
                        "type": "stmt"
                    },
                    {
                        "line": 483,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_26_2_0_2",
                        "unparse_info": "unsigned long i;",
                        "type": "stmt"
                    },
                    {
                        "line": 484,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_26_2_0_3",
                        "unparse_info": "unsigned long total_offset1 =(0 * 32 + dst_idx_1);",
                        "type": "stmt"
                    },
                    {
                        "line": 485,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_26_2_0_4",
                        "unparse_info": "unsigned long total_offset2 =(0 * 32 + src_idx_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 486,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_26_2_0_5",
                        "unparse_info": "for(i = 0;i <(len / 1);++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 486,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 486,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 486,
                        "col": 15,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_1",
                        "unparse_info": "i <(len / 1);",
                        "type": "stmt"
                    },
                    {
                        "line": 486,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3",
                        "unparse_info": "{#pragma HLS PIPELINE II=1#pragma HLS LOOP_TRIPCOUNT max=32dst[total_offset1 + i] = src[total_offset2 + i];}",
                        "type": "stmt"
                    },
                    {
                        "line": 488,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3_0",
                        "unparse_info": "#pragma HLS PIPELINE II=1",
                        "type": "stmt"
                    },
                    {
                        "line": 490,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3_1",
                        "unparse_info": "#pragma HLS LOOP_TRIPCOUNT max=32",
                        "type": "stmt"
                    },
                    {
                        "line": 491,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_26_2_0_5_3_2",
                        "unparse_info": "dst[total_offset1 + i] = src[total_offset2 + i];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 468,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_24",
                "unparse_info": "void mars_kernel_0_2(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                "type": "function",
                "name": "mars_kernel_0_2",
                "begin": "469",
                "end": "474",
                "arrays": [],
                "childs": [
                    {
                        "line": 472,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0",
                        "unparse_info": "mars_kernel_0_2_bus(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_bus",
                        "function_id": "F_0_0_0_20",
                        "childs": []
                    },
                    {
                        "line": 473,
                        "col": 23,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0",
                        "unparse_info": "mars_kernel_0_2_comp(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_comp",
                        "function_id": "F_0_0_0_23",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 472,
                        "col": 51,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0_1_3",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 472,
                        "col": 56,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0_1_4",
                        "unparse_info": "mars_data_buf_0_0_0",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_0"
                    },
                    {
                        "line": 472,
                        "col": 76,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0_1_5",
                        "unparse_info": "mars_data_buf_0_0_1",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_1"
                    },
                    {
                        "line": 472,
                        "col": 96,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0_1_6",
                        "unparse_info": "mars_data_buf_0_0_2",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_2"
                    },
                    {
                        "line": 472,
                        "col": 116,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1_0_1_7",
                        "unparse_info": "mars_key_buf_0_1",
                        "type": "var_ref",
                        "name": "mars_key_buf_0_1"
                    },
                    {
                        "line": 473,
                        "col": 52,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0_1_3",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 473,
                        "col": 57,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0_1_4",
                        "unparse_info": "mars_data_buf_0_0_0",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_0"
                    },
                    {
                        "line": 473,
                        "col": 77,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0_1_5",
                        "unparse_info": "mars_data_buf_0_0_1",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_1"
                    },
                    {
                        "line": 473,
                        "col": 97,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0_1_6",
                        "unparse_info": "mars_data_buf_0_0_2",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_2"
                    },
                    {
                        "line": 473,
                        "col": 117,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2_0_1_7",
                        "unparse_info": "mars_key_buf_0_1",
                        "type": "var_ref",
                        "name": "mars_key_buf_0_1"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 468,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_24",
                        "unparse_info": "void mars_kernel_0_2(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 468,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_0",
                        "unparse_info": "int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1",
                        "type": "stmt"
                    },
                    {
                        "line": 469,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_24_2",
                        "unparse_info": "function definition: void mars_kernel_0_2(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 469,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFmars_kernel_0_2_bus(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1);mars_kernel_0_2_comp(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1);}",
                        "type": "stmt"
                    },
                    {
                        "line": 471,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 472,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_1",
                        "unparse_info": "mars_kernel_0_2_bus(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1);",
                        "type": "stmt"
                    },
                    {
                        "line": 473,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_24_2_0_2",
                        "unparse_info": "mars_kernel_0_2_comp(mars_i1,mars_init,mars_cond,data,mars_data_buf_0_0_0,mars_data_buf_0_0_1,mars_data_buf_0_0_2,mars_key_buf_0_1);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 426,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_20",
                "unparse_info": "void mars_kernel_0_2_bus(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_bus",
                "begin": "427",
                "end": "432",
                "arrays": [],
                "childs": [
                    {
                        "line": 430,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_1_0",
                        "unparse_info": "mars_kernel_0_2_node_0_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)),data,mars_data_buf_0_0_0)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_node_0_stage_0",
                        "function_id": "F_0_0_0_18",
                        "childs": []
                    },
                    {
                        "line": 431,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_2_0",
                        "unparse_info": "mars_kernel_0_2_node_3_stage_2(mars_i1 - 2,(int )((mars_i1 >= mars_init + 2) &(mars_i1 <= mars_cond + 2)),data,mars_data_buf_0_0_2)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_node_3_stage_2",
                        "function_id": "F_0_0_0_19",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 430,
                        "col": 110,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_1_0_1_2",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 430,
                        "col": 115,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_1_0_1_3",
                        "unparse_info": "mars_data_buf_0_0_0",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_0"
                    },
                    {
                        "line": 431,
                        "col": 110,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_2_0_1_2",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 431,
                        "col": 115,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_2_0_1_3",
                        "unparse_info": "mars_data_buf_0_0_2",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_2"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 426,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_20",
                        "unparse_info": "void mars_kernel_0_2_bus(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 426,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_0",
                        "unparse_info": "int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1",
                        "type": "stmt"
                    },
                    {
                        "line": 427,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_20_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_bus(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 427,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFmars_kernel_0_2_node_0_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)),data,mars_data_buf_0_0_0);mars_kernel_0_2_node_3_stage_2(mars_i1 - 2,(int )((mars_i1 >= mars_init + 2) &(mars_i1 <= mars_cond + 2)),data,mars_data_buf_0_0_2);}",
                        "type": "stmt"
                    },
                    {
                        "line": 429,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 430,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_1",
                        "unparse_info": "mars_kernel_0_2_node_0_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)),data,mars_data_buf_0_0_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 431,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_20_2_0_2",
                        "unparse_info": "mars_kernel_0_2_node_3_stage_2(mars_i1 - 2,(int )((mars_i1 >= mars_init + 2) &(mars_i1 <= mars_cond + 2)),data,mars_data_buf_0_0_2);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 408,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_18",
                "unparse_info": "void mars_kernel_0_2_node_0_stage_0(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_node_0_stage_0",
                "begin": "409",
                "end": "416",
                "arrays": [],
                "childs": [
                    {
                        "line": 413,
                        "col": 45,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_1_0_0",
                        "unparse_info": "memcpy_wide_bus_read_char_3d_4096_16_128((char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(merlin_uint_128 *)data,(size_t )(i1 * 131072 * 1),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_read_char_3d_4096_16_128",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 413,
                        "col": 66,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_1_0_0_1_0_0",
                        "unparse_info": "data_buf_0_0",
                        "type": "var_ref",
                        "name": "data_buf_0_0"
                    },
                    {
                        "line": 413,
                        "col": 131,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_1_0_0_1_4_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 408,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_18",
                        "unparse_info": "void mars_kernel_0_2_node_0_stage_0(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 408,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_0",
                        "unparse_info": "int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0",
                        "type": "stmt"
                    },
                    {
                        "line": 409,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_18_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_node_0_stage_0(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 409,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {memcpy_wide_bus_read_char_3d_4096_16_128((char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(merlin_uint_128 *)data,(size_t )(i1 * 131072 * 1),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 411,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 412,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1",
                        "unparse_info": "if(exec == 1) {memcpy_wide_bus_read_char_3d_4096_16_128((char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(merlin_uint_128 *)data,(size_t )(i1 * 131072 * 1),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 412,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 412,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_1",
                        "unparse_info": "{memcpy_wide_bus_read_char_3d_4096_16_128((char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(merlin_uint_128 *)data,(size_t )(i1 * 131072 * 1),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 413,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_18_2_0_1_1_0",
                        "unparse_info": "memcpy_wide_bus_read_char_3d_4096_16_128((char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(merlin_uint_128 *)data,(size_t )(i1 * 131072 * 1),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 28,
                "col": 1,
                "source": "mars_wide_bus_3d.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_read_char_3d_4096_16_128(char [][4096][16] a_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::merlin_uint_128* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_read_char_3d_4096_16_128",
                "begin": "31",
                "end": "82",
                "arrays": [],
                "childs": [
                    {
                        "line": 67,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_3d.h\",67,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 68,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_3d.h\",68,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 70,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "70",
                        "end": "76",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 77,
                                "col": 16,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "(merlin_get_range_128(&a[start],(j * data_width),data_width))",
                                "type": "callfunction",
                                "name": "merlin_get_range_128",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 82,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "82",
                        "end": "141",
                        "lc-trip-count": 0,
                        "loop_label": "L2",
                        "loop_body_line": 82,
                        "loop_body_col": 29,
                        "childs": [
                            {
                                "line": 91,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "91",
                                "end": "97",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 97,
                                        "col": 15,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_128(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_128",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 102,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < num_elements / 16;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "102",
                                "end": "110",
                                "lc-trip-count": 1,
                                "childs": [
                                    {
                                        "line": 104,
                                        "col": 11,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "104",
                                        "end": "109",
                                        "lc-trip-count": 16,
                                        "childs": [
                                            {
                                                "line": 109,
                                                "col": 17,
                                                "source": "mars_wide_bus_3d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "(merlin_get_range_128(&a[i + start],(j * data_width),data_width))",
                                                "type": "callfunction",
                                                "name": "merlin_get_range_128",
                                                "function_id": "",
                                                "childs": [],
                                                "hls_mark_unroll": "yes"
                                            }
                                        ],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 115,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < num_elements / SIZE;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "115",
                                "end": "125",
                                "lc-trip-count": 0,
                                "childs": [
                                    {
                                        "line": 117,
                                        "col": 11,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 4096;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "117",
                                        "end": "124",
                                        "lc-trip-count": 4096,
                                        "childs": [
                                            {
                                                "line": 118,
                                                "col": 13,
                                                "source": "mars_wide_bus_3d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "for(j2 = 0;j2 < 16;++j2) {...}",
                                                "type": "loop",
                                                "name": "j2",
                                                "canonical": "yes",
                                                "begin": "118",
                                                "end": "123",
                                                "lc-trip-count": 16,
                                                "childs": [
                                                    {
                                                        "line": 123,
                                                        "col": 19,
                                                        "source": "mars_wide_bus_3d.h",
                                                        "topo_id": "is_skipped_node",
                                                        "unparse_info": "(merlin_get_range_128(&a[i + start],(j * data_width),data_width))",
                                                        "type": "callfunction",
                                                        "name": "merlin_get_range_128",
                                                        "function_id": "",
                                                        "childs": [],
                                                        "hls_mark_unroll": "yes"
                                                    }
                                                ],
                                                "hls_mark_unroll": "yes"
                                            }
                                        ],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 130,
                                "col": 7,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "130",
                                "end": "138",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 139,
                                        "col": 18,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "(merlin_get_range_128(&a[i + start],(j * data_width),data_width))",
                                        "type": "callfunction",
                                        "name": "merlin_get_range_128",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 67,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 68,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 75,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 77,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 96,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 97,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 108,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 109,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 122,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 123,
                        "col": 19,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    },
                    {
                        "line": 137,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf",
                        "type": "var_ref",
                        "name": "a_buf"
                    },
                    {
                        "line": 139,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a",
                        "type": "var_ref",
                        "name": "a"
                    }
                ],
                "var_defs": [
                    {
                        "line": 33,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 34,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 35,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 36,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 37,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 38,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 39,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 40,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 41,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 42,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 46,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 47,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "SIZE",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 48,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 49,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 50,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 64,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 66,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 74,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 95,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 101,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 101,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 136,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 28,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_read_char_3d_4096_16_128(char [][4096][16] a_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::merlin_uint_128* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "char [][4096][16] a_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::merlin_uint_128* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 52,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_read_char_3d_4096_16_128(char [][4096][16] a_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::merlin_uint_128* a,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 52,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(char );const size_t bus_width =(128 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t i;size_t j;size_t index3 = index3_offset;size_t index2 = index2_offset;size_t index1 = index1_offset;const size_t bound1 = 16 / num_elements;const size_t SIZE =(4096 * 16);const size_t bound2 = SIZE / num_elements;const size_t bound0 = num_elements / SIZE;int aligned = 0;if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}const size_t index_offset = index3_offset * SIZE + index2_offset * 16 + index1_offset;int len =(end - start);len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_3d.h\",67,__PRETTY_FUNCTION__);len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_3d.h\",68,__PRETTY_FUNCTION__);if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[start],(j * data_width),data_width));}return ;}L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 32,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 33,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(char );",
                        "type": "stmt"
                    },
                    {
                        "line": 34,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(128 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 37,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 38,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 40,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 44,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index3 = index3_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index2 = index2_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index1 = index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 46,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound1 = 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 47,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t SIZE =(4096 * 16);",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound2 = SIZE / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound0 = num_elements / SIZE;",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int aligned = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "16 % num_elements == 0 && index1_offset % num_elements == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 76,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 1;index1 = index1_offset / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = index1_offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 80,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 2;index2 = index2_offset * 16 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 56,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = index2_offset * 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 30,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 61,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3 = index3_offset * SIZE / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t index_offset = index3_offset * SIZE + index2_offset * 16 + index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 66,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int len =(end - start);",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len <= const_buf_size / num_elements + 2?(static_cast < void > (0)) : __assert_fail(\"len <= const_buf_size / num_elements + 2\",\"mars_wide_bus_3d.h\",67,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 68,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len >= buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"len >= buf_size / num_elements\",\"mars_wide_bus_3d.h\",68,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(1 == len) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[start],(j * data_width),data_width));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "1 == len;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[start],(j * data_width),data_width));}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 40,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align || j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[start],(j * data_width),data_width));}",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align || j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align || j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 73,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L2:for(i = 0;i < len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 8,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 8,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < len;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 29,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 86,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0 && aligned;",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 37,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 25,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 21,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 91,
                        "col": 44,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - 0;a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}",
                        "type": "stmt"
                    },
                    {
                        "line": 92,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 94,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 95,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = i * num_elements + j - 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index3][index2][index1 * num_elements + j] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 == bound1 - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 ==(4096 - 1);",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index2 = 0;++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index3;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 99,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 100,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 100,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 100,
                        "col": 32,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < num_elements / 16;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 22,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < num_elements / 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 102,
                        "col": 56,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 103,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 24,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 43,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j =(j0 * 16 + j1);if(i == end - start - 1 && j > tail_align) continue;a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}",
                        "type": "stmt"
                    },
                    {
                        "line": 105,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j =(j0 * 16 + j1);",
                        "type": "stmt"
                    },
                    {
                        "line": 106,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 106,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 108,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index3][index2 * num_elements / 16 + j0][j1] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 == bound2 - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index2 = 0;index3++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3++;",
                        "type": "stmt"
                    },
                    {
                        "line": 112,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 113,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 113,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 113,
                        "col": 33,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;int j2;for(j0 = 0;j0 < num_elements / SIZE;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j2;",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < num_elements / SIZE;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 22,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < num_elements / SIZE;",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 54,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfor(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 116,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 4096;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 24,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 4096;",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 43,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j2 = 0;j2 < 16;++j2) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 26,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 < 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 45,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j = j0 * SIZE +(j1 * 16) + j2;if(i == end - start - 1 && j > tail_align) continue;a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}",
                        "type": "stmt"
                    },
                    {
                        "line": 119,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = j0 * SIZE +(j1 * 16) + j2;",
                        "type": "stmt"
                    },
                    {
                        "line": 120,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 120,
                        "col": 19,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 121,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 122,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[index3 * bound0 + j0][j1][j2] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    },
                    {
                        "line": 127,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index3;",
                        "type": "stmt"
                    },
                    {
                        "line": 129,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}}",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 19,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 42,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(i == 0 && j < head_align) continue;if(i == end - start - 1 && j > tail_align) continue;size_t buffer_index = i * num_elements + j - head_align + index_offset;a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));}",
                        "type": "stmt"
                    },
                    {
                        "line": 131,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == 0 && j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == 0 && j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 133,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 134,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(i == end - start - 1 && j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 134,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i == end - start - 1 && j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 135,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 136,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = i * num_elements + j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 137,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "a_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16] =(merlin_get_range_128(&a[i + start],(j * data_width),data_width));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 8,
                "col": 1,
                "source": "memcpy_128.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "::uint64_t merlin_get_range_128(::merlin_uint_128* tmp,int low,int len) {...}",
                "type": "function",
                "name": "merlin_get_range_128",
                "begin": "8",
                "end": "46",
                "arrays": [],
                "childs": [
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "15",
                        "end": "19",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "22",
                        "end": "26",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "29",
                        "end": "33",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "36",
                        "end": "40",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 18,
                        "col": 14,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 18,
                        "col": 19,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 25,
                        "col": 14,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 25,
                        "col": 19,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 32,
                        "col": 14,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 32,
                        "col": 19,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 39,
                        "col": 14,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 39,
                        "col": 19,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::uint64_t merlin_get_range_128(::merlin_uint_128* tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_128* tmp,int low,int len",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: ::uint64_t merlin_get_range_128(::merlin_uint_128* tmp,int low,int len) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 8,
                        "col": 78,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFuint64_t ret = 0;int i;int start = low;switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__);}return ret;}",
                        "type": "stmt"
                    },
                    {
                        "line": 9,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 10,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "uint64_t ret = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 11,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 12,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 11,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 13,
                        "col": 16,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 14,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 15,
                        "col": 30,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 16,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 17,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 18,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 20,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 1;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 1;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 30,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 23,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 24,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 25,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 28,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 3;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 3;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 30,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 32,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 34,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 7;i >= 0;--i) {#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 7;i >= 0;--i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 7;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i >= 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 30,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollret <<= 8;ret |= tmp -> data[i + start];}",
                        "type": "stmt"
                    },
                    {
                        "line": 37,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 38,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret <<= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "ret |= tmp -> data[i + start];",
                        "type": "stmt"
                    },
                    {
                        "line": 41,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 43,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",43,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ret;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 417,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_19",
                "unparse_info": "void mars_kernel_0_2_node_3_stage_2(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_node_3_stage_2",
                "begin": "418",
                "end": "425",
                "arrays": [],
                "childs": [
                    {
                        "line": 422,
                        "col": 46,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_1_0_0",
                        "unparse_info": "memcpy_wide_bus_write_char_3d_4096_16_128((merlin_uint_128 *)data,(char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(size_t )(1 *(i1 * 131072)),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L)",
                        "type": "callfunction",
                        "name": "memcpy_wide_bus_write_char_3d_4096_16_128",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 422,
                        "col": 66,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_1_0_0_1_0_0",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 422,
                        "col": 91,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_1_0_0_1_1_0",
                        "unparse_info": "data_buf_0_0",
                        "type": "var_ref",
                        "name": "data_buf_0_0"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 417,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_19",
                        "unparse_info": "void mars_kernel_0_2_node_3_stage_2(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 417,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_0",
                        "unparse_info": "int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0",
                        "type": "stmt"
                    },
                    {
                        "line": 418,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_19_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_node_3_stage_2(int i1,int exec,::merlin_uint_128* data,unsigned char [2][40... data_buf_0_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 418,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {memcpy_wide_bus_write_char_3d_4096_16_128((merlin_uint_128 *)data,(char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(size_t )(1 *(i1 * 131072)),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 420,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 421,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1",
                        "unparse_info": "if(exec == 1) {memcpy_wide_bus_write_char_3d_4096_16_128((merlin_uint_128 *)data,(char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(size_t )(1 *(i1 * 131072)),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 421,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 421,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_1",
                        "unparse_info": "{memcpy_wide_bus_write_char_3d_4096_16_128((merlin_uint_128 *)data,(char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(size_t )(1 *(i1 * 131072)),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 422,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_19_2_0_1_1_0",
                        "unparse_info": "memcpy_wide_bus_write_char_3d_4096_16_128((merlin_uint_128 *)data,(char(*)[4096][16])data_buf_0_0,(size_t )0,(size_t )0,(size_t )0,(size_t )(1 *(i1 * 131072)),sizeof(unsigned char ) *((unsigned long )131072),(size_t )131072L);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 145,
                "col": 1,
                "source": "mars_wide_bus_3d.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void memcpy_wide_bus_write_char_3d_4096_16_128(::merlin_uint_128* c,char [][4096][16] c_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                "type": "function",
                "name": "memcpy_wide_bus_write_char_3d_4096_16_128",
                "begin": "148",
                "end": "280",
                "arrays": [],
                "childs": [
                    {
                        "line": 169,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "169",
                        "end": "177",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 176,
                                "col": 7,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16])",
                                "type": "callfunction",
                                "name": "merlin_set_range_128",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 183,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "183",
                        "end": "189",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 188,
                                "col": 7,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16])",
                                "type": "callfunction",
                                "name": "merlin_set_range_128",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 216,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus_3d.h\",216,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    },
                    {
                        "line": 218,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < burst_len;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "218",
                        "end": "266",
                        "lc-trip-count": 0,
                        "loop_label": "L3",
                        "loop_body_line": 218,
                        "loop_body_col": 35,
                        "childs": [
                            {
                                "line": 227,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "227",
                                "end": "231",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 230,
                                        "col": 11,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val)",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_128",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 235,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < num_elements / 16;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "235",
                                "end": "242",
                                "lc-trip-count": 1,
                                "childs": [
                                    {
                                        "line": 237,
                                        "col": 11,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "237",
                                        "end": "241",
                                        "lc-trip-count": 16,
                                        "childs": [
                                            {
                                                "line": 240,
                                                "col": 13,
                                                "source": "mars_wide_bus_3d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val)",
                                                "type": "callfunction",
                                                "name": "merlin_set_range_128",
                                                "function_id": "",
                                                "childs": [],
                                                "hls_mark_unroll": "yes"
                                            }
                                        ],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 246,
                                "col": 9,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                                "type": "loop",
                                "name": "j0",
                                "canonical": "yes",
                                "begin": "246",
                                "end": "254",
                                "lc-trip-count": 0,
                                "childs": [
                                    {
                                        "line": 247,
                                        "col": 11,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "for(j1 = 0;j1 < 4096;++j1) {...}",
                                        "type": "loop",
                                        "name": "j1",
                                        "canonical": "yes",
                                        "begin": "247",
                                        "end": "253",
                                        "lc-trip-count": 4096,
                                        "childs": [
                                            {
                                                "line": 248,
                                                "col": 13,
                                                "source": "mars_wide_bus_3d.h",
                                                "topo_id": "is_skipped_node",
                                                "unparse_info": "for(j2 = 0;j2 < 16;++j2) {...}",
                                                "type": "loop",
                                                "name": "j2",
                                                "canonical": "yes",
                                                "begin": "248",
                                                "end": "252",
                                                "lc-trip-count": 16,
                                                "childs": [
                                                    {
                                                        "line": 251,
                                                        "col": 15,
                                                        "source": "mars_wide_bus_3d.h",
                                                        "topo_id": "is_skipped_node",
                                                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val)",
                                                        "type": "callfunction",
                                                        "name": "merlin_set_range_128",
                                                        "function_id": "",
                                                        "childs": []
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "line": 258,
                                "col": 7,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                                "type": "loop",
                                "name": "j",
                                "canonical": "yes",
                                "begin": "258",
                                "end": "263",
                                "lc-trip-count": 16,
                                "childs": [
                                    {
                                        "line": 262,
                                        "col": 9,
                                        "source": "mars_wide_bus_3d.h",
                                        "topo_id": "is_skipped_node",
                                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16])",
                                        "type": "callfunction",
                                        "name": "merlin_set_range_128",
                                        "function_id": "",
                                        "childs": [],
                                        "hls_mark_unroll": "yes"
                                    }
                                ],
                                "hls_mark_unroll": "yes"
                            }
                        ]
                    },
                    {
                        "line": 271,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "loop",
                        "name": "j",
                        "canonical": "yes",
                        "begin": "271",
                        "end": "277",
                        "lc-trip-count": 16,
                        "childs": [
                            {
                                "line": 276,
                                "col": 7,
                                "source": "mars_wide_bus_3d.h",
                                "topo_id": "is_skipped_node",
                                "unparse_info": "merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16])",
                                "type": "callfunction",
                                "name": "merlin_set_range_128",
                                "function_id": "",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 176,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 176,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 188,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 188,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 216,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    },
                    {
                        "line": 229,
                        "col": 21,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 230,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 239,
                        "col": 23,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 240,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 250,
                        "col": 25,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 251,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 262,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 262,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    },
                    {
                        "line": 276,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c",
                        "type": "var_ref",
                        "name": "c"
                    },
                    {
                        "line": 276,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "c_buf",
                        "type": "var_ref",
                        "name": "c_buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 150,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 151,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bus_width",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 152,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 153,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buf_size",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 154,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 155,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 156,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "new_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 157,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 158,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 159,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "end",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 160,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 161,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 161,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 162,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "SIZE",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 163,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index_offset",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 167,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 175,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 187,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 198,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 199,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 200,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "bound0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 201,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 215,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "burst_len",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 229,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 234,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 234,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 239,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 250,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 260,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 269,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "pos",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 275,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "buffer_index",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 145,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void memcpy_wide_bus_write_char_3d_4096_16_128(::merlin_uint_128* c,char [][4096][16] c_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_128* c,char [][4096][16] c_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 52,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void memcpy_wide_bus_write_char_3d_4096_16_128(::merlin_uint_128* c,char [][4096][16] c_buf,::size_t index3_offset,::size_t index2_offset,::size_t index1_offset,::size_t offset_byte,::size_t size_byte,const ::size_t const_buf_size) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 52,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS inline selfconst size_t data_width = sizeof(char );const size_t bus_width =(128 / 8);const size_t num_elements = bus_width / data_width;size_t buf_size = size_byte / data_width;size_t offset = offset_byte / data_width;size_t head_align = offset & num_elements - 1;size_t new_offset = offset + buf_size;size_t tail_align = new_offset - 1 & num_elements - 1;size_t start = offset / num_elements;size_t end =(offset + buf_size + num_elements - 1) / num_elements;size_t len = end - start;size_t i;size_t j;const size_t SIZE =(4096 * 16);size_t index_offset = SIZE * index3_offset + 16 * index2_offset + index1_offset;if(head_align == 0) len =(buf_size + num_elements - 1) / num_elements;size_t align = 0;if(len == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}return ;}if(head_align != 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}start++;align++;}if(tail_align != num_elements - 1) align++;size_t index3 = index3_offset;size_t index2 = index2_offset;size_t index1 = index1_offset;const size_t bound1 = 16 / num_elements;const size_t bound2 = SIZE / num_elements;const size_t bound0 = num_elements / SIZE;int aligned = 0;if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}int burst_len =(len - align);burst_len <= const_buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus_3d.h\",216,__PRETTY_FUNCTION__);L3:for(i = 0;i < burst_len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}}if(tail_align != num_elements - 1) {size_t pos =(len - align) * num_elements + index_offset;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;size_t buffer_index = pos + j;merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 149,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS inline self",
                        "type": "stmt"
                    },
                    {
                        "line": 150,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t data_width = sizeof(char );",
                        "type": "stmt"
                    },
                    {
                        "line": 151,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bus_width =(128 / 8);",
                        "type": "stmt"
                    },
                    {
                        "line": 152,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t num_elements = bus_width / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 153,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buf_size = size_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 154,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t offset = offset_byte / data_width;",
                        "type": "stmt"
                    },
                    {
                        "line": 155,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t head_align = offset & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 156,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t new_offset = offset + buf_size;",
                        "type": "stmt"
                    },
                    {
                        "line": 157,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t tail_align = new_offset - 1 & num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 158,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t start = offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 159,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t end =(offset + buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 160,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t len = end - start;",
                        "type": "stmt"
                    },
                    {
                        "line": 161,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t i;",
                        "type": "stmt"
                    },
                    {
                        "line": 161,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t j;",
                        "type": "stmt"
                    },
                    {
                        "line": 162,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t SIZE =(4096 * 16);",
                        "type": "stmt"
                    },
                    {
                        "line": 163,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index_offset = SIZE * index3_offset + 16 * index2_offset + index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 165,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0) len =(buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 165,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len =(buf_size + num_elements - 1) / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 167,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t align = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 168,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(len == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 168,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 168,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}return ;}",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 40,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align) continue;if(j > tail_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 170,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 171,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 171,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 172,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 173,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 173,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 174,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 176,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);",
                        "type": "stmt"
                    },
                    {
                        "line": 180,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "return ;",
                        "type": "stmt"
                    },
                    {
                        "line": 182,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align != 0) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}start++;align++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 182,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align != 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 182,
                        "col": 24,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j < head_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}start++;align++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 183,
                        "col": 40,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j < head_align) continue;size_t buffer_index = j - head_align + index_offset;merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 184,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 185,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j < head_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 185,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < head_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 186,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 187,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = j - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 188,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);",
                        "type": "stmt"
                    },
                    {
                        "line": 192,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start++;",
                        "type": "stmt"
                    },
                    {
                        "line": 193,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 195,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(tail_align != num_elements - 1) align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 195,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align != num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 196,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "align++;",
                        "type": "stmt"
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index3 = index3_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index2 = index2_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 197,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t index1 = index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 198,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound1 = 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 199,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound2 = SIZE / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 200,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "const size_t bound0 = num_elements / SIZE;",
                        "type": "stmt"
                    },
                    {
                        "line": 201,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int aligned = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 202,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(16 % num_elements == 0 && index1_offset % num_elements == 0) {aligned = 1;index1 = index1_offset / num_elements;}else if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 202,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "16 % num_elements == 0 && index1_offset % num_elements == 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 202,
                        "col": 76,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 1;index1 = index1_offset / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 203,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 204,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = index1_offset / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 205,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset) {aligned = 2;index2 = index2_offset * 16 / num_elements;}else if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 205,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "SIZE % num_elements == 0 && num_elements % 16 == 0 && index2_offset * 16 % num_elements == 0 && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 206,
                        "col": 80,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{aligned = 2;index2 = index2_offset * 16 / num_elements;}",
                        "type": "stmt"
                    },
                    {
                        "line": 207,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 208,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = index2_offset * 16 / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 209,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset) {index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 209,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "num_elements % SIZE == 0 && index3_offset * SIZE % num_elements == 0 && !index2_offset && !index1_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 211,
                        "col": 30,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index3 = index3_offset * SIZE / num_elements;aligned = - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 212,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3 = index3_offset * SIZE / num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 213,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned = - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 215,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int burst_len =(len - align);",
                        "type": "stmt"
                    },
                    {
                        "line": 216,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "burst_len <= const_buf_size / num_elements?(static_cast < void > (0)) : __assert_fail(\"burst_len <= const_buf_size / num_elements\",\"mars_wide_bus_3d.h\",216,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 217,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "L3:for(i = 0;i < burst_len;++i) {#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < burst_len;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 8,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 8,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < burst_len;",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 35,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS pipelineif(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 222,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 225,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(head_align == 0 && aligned) {if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}}else {for(j = 0;j < num_elements;++j) {#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 225,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "head_align == 0 && aligned;",
                        "type": "stmt"
                    },
                    {
                        "line": 225,
                        "col": 37,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}}",
                        "type": "stmt"
                    },
                    {
                        "line": 226,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 1) {for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}else if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 226,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 226,
                        "col": 25,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 21,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 227,
                        "col": 44,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollint val = c_buf[index3][index2][index1 * num_elements + j];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}",
                        "type": "stmt"
                    },
                    {
                        "line": 228,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 229,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int val = c_buf[index3][index2][index1 * num_elements + j];",
                        "type": "stmt"
                    },
                    {
                        "line": 230,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index1 == bound1 - 1) {index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}else index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 == bound1 - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index1 = 0;if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;}",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index2 ==(4096 - 1)) {index2 = 0;++index3;}else ++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 ==(4096 - 1);",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index2 = 0;++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index3;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index2;",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index1++;",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == 2) {int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}else if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 32,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;for(j0 = 0;j0 < num_elements / 16;++j0) {#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 234,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 234,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < num_elements / 16;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 22,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < num_elements / 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 235,
                        "col": 56,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollfor(j1 = 0;j1 < 16;++j1) {j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 236,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 16;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 24,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 43,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j =(j0 * 16 + j1);int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}",
                        "type": "stmt"
                    },
                    {
                        "line": 238,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j =(j0 * 16 + j1);",
                        "type": "stmt"
                    },
                    {
                        "line": 239,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int val = c_buf[index3][index2 * num_elements / 16 + j0][j1];",
                        "type": "stmt"
                    },
                    {
                        "line": 240,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(index2 == bound2 - 1) {index2 = 0;index3++;}else index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 == bound2 - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{index2 = 0;index3++;}",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index3++;",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "index2++;",
                        "type": "stmt"
                    },
                    {
                        "line": 244,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(aligned == - 1) {int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 244,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "aligned == - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 244,
                        "col": 33,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{int j0;int j1;int j2;for(j0 = 0;j0 < bound0;++j0) {for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}++index3;}",
                        "type": "stmt"
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j0;",
                        "type": "stmt"
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j1;",
                        "type": "stmt"
                    },
                    {
                        "line": 245,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int j2;",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j0 = 0;j0 < bound0;++j0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 14,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 22,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j0 < bound0;",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 41,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j1 = 0;j1 < 4096;++j1) {for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j1 = 0;j1 < 4096;++j1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 16,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 24,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j1 < 4096;",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 43,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j2 = 0;j2 < 16;++j2) {j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 13,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j2 = 0;j2 < 16;++j2) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 18,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 26,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j2 < 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 45,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{j = j0 * SIZE +(j1 * 16) + j2;int val = c_buf[index3 * bound0 + j0][j1][j2];merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);}",
                        "type": "stmt"
                    },
                    {
                        "line": 249,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = j0 * SIZE +(j1 * 16) + j2;",
                        "type": "stmt"
                    },
                    {
                        "line": 250,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int val = c_buf[index3 * bound0 + j0][j1][j2];",
                        "type": "stmt"
                    },
                    {
                        "line": 251,
                        "col": 15,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,val);",
                        "type": "stmt"
                    },
                    {
                        "line": 255,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "++index3;",
                        "type": "stmt"
                    },
                    {
                        "line": 257,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{for(j = 0;j < num_elements;++j) {#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 258,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 258,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 258,
                        "col": 12,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 258,
                        "col": 19,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 258,
                        "col": 42,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollsize_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 259,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 260,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = i * num_elements + j + num_elements - head_align + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 262,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[i + start],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);",
                        "type": "stmt"
                    },
                    {
                        "line": 268,
                        "col": 3,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(tail_align != num_elements - 1) {size_t pos =(len - align) * num_elements + index_offset;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;size_t buffer_index = pos + j;merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 268,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tail_align != num_elements - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 268,
                        "col": 39,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{size_t pos =(len - align) * num_elements + index_offset;pos +=(num_elements - head_align) % num_elements;for(j = 0;j < num_elements;++j) {#pragma HLS unrollif(j > tail_align) continue;size_t buffer_index = pos + j;merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 269,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t pos =(len - align) * num_elements + index_offset;",
                        "type": "stmt"
                    },
                    {
                        "line": 270,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "pos +=(num_elements - head_align) % num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 5,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(j = 0;j < num_elements;++j) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 10,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 17,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j < num_elements;",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 40,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrollif(j > tail_align) continue;size_t buffer_index = pos + j;merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 272,
                        "col": 1,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 273,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "if(j > tail_align) continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 273,
                        "col": 11,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "j > tail_align;",
                        "type": "stmt"
                    },
                    {
                        "line": 274,
                        "col": 9,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "continue;",
                        "type": "stmt"
                    },
                    {
                        "line": 275,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "size_t buffer_index = pos + j;",
                        "type": "stmt"
                    },
                    {
                        "line": 276,
                        "col": 7,
                        "source": "mars_wide_bus_3d.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "merlin_set_range_128(&c[end - 1],(j * data_width),data_width,c_buf[buffer_index / SIZE][buffer_index % SIZE / 16][buffer_index % SIZE % 16]);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 48,
                "col": 1,
                "source": "memcpy_128.h",
                "topo_id": "is_skipped_node",
                "unparse_info": "void merlin_set_range_128(::merlin_uint_128* tmp,int low,int len,::uint64_t val) {...}",
                "type": "function",
                "name": "merlin_set_range_128",
                "begin": "49",
                "end": "84",
                "arrays": [],
                "childs": [
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "55",
                        "end": "59",
                        "lc-trip-count": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "62",
                        "end": "66",
                        "lc-trip-count": 2,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "69",
                        "end": "73",
                        "lc-trip-count": 4,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "76",
                        "end": "80",
                        "lc-trip-count": 8,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__)",
                        "type": "callfunction",
                        "name": "",
                        "function_id": "",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 57,
                        "col": 12,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 64,
                        "col": 12,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 71,
                        "col": 12,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp",
                        "type": "var_ref",
                        "name": "tmp"
                    },
                    {
                        "line": 78,
                        "col": 12,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "data",
                        "type": "var_ref",
                        "name": "data"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "__PRETTY_FUNCTION__",
                        "type": "var_ref",
                        "name": "__PRETTY_FUNCTION__"
                    }
                ],
                "var_defs": [
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "start",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "void merlin_set_range_128(::merlin_uint_128* tmp,int low,int len,::uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "::merlin_uint_128* tmp,int low,int len,::uint64_t val",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "function definition: void merlin_set_range_128(::merlin_uint_128* tmp,int low,int len,::uint64_t val) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 48,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS INLINE SELFint i;int start = low;switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS INLINE SELF",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int i;",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "int start = low;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "switch(len){case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 11,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "len;",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 16,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}break;default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__);}",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 1:for(i = 0;i < 1;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 1;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 55,
                        "col": 29,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 56,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 58,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 61,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 2:for(i = 0;i < 2;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 2;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 29,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 63,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 65,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 67,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 68,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 4:for(i = 0;i < 4;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 4;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 69,
                        "col": 29,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 72,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 8,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "case 8:for(i = 0;i < 8;++i) {#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "for(i = 0;i < 8;++i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 10,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 17,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "i < 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 29,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "{#pragma HLS unrolltmp -> data[start + i] =(val & 0xff);val >>= 8;}",
                        "type": "stmt"
                    },
                    {
                        "line": 77,
                        "col": 1,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 78,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "tmp -> data[start + i] =(val & 0xff);",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 7,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "val >>= 8;",
                        "type": "stmt"
                    },
                    {
                        "line": 81,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "break;",
                        "type": "stmt"
                    },
                    {
                        "line": 82,
                        "col": 3,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "default:0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 5,
                        "source": "memcpy_128.h",
                        "topo_id": "is_skipped_node",
                        "unparse_info": "0?(static_cast < void > (0)) : __assert_fail(\"0\",\"memcpy_128.h\",83,__PRETTY_FUNCTION__);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 460,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_23",
                "unparse_info": "void mars_kernel_0_2_comp(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_comp",
                "begin": "461",
                "end": "466",
                "arrays": [],
                "childs": [
                    {
                        "line": 464,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_1_0",
                        "unparse_info": "mars_kernel_0_2_node_2_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)))",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_node_2_stage_0",
                        "function_id": "F_0_0_0_21",
                        "childs": []
                    },
                    {
                        "line": 465,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_2_0",
                        "unparse_info": "mars_kernel_0_2_node_1_stage_1(mars_i1 - 1,(int )((mars_i1 >= mars_init + 1) &(mars_i1 <= mars_cond + 1)),mars_data_buf_0_0_1,mars_key_buf_0_1)",
                        "type": "callfunction",
                        "name": "mars_kernel_0_2_node_1_stage_1",
                        "function_id": "F_0_0_0_22",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 465,
                        "col": 110,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_2_0_1_2",
                        "unparse_info": "mars_data_buf_0_0_1",
                        "type": "var_ref",
                        "name": "mars_data_buf_0_0_1"
                    },
                    {
                        "line": 465,
                        "col": 130,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_2_0_1_3",
                        "unparse_info": "mars_key_buf_0_1",
                        "type": "var_ref",
                        "name": "mars_key_buf_0_1"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 460,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_23",
                        "unparse_info": "void mars_kernel_0_2_comp(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 460,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_0",
                        "unparse_info": "int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1",
                        "type": "stmt"
                    },
                    {
                        "line": 461,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_23_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_comp(int mars_i1,int mars_init,int mars_cond,::merlin_uint_128* data,unsigned char [2][40... mars_data_buf_0_0_0,unsigned char [2][40... mars_data_buf_0_0_1,unsigned char [2][40... mars_data_buf_0_0_2,unsigned char [2][32... mars_key_buf_0_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 461,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFmars_kernel_0_2_node_2_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)));mars_kernel_0_2_node_1_stage_1(mars_i1 - 1,(int )((mars_i1 >= mars_init + 1) &(mars_i1 <= mars_cond + 1)),mars_data_buf_0_0_1,mars_key_buf_0_1);}",
                        "type": "stmt"
                    },
                    {
                        "line": 463,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 464,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_1",
                        "unparse_info": "mars_kernel_0_2_node_2_stage_0(mars_i1 - 0,(int )((mars_i1 >= mars_init + 0) &(mars_i1 <= mars_cond + 0)));",
                        "type": "stmt"
                    },
                    {
                        "line": 465,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_23_2_0_2",
                        "unparse_info": "mars_kernel_0_2_node_1_stage_1(mars_i1 - 1,(int )((mars_i1 >= mars_init + 1) &(mars_i1 <= mars_cond + 1)),mars_data_buf_0_0_1,mars_key_buf_0_1);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 434,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_21",
                "unparse_info": "void mars_kernel_0_2_node_2_stage_0(int i1,int exec) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_node_2_stage_0",
                "begin": "435",
                "end": "442",
                "arrays": [],
                "childs": [
                    {
                        "line": 440,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_21_2_0_1_1_0_0",
                        "unparse_info": "for(int i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                        "type": "loop",
                        "name": "i1_sub",
                        "canonical": "yes",
                        "begin": "440",
                        "end": "441",
                        "lc-trip-count": 2,
                        "loop_label": "merlinL0",
                        "loop_body_line": 446,
                        "loop_body_col": 1,
                        "childs": []
                    }
                ],
                "var_refs": [],
                "var_defs": [
                    {
                        "line": 440,
                        "col": 10,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1_0_0_0_0_1",
                        "unparse_info": "i1_sub",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 434,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_21",
                        "unparse_info": "void mars_kernel_0_2_node_2_stage_0(int i1,int exec) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 434,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_0",
                        "unparse_info": "int i1,int exec",
                        "type": "stmt"
                    },
                    {
                        "line": 435,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_21_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_node_2_stage_0(int i1,int exec) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 435,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {merlinL0:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {}}}",
                        "type": "stmt"
                    },
                    {
                        "line": 437,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 438,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1",
                        "unparse_info": "if(exec == 1) {merlinL0:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {}}",
                        "type": "stmt"
                    },
                    {
                        "line": 438,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 438,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1",
                        "unparse_info": "{merlinL0:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {}}",
                        "type": "stmt"
                    },
                    {
                        "line": 439,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1_0",
                        "unparse_info": "merlinL0:for(int i1_sub = 0;i1_sub < 2;++i1_sub) {}",
                        "type": "stmt"
                    },
                    {
                        "line": 440,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_21_2_0_1_1_0_0",
                        "unparse_info": "for(int i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 440,
                        "col": 10,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1_0_0_0",
                        "unparse_info": "int i1_sub = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 440,
                        "col": 10,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_21_2_0_1_1_0_0_0_0",
                        "unparse_info": "int i1_sub = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 440,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1_0_0_1",
                        "unparse_info": "i1_sub < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 446,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_21_2_0_1_1_0_0_3",
                        "unparse_info": "{}",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 451,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_22",
                "unparse_info": "void mars_kernel_0_2_node_1_stage_1(int i1,int exec,unsigned char [2][40... data_buf_0_0,unsigned char [2][32... key_buf_0) {...}",
                "type": "function",
                "name": "mars_kernel_0_2_node_1_stage_1",
                "begin": "452",
                "end": "459",
                "arrays": [],
                "childs": [
                    {
                        "line": 456,
                        "col": 41,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_1_0_0",
                        "unparse_info": "aes256_encrypt_ecb_kernel_L_1_0_para(key_buf_0,data_buf_0_0)",
                        "type": "callfunction",
                        "name": "aes256_encrypt_ecb_kernel_L_1_0_para",
                        "function_id": "F_0_0_0_17",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 456,
                        "col": 42,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_1_0_0_1_0",
                        "unparse_info": "key_buf_0",
                        "type": "var_ref",
                        "name": "key_buf_0"
                    },
                    {
                        "line": 456,
                        "col": 52,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_1_0_0_1_1",
                        "unparse_info": "data_buf_0_0",
                        "type": "var_ref",
                        "name": "data_buf_0_0"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 451,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_22",
                        "unparse_info": "void mars_kernel_0_2_node_1_stage_1(int i1,int exec,unsigned char [2][40... data_buf_0_0,unsigned char [2][32... key_buf_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 451,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_0",
                        "unparse_info": "int i1,int exec,unsigned char [2][40... data_buf_0_0,unsigned char [2][32... key_buf_0",
                        "type": "stmt"
                    },
                    {
                        "line": 452,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_22_2",
                        "unparse_info": "function definition: void mars_kernel_0_2_node_1_stage_1(int i1,int exec,unsigned char [2][40... data_buf_0_0,unsigned char [2][32... key_buf_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 452,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0",
                        "unparse_info": "{#pragma HLS INLINE OFFif(exec == 1) {aes256_encrypt_ecb_kernel_L_1_0_para(key_buf_0,data_buf_0_0);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 454,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_0",
                        "unparse_info": "#pragma HLS INLINE OFF",
                        "type": "stmt"
                    },
                    {
                        "line": 455,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1",
                        "unparse_info": "if(exec == 1) {aes256_encrypt_ecb_kernel_L_1_0_para(key_buf_0,data_buf_0_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 455,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_0",
                        "unparse_info": "exec == 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 455,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_1",
                        "unparse_info": "{aes256_encrypt_ecb_kernel_L_1_0_para(key_buf_0,data_buf_0_0);}",
                        "type": "stmt"
                    },
                    {
                        "line": 456,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_22_2_0_1_1_0",
                        "unparse_info": "aes256_encrypt_ecb_kernel_L_1_0_para(key_buf_0,data_buf_0_0);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 395,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_17",
                "unparse_info": "void aes256_encrypt_ecb_kernel_L_1_0_para(unsigned char [2][32... key_buf_0,unsigned char [2][40... data_buf_0) {...}",
                "type": "function",
                "name": "aes256_encrypt_ecb_kernel_L_1_0_para",
                "begin": "396",
                "end": "401",
                "arrays": [],
                "childs": [
                    {
                        "line": 401,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_17_2_0_2_0",
                        "unparse_info": "for(i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                        "type": "loop",
                        "name": "i1_sub",
                        "canonical": "yes",
                        "begin": "401",
                        "end": "405",
                        "lc-trip-count": 2,
                        "loop_label": "merlinL1",
                        "loop_body_line": 401,
                        "loop_body_col": 42,
                        "childs": [
                            {
                                "line": 404,
                                "col": 45,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_17_2_0_2_0_3_1_0",
                                "unparse_info": "aes256_encrypt_ecb_kernel_L_1_0_para_sub(key_buf_0[i1_sub],data_buf_0[i1_sub],i1_sub)",
                                "type": "callfunction",
                                "name": "aes256_encrypt_ecb_kernel_L_1_0_para_sub",
                                "function_id": "F_0_0_0_16",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 404,
                        "col": 46,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_3_1_0_1_0_0",
                        "unparse_info": "key_buf_0",
                        "type": "var_ref",
                        "name": "key_buf_0"
                    },
                    {
                        "line": 404,
                        "col": 64,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_3_1_0_1_1_0",
                        "unparse_info": "data_buf_0",
                        "type": "var_ref",
                        "name": "data_buf_0"
                    }
                ],
                "var_defs": [
                    {
                        "line": 399,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_1_1",
                        "unparse_info": "i1_sub",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 395,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_17",
                        "unparse_info": "void aes256_encrypt_ecb_kernel_L_1_0_para(unsigned char [2][32... key_buf_0,unsigned char [2][40... data_buf_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 395,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_0",
                        "unparse_info": "unsigned char [2][32... key_buf_0,unsigned char [2][40... data_buf_0",
                        "type": "stmt"
                    },
                    {
                        "line": 396,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_17_2",
                        "unparse_info": "function definition: void aes256_encrypt_ecb_kernel_L_1_0_para(unsigned char [2][32... key_buf_0,unsigned char [2][40... data_buf_0) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 396,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0",
                        "unparse_info": "{#pragma HLS inline offint i1_sub;merlinL1:for(i1_sub = 0;i1_sub < 2;++i1_sub) {#pragma HLS unroll completeaes256_encrypt_ecb_kernel_L_1_0_para_sub(key_buf_0[i1_sub],data_buf_0[i1_sub],i1_sub);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 398,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_0",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 399,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_17_2_0_1",
                        "unparse_info": "int i1_sub;",
                        "type": "stmt"
                    },
                    {
                        "line": 400,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2",
                        "unparse_info": "merlinL1:for(i1_sub = 0;i1_sub < 2;++i1_sub) {#pragma HLS unroll completeaes256_encrypt_ecb_kernel_L_1_0_para_sub(key_buf_0[i1_sub],data_buf_0[i1_sub],i1_sub);}",
                        "type": "stmt"
                    },
                    {
                        "line": 401,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_17_2_0_2_0",
                        "unparse_info": "for(i1_sub = 0;i1_sub < 2;++i1_sub) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 401,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_0",
                        "unparse_info": "i1_sub = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 401,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_0_0",
                        "unparse_info": "i1_sub = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 401,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_1",
                        "unparse_info": "i1_sub < 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 401,
                        "col": 42,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS unroll completeaes256_encrypt_ecb_kernel_L_1_0_para_sub(key_buf_0[i1_sub],data_buf_0[i1_sub],i1_sub);}",
                        "type": "stmt"
                    },
                    {
                        "line": 403,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS unroll complete",
                        "type": "stmt"
                    },
                    {
                        "line": 404,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_17_2_0_2_0_3_1",
                        "unparse_info": "aes256_encrypt_ecb_kernel_L_1_0_para_sub(key_buf_0[i1_sub],data_buf_0[i1_sub],i1_sub);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 371,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_16",
                "unparse_info": "void aes256_encrypt_ecb_kernel_L_1_0_para_sub(unsigned char [32] key_buf_0,unsigned char [4096]... data_buf_0,int i1_sub) {...}",
                "type": "function",
                "name": "aes256_encrypt_ecb_kernel_L_1_0_para_sub",
                "begin": "377",
                "end": "384",
                "arrays": [],
                "childs": [
                    {
                        "line": 384,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_16_2_0_2_0",
                        "unparse_info": "for(int i2 = 0;i2 < 1024 * 4;i2++) {...}",
                        "type": "loop",
                        "name": "i2",
                        "canonical": "yes",
                        "begin": "384",
                        "end": "392",
                        "lc-trip-count": 4096,
                        "loop_label": "merlinL2",
                        "loop_body_line": 388,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 391,
                                "col": 23,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_16_2_0_2_0_3_1_0",
                                "unparse_info": "aes256_encrypt_ecb(key_buf_0,data_buf_0[i2])",
                                "type": "callfunction",
                                "name": "aes256_encrypt_ecb",
                                "function_id": "F_0_0_0_14",
                                "childs": []
                            }
                        ]
                    }
                ],
                "var_refs": [
                    {
                        "line": 391,
                        "col": 24,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_3_1_0_1_0",
                        "unparse_info": "key_buf_0",
                        "type": "var_ref",
                        "name": "key_buf_0"
                    },
                    {
                        "line": 391,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_3_1_0_1_1_0",
                        "unparse_info": "data_buf_0",
                        "type": "var_ref",
                        "name": "data_buf_0"
                    }
                ],
                "var_defs": [
                    {
                        "line": 384,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_0_0_1",
                        "unparse_info": "i2",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 371,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_16",
                        "unparse_info": "void aes256_encrypt_ecb_kernel_L_1_0_para_sub(unsigned char [32] key_buf_0,unsigned char [4096]... data_buf_0,int i1_sub) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 371,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_0",
                        "unparse_info": "unsigned char [32] key_buf_0,unsigned char [4096]... data_buf_0,int i1_sub",
                        "type": "stmt"
                    },
                    {
                        "line": 377,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_16_2",
                        "unparse_info": "function definition: void aes256_encrypt_ecb_kernel_L_1_0_para_sub(unsigned char [32] key_buf_0,unsigned char [4096]... data_buf_0,int i1_sub) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 377,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0",
                        "unparse_info": "{#pragma HLS function_instantiate variable=i1_sub#pragma HLS inline offmerlinL2:for(int i2 = 0;i2 < 1024 * 4;i2++) {#pragma HLS pipelineaes256_encrypt_ecb(key_buf_0,data_buf_0[i2]);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 379,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_0",
                        "unparse_info": "#pragma HLS function_instantiate variable=i1_sub",
                        "type": "stmt"
                    },
                    {
                        "line": 381,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_1",
                        "unparse_info": "#pragma HLS inline off",
                        "type": "stmt"
                    },
                    {
                        "line": 383,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2",
                        "unparse_info": "merlinL2:for(int i2 = 0;i2 < 1024 * 4;i2++) {#pragma HLS pipelineaes256_encrypt_ecb(key_buf_0,data_buf_0[i2]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 384,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_16_2_0_2_0",
                        "unparse_info": "for(int i2 = 0;i2 < 1024 * 4;i2++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 384,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_0",
                        "unparse_info": "int i2 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 384,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_16_2_0_2_0_0_0",
                        "unparse_info": "int i2 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 384,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_1",
                        "unparse_info": "i2 < 1024 * 4;",
                        "type": "stmt"
                    },
                    {
                        "line": 388,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS pipelineaes256_encrypt_ecb(key_buf_0,data_buf_0[i2]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 390,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS pipeline",
                        "type": "stmt"
                    },
                    {
                        "line": 391,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_16_2_0_2_0_3_1",
                        "unparse_info": "aes256_encrypt_ecb(key_buf_0,data_buf_0[i2]);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 300,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_14",
                "unparse_info": "void aes256_encrypt_ecb(unsigned char [32] k,unsigned char [16] buf) {...}",
                "type": "function",
                "name": "aes256_encrypt_ecb",
                "begin": "301",
                "end": "366",
                "arrays": [
                    {
                        "line": 304,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_1_1",
                        "unparse_info": "ctx_deckey",
                        "type": "array",
                        "name": "ctx_deckey"
                    },
                    {
                        "line": 307,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_3_1",
                        "unparse_info": "ctx_enckey",
                        "type": "array",
                        "name": "ctx_enckey"
                    },
                    {
                        "line": 310,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_5_1",
                        "unparse_info": "ctx_key",
                        "type": "array",
                        "name": "ctx_key"
                    }
                ],
                "childs": [
                    {
                        "line": 318,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_9_0",
                        "unparse_info": "for(_s_i_1 =((unsigned char )0);_s_i_1 <= 31;++_s_i_1) {...}",
                        "type": "loop",
                        "name": "_s_i_1",
                        "canonical": "yes",
                        "begin": "318",
                        "end": "325",
                        "lc-trip-count": 32,
                        "loop_label": "ecb1",
                        "loop_body_line": 321,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 330,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_11_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 6;_s_i_0++) {...}",
                        "type": "loop",
                        "name": "_s_i_0",
                        "canonical": "yes",
                        "begin": "330",
                        "end": "337",
                        "lc-trip-count": 7,
                        "loop_label": "ecb2",
                        "loop_body_line": 333,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 336,
                                "col": 21,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_11_0_3_1_0",
                                "unparse_info": "aes_expandEncKey(ctx_deckey,&rcon)",
                                "type": "callfunction",
                                "name": "aes_expandEncKey",
                                "function_id": "F_0_0_0_7",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 340,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_13_0",
                        "unparse_info": "aes_addRoundKey_cpy((unsigned char *)buf,ctx_enckey,ctx_key)",
                        "type": "callfunction",
                        "name": "aes_addRoundKey_cpy",
                        "function_id": "F_0_0_0_8",
                        "childs": []
                    },
                    {
                        "line": 345,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_16_0",
                        "unparse_info": "for(_s_i =((unsigned char )1);_s_i <= 13;++_s_i) {...}",
                        "type": "loop",
                        "name": "_s_i",
                        "canonical": "yes",
                        "begin": "345",
                        "end": "362",
                        "lc-trip-count": 13,
                        "loop_label": "ecb3",
                        "loop_body_line": 348,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 351,
                                "col": 17,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_1_0",
                                "unparse_info": "aes_subBytes((unsigned char *)buf)",
                                "type": "callfunction",
                                "name": "aes_subBytes",
                                "function_id": "F_0_0_0_9",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 352,
                                "col": 18,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_2_0",
                                "unparse_info": "aes_shiftRows((unsigned char *)buf)",
                                "type": "callfunction",
                                "name": "aes_shiftRows",
                                "function_id": "F_0_0_0_10",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 353,
                                "col": 19,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_3_0",
                                "unparse_info": "aes_mixColumns((unsigned char *)buf)",
                                "type": "callfunction",
                                "name": "aes_mixColumns",
                                "function_id": "F_0_0_0_12",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 355,
                                "col": 22,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_4_1_0_0",
                                "unparse_info": "aes_addRoundKey((unsigned char *)buf,&ctx_key[16])",
                                "type": "callfunction",
                                "name": "aes_addRoundKey",
                                "function_id": "F_0_0_0_13",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 358,
                                "col": 25,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_0_0",
                                "unparse_info": "aes_expandEncKey_1(ctx_key,&rcon)",
                                "type": "callfunction",
                                "name": "aes_expandEncKey_1",
                                "function_id": "F_0_0_0_5",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 359,
                                "col": 22,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_1_0",
                                "unparse_info": "aes_addRoundKey((unsigned char *)buf,ctx_key)",
                                "type": "callfunction",
                                "name": "aes_addRoundKey",
                                "function_id": "F_0_0_0_13",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 362,
                        "col": 15,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_17_0",
                        "unparse_info": "aes_subBytes((unsigned char *)buf)",
                        "type": "callfunction",
                        "name": "aes_subBytes",
                        "function_id": "F_0_0_0_9",
                        "childs": []
                    },
                    {
                        "line": 363,
                        "col": 16,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_18_0",
                        "unparse_info": "aes_shiftRows((unsigned char *)buf)",
                        "type": "callfunction",
                        "name": "aes_shiftRows",
                        "function_id": "F_0_0_0_10",
                        "childs": []
                    },
                    {
                        "line": 364,
                        "col": 21,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_19_0",
                        "unparse_info": "aes_expandEncKey_2(ctx_key,&rcon)",
                        "type": "callfunction",
                        "name": "aes_expandEncKey_2",
                        "function_id": "F_0_0_0_6",
                        "childs": []
                    },
                    {
                        "line": 365,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_20_0",
                        "unparse_info": "aes_addRoundKey((unsigned char *)buf,ctx_key)",
                        "type": "callfunction",
                        "name": "aes_addRoundKey",
                        "function_id": "F_0_0_0_13",
                        "childs": []
                    }
                ],
                "var_refs": [
                    {
                        "line": 324,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3_1_0_0_0",
                        "unparse_info": "ctx_enckey",
                        "type": "var_ref",
                        "name": "ctx_enckey"
                    },
                    {
                        "line": 324,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3_1_0_1_0_0",
                        "unparse_info": "ctx_deckey",
                        "type": "var_ref",
                        "name": "ctx_deckey"
                    },
                    {
                        "line": 324,
                        "col": 47,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3_1_0_1_1_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 336,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_3_1_0_1_0",
                        "unparse_info": "ctx_deckey",
                        "type": "var_ref",
                        "name": "ctx_deckey"
                    },
                    {
                        "line": 340,
                        "col": 40,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_13_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 340,
                        "col": 44,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_13_0_1_1",
                        "unparse_info": "ctx_enckey",
                        "type": "var_ref",
                        "name": "ctx_enckey"
                    },
                    {
                        "line": 340,
                        "col": 55,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_13_0_1_2",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    },
                    {
                        "line": 351,
                        "col": 35,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_1_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 352,
                        "col": 36,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_2_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 353,
                        "col": 37,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_3_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 355,
                        "col": 40,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_1_0_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 355,
                        "col": 45,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_1_0_0_1_1_0_0",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    },
                    {
                        "line": 358,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_0_0_1_0",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    },
                    {
                        "line": 359,
                        "col": 40,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_1_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 359,
                        "col": 44,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_1_0_1_1",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    },
                    {
                        "line": 362,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_17_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 363,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_18_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 364,
                        "col": 22,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_19_0_1_0",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    },
                    {
                        "line": 365,
                        "col": 36,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_20_0_1_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 365,
                        "col": 40,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_20_0_1_1",
                        "unparse_info": "ctx_key",
                        "type": "var_ref",
                        "name": "ctx_key"
                    }
                ],
                "var_defs": [
                    {
                        "line": 314,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_7_1",
                        "unparse_info": "rcon",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 315,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_8_1",
                        "unparse_info": "_s_i_1",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 326,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_10_1",
                        "unparse_info": "_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 341,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_14_1",
                        "unparse_info": "_s_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 300,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_14",
                        "unparse_info": "void aes256_encrypt_ecb(unsigned char [32] k,unsigned char [16] buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 300,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_0",
                        "unparse_info": "unsigned char [32] k,unsigned char [16] buf",
                        "type": "stmt"
                    },
                    {
                        "line": 301,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_14_2",
                        "unparse_info": "function definition: void aes256_encrypt_ecb(unsigned char [32] k,unsigned char [16] buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 301,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0",
                        "unparse_info": "{#pragma HLS INLINEunsigned char ctx_deckey[32];#pragma HLS array_partition variable=ctx_deckey complete dim=1unsigned char ctx_enckey[32];#pragma HLS array_partition variable=ctx_enckey complete dim=1unsigned char ctx_key[32];#pragma HLS array_partition variable=ctx_key complete dim=1unsigned char rcon =(unsigned char )1;int _s_i_1;ecb1:for(_s_i_1 =((unsigned char )0);_s_i_1 <= 31;++_s_i_1) {#pragma HLS unrollctx_enckey[_s_i_1] = ctx_deckey[_s_i_1] = k[_s_i_1];}int _s_i_0;ecb2:for(_s_i_0 = 0;_s_i_0 <= 6;_s_i_0++) {#pragma HLS unrollaes_expandEncKey(ctx_deckey,&rcon);}_s_i_0 = 2 + - 1;aes_addRoundKey_cpy((unsigned char *)buf,ctx_enckey,ctx_key);int _s_i;rcon =((unsigned char )1);ecb3:for(_s_i =((unsigned char )1);_s_i <= 13;++_s_i) {#pragma HLS unrollaes_subBytes((unsigned char *)buf);aes_shiftRows((unsigned char *)buf);aes_mixColumns((unsigned char *)buf);if((bool )(((int )_s_i) & 1)) {aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);}else {aes_expandEncKey_1(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}}aes_subBytes((unsigned char *)buf);aes_shiftRows((unsigned char *)buf);aes_expandEncKey_2(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}",
                        "type": "stmt"
                    },
                    {
                        "line": 303,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 304,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_1",
                        "unparse_info": "unsigned char ctx_deckey[32];",
                        "type": "stmt"
                    },
                    {
                        "line": 306,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_2",
                        "unparse_info": "#pragma HLS array_partition variable=ctx_deckey complete dim=1",
                        "type": "stmt"
                    },
                    {
                        "line": 307,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_3",
                        "unparse_info": "unsigned char ctx_enckey[32];",
                        "type": "stmt"
                    },
                    {
                        "line": 309,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_4",
                        "unparse_info": "#pragma HLS array_partition variable=ctx_enckey complete dim=1",
                        "type": "stmt"
                    },
                    {
                        "line": 310,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_5",
                        "unparse_info": "unsigned char ctx_key[32];",
                        "type": "stmt"
                    },
                    {
                        "line": 312,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_6",
                        "unparse_info": "#pragma HLS array_partition variable=ctx_key complete dim=1",
                        "type": "stmt"
                    },
                    {
                        "line": 314,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_7",
                        "unparse_info": "unsigned char rcon =(unsigned char )1;",
                        "type": "stmt"
                    },
                    {
                        "line": 315,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_8",
                        "unparse_info": "int _s_i_1;",
                        "type": "stmt"
                    },
                    {
                        "line": 316,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9",
                        "unparse_info": "ecb1:for(_s_i_1 =((unsigned char )0);_s_i_1 <= 31;++_s_i_1) {#pragma HLS unrollctx_enckey[_s_i_1] = ctx_deckey[_s_i_1] = k[_s_i_1];}",
                        "type": "stmt"
                    },
                    {
                        "line": 318,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_9_0",
                        "unparse_info": "for(_s_i_1 =((unsigned char )0);_s_i_1 <= 31;++_s_i_1) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 318,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_0",
                        "unparse_info": "_s_i_1 =((unsigned char )0);;",
                        "type": "stmt"
                    },
                    {
                        "line": 318,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_0_0",
                        "unparse_info": "_s_i_1 =((unsigned char )0);",
                        "type": "stmt"
                    },
                    {
                        "line": 318,
                        "col": 38,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_1",
                        "unparse_info": "_s_i_1 <= 31;",
                        "type": "stmt"
                    },
                    {
                        "line": 321,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3",
                        "unparse_info": "{#pragma HLS unrollctx_enckey[_s_i_1] = ctx_deckey[_s_i_1] = k[_s_i_1];}",
                        "type": "stmt"
                    },
                    {
                        "line": 323,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 324,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_9_0_3_1",
                        "unparse_info": "ctx_enckey[_s_i_1] = ctx_deckey[_s_i_1] = k[_s_i_1];",
                        "type": "stmt"
                    },
                    {
                        "line": 326,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_10",
                        "unparse_info": "int _s_i_0;",
                        "type": "stmt"
                    },
                    {
                        "line": 327,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11",
                        "unparse_info": "ecb2:for(_s_i_0 = 0;_s_i_0 <= 6;_s_i_0++) {#pragma HLS unrollaes_expandEncKey(ctx_deckey,&rcon);}",
                        "type": "stmt"
                    },
                    {
                        "line": 330,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_11_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 6;_s_i_0++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 330,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_0",
                        "unparse_info": "_s_i_0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 330,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_0_0",
                        "unparse_info": "_s_i_0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 330,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_1",
                        "unparse_info": "_s_i_0 <= 6;",
                        "type": "stmt"
                    },
                    {
                        "line": 333,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_3",
                        "unparse_info": "{#pragma HLS unrollaes_expandEncKey(ctx_deckey,&rcon);}",
                        "type": "stmt"
                    },
                    {
                        "line": 335,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 336,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_11_0_3_1",
                        "unparse_info": "aes_expandEncKey(ctx_deckey,&rcon);",
                        "type": "stmt"
                    },
                    {
                        "line": 338,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_12",
                        "unparse_info": "_s_i_0 = 2 + - 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 340,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_13",
                        "unparse_info": "aes_addRoundKey_cpy((unsigned char *)buf,ctx_enckey,ctx_key);",
                        "type": "stmt"
                    },
                    {
                        "line": 341,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_14_2_0_14",
                        "unparse_info": "int _s_i;",
                        "type": "stmt"
                    },
                    {
                        "line": 342,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_15",
                        "unparse_info": "rcon =((unsigned char )1);",
                        "type": "stmt"
                    },
                    {
                        "line": 343,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16",
                        "unparse_info": "ecb3:for(_s_i =((unsigned char )1);_s_i <= 13;++_s_i) {#pragma HLS unrollaes_subBytes((unsigned char *)buf);aes_shiftRows((unsigned char *)buf);aes_mixColumns((unsigned char *)buf);if((bool )(((int )_s_i) & 1)) {aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);}else {aes_expandEncKey_1(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 345,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_14_2_0_16_0",
                        "unparse_info": "for(_s_i =((unsigned char )1);_s_i <= 13;++_s_i) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 345,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_0",
                        "unparse_info": "_s_i =((unsigned char )1);;",
                        "type": "stmt"
                    },
                    {
                        "line": 345,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_0_0",
                        "unparse_info": "_s_i =((unsigned char )1);",
                        "type": "stmt"
                    },
                    {
                        "line": 345,
                        "col": 36,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_1",
                        "unparse_info": "_s_i <= 13;",
                        "type": "stmt"
                    },
                    {
                        "line": 348,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3",
                        "unparse_info": "{#pragma HLS unrollaes_subBytes((unsigned char *)buf);aes_shiftRows((unsigned char *)buf);aes_mixColumns((unsigned char *)buf);if((bool )(((int )_s_i) & 1)) {aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);}else {aes_expandEncKey_1(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}}",
                        "type": "stmt"
                    },
                    {
                        "line": 350,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 351,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_1",
                        "unparse_info": "aes_subBytes((unsigned char *)buf);",
                        "type": "stmt"
                    },
                    {
                        "line": 352,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_2",
                        "unparse_info": "aes_shiftRows((unsigned char *)buf);",
                        "type": "stmt"
                    },
                    {
                        "line": 353,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_3",
                        "unparse_info": "aes_mixColumns((unsigned char *)buf);",
                        "type": "stmt"
                    },
                    {
                        "line": 354,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4",
                        "unparse_info": "if((bool )(((int )_s_i) & 1)) {aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);}else {aes_expandEncKey_1(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}",
                        "type": "stmt"
                    },
                    {
                        "line": 354,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_0",
                        "unparse_info": "(bool )(((int )_s_i) & 1);",
                        "type": "stmt"
                    },
                    {
                        "line": 354,
                        "col": 36,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_1",
                        "unparse_info": "{aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 355,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_1_0",
                        "unparse_info": "aes_addRoundKey((unsigned char *)buf,&ctx_key[16]);",
                        "type": "stmt"
                    },
                    {
                        "line": 357,
                        "col": 11,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2",
                        "unparse_info": "{aes_expandEncKey_1(ctx_key,&rcon);aes_addRoundKey((unsigned char *)buf,ctx_key);}",
                        "type": "stmt"
                    },
                    {
                        "line": 358,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_0",
                        "unparse_info": "aes_expandEncKey_1(ctx_key,&rcon);",
                        "type": "stmt"
                    },
                    {
                        "line": 359,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_16_0_3_4_2_1",
                        "unparse_info": "aes_addRoundKey((unsigned char *)buf,ctx_key);",
                        "type": "stmt"
                    },
                    {
                        "line": 362,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_17",
                        "unparse_info": "aes_subBytes((unsigned char *)buf);",
                        "type": "stmt"
                    },
                    {
                        "line": 363,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_18",
                        "unparse_info": "aes_shiftRows((unsigned char *)buf);",
                        "type": "stmt"
                    },
                    {
                        "line": 364,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_19",
                        "unparse_info": "aes_expandEncKey_2(ctx_key,&rcon);",
                        "type": "stmt"
                    },
                    {
                        "line": 365,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_14_2_0_20",
                        "unparse_info": "aes_addRoundKey((unsigned char *)buf,ctx_key);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 114,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_7",
                "unparse_info": "void aes_expandEncKey(unsigned char * k,unsigned char * rc) {...}",
                "type": "function",
                "name": "aes_expandEncKey",
                "begin": "115",
                "end": "155",
                "arrays": [],
                "childs": [
                    {
                        "line": 118,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1_0_1_0_0",
                        "unparse_info": "(rj_sbox((int )k[29]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 119,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_2_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[30]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 120,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_3_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[31]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 121,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_4_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[28]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 127,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "loop",
                        "name": "_s_i_0",
                        "canonical": "yes",
                        "begin": "127",
                        "end": "135",
                        "lc-trip-count": 3,
                        "loop_label": "exp1",
                        "loop_body_line": 130,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 137,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_9_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[12]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 138,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_10_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[13]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 139,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_11_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[14]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 140,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_12_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[15]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 145,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "loop",
                        "name": "_s_i",
                        "canonical": "yes",
                        "begin": "145",
                        "end": "153",
                        "lc-trip-count": 3,
                        "loop_label": "exp2",
                        "loop_body_line": 148,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 118,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 118,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1_0_1_0_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 118,
                        "col": 54,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1_0_1_1_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 119,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_2_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 119,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_2_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 120,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_3_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 120,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_3_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 121,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_4_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 121,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_4_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 122,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 122,
                        "col": 38,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 122,
                        "col": 61,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5_0_1_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 134,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 31,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 59,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 94,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 123,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 158,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 187,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 134,
                        "col": 222,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 137,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_9_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 137,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_9_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 138,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_10_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 138,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_10_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 139,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_11_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 139,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_11_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 140,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_12_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 140,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_12_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 29,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 55,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 88,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 115,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 148,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 175,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 152,
                        "col": 208,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    }
                ],
                "var_defs": [
                    {
                        "line": 123,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_6_1",
                        "unparse_info": "_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 133,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_1_1",
                        "unparse_info": "_in_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 141,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_13_1",
                        "unparse_info": "_s_i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 151,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_1_1",
                        "unparse_info": "_in_s_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 114,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_7",
                        "unparse_info": "void aes_expandEncKey(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 114,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_0",
                        "unparse_info": "unsigned char * k,unsigned char * rc",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_7_2",
                        "unparse_info": "function definition: void aes_expandEncKey(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 115,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0",
                        "unparse_info": "{#pragma HLS INLINEk[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));k[1] ^=((int )(rj_sbox((int )k[30])));k[2] ^=((int )(rj_sbox((int )k[31])));k[3] ^=((int )(rj_sbox((int )k[28])));*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));int _s_i_0;exp1:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(4 + 4L * _s_i_0);(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}_s_i_0 =(12 + 4L);k[16] ^=((int )(rj_sbox((int )k[12])));k[17] ^=((int )(rj_sbox((int )k[13])));k[18] ^=((int )(rj_sbox((int )k[14])));k[19] ^=((int )(rj_sbox((int )k[15])));int _s_i;exp2:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(20 + 4L * _s_i);(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}_s_i =(28 + 4L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 117,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 118,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_1",
                        "unparse_info": "k[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));",
                        "type": "stmt"
                    },
                    {
                        "line": 119,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_2",
                        "unparse_info": "k[1] ^=((int )(rj_sbox((int )k[30])));",
                        "type": "stmt"
                    },
                    {
                        "line": 120,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_3",
                        "unparse_info": "k[2] ^=((int )(rj_sbox((int )k[31])));",
                        "type": "stmt"
                    },
                    {
                        "line": 121,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_4",
                        "unparse_info": "k[3] ^=((int )(rj_sbox((int )k[28])));",
                        "type": "stmt"
                    },
                    {
                        "line": 122,
                        "col": 4,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_5",
                        "unparse_info": "*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));",
                        "type": "stmt"
                    },
                    {
                        "line": 123,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_6",
                        "unparse_info": "int _s_i_0;",
                        "type": "stmt"
                    },
                    {
                        "line": 124,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7",
                        "unparse_info": "exp1:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(4 + 4L * _s_i_0);(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 127,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 127,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_0",
                        "unparse_info": "_s_i_0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 127,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_0_0",
                        "unparse_info": "_s_i_0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 127,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_1",
                        "unparse_info": "_s_i_0 <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 130,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i_0 =(4 + 4L * _s_i_0);(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 132,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 133,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_7_0_3_1",
                        "unparse_info": "int _in_s_i_0 =(4 + 4L * _s_i_0);",
                        "type": "stmt"
                    },
                    {
                        "line": 134,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_7_0_3_2",
                        "unparse_info": "(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 136,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_8",
                        "unparse_info": "_s_i_0 =(12 + 4L);",
                        "type": "stmt"
                    },
                    {
                        "line": 137,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_9",
                        "unparse_info": "k[16] ^=((int )(rj_sbox((int )k[12])));",
                        "type": "stmt"
                    },
                    {
                        "line": 138,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_10",
                        "unparse_info": "k[17] ^=((int )(rj_sbox((int )k[13])));",
                        "type": "stmt"
                    },
                    {
                        "line": 139,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_11",
                        "unparse_info": "k[18] ^=((int )(rj_sbox((int )k[14])));",
                        "type": "stmt"
                    },
                    {
                        "line": 140,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_12",
                        "unparse_info": "k[19] ^=((int )(rj_sbox((int )k[15])));",
                        "type": "stmt"
                    },
                    {
                        "line": 141,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_13",
                        "unparse_info": "int _s_i;",
                        "type": "stmt"
                    },
                    {
                        "line": 142,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14",
                        "unparse_info": "exp2:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(20 + 4L * _s_i);(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_7_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_0",
                        "unparse_info": "_s_i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_0_0",
                        "unparse_info": "_s_i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 145,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_1",
                        "unparse_info": "_s_i <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 148,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i =(20 + 4L * _s_i);(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 150,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 151,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_7_2_0_14_0_3_1",
                        "unparse_info": "int _in_s_i =(20 + 4L * _s_i);",
                        "type": "stmt"
                    },
                    {
                        "line": 152,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_14_0_3_2",
                        "unparse_info": "(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 154,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_7_2_0_15",
                        "unparse_info": "_s_i =(28 + 4L);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 18,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_4",
                "unparse_info": "unsigned char rj_sbox(int t) {...}",
                "type": "function",
                "name": "rj_sbox",
                "begin": "19",
                "end": "24",
                "arrays": [
                    {
                        "line": 22,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_2_0_1_1",
                        "unparse_info": "sbox",
                        "type": "array",
                        "name": "sbox"
                    }
                ],
                "childs": [],
                "var_refs": [
                    {
                        "line": 23,
                        "col": 10,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_2_0_2_0_0",
                        "unparse_info": "sbox",
                        "type": "var_ref",
                        "name": "sbox"
                    }
                ],
                "var_defs": [],
                "stmts": [
                    {
                        "line": 18,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_4",
                        "unparse_info": "unsigned char rj_sbox(int t) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 18,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_0",
                        "unparse_info": "int t",
                        "type": "stmt"
                    },
                    {
                        "line": 19,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_4_2",
                        "unparse_info": "function definition: unsigned char rj_sbox(int t) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 19,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_2_0",
                        "unparse_info": "{#pragma HLS INLINEconst unsigned char sbox[256] = {((unsigned char )0x63),((unsigned char )0x7c),((unsigned char )0x77),((unsigned char )0x7b),((unsigned char )0xf2),((unsigned char )0x6b),((unsigned char )0x6f),((unsigned char )0xc5),((unsigned char )0x30),((unsigned char )0x01),((unsigned char )0x67),((unsigned char )0x2b),((unsigned char )0xfe),((unsigned char )0xd7),((unsigned char )0xab),((unsigned char )0x76),((unsigned char )0xca),((unsigned char )0x82),((unsigned char )0xc9),((unsigned char )0x7d),((unsigned char )0xfa),((unsigned char )0x59),((unsigned char )0x47),((unsigned char )0xf0),((unsigned char )0xad),((unsigned char )0xd4),((unsigned char )0xa2),((unsigned char )0xaf),((unsigned char )0x9c),((unsigned char )0xa4),((unsigned char )0x72),((unsigned char )0xc0),((unsigned char )0xb7),((unsigned char )0xfd),((unsigned char )0x93),((unsigned char )0x26),((unsigned char )0x36),((unsigned char )0x3f),((unsigned char )0xf7),((unsigned char )0xcc),((unsigned char )0x34),((unsigned char )0xa5),((unsigned char )0xe5),((unsigned char )0xf1),((unsigned char )0x71),((unsigned char )0xd8),((unsigned char )0x31),((unsigned char )0x15),((unsigned char )0x04),((unsigned char )0xc7),((unsigned char )0x23),((unsigned char )0xc3),((unsigned char )0x18),((unsigned char )0x96),((unsigned char )0x05),((unsigned char )0x9a),((unsigned char )0x07),((unsigned char )0x12),((unsigned char )0x80),((unsigned char )0xe2),((unsigned char )0xeb),((unsigned char )0x27),((unsigned char )0xb2),((unsigned char )0x75),((unsigned char )0x09),((unsigned char )0x83),((unsigned char )0x2c),((unsigned char )0x1a),((unsigned char )0x1b),((unsigned char )0x6e),((unsigned char )0x5a),((unsigned char )0xa0),((unsigned char )0x52),((unsigned char )0x3b),((unsigned char )0xd6),((unsigned char )0xb3),((unsigned char )0x29),((unsigned char )0xe3),((unsigned char )0x2f),((unsigned char )0x84),((unsigned char )0x53),((unsigned char )0xd1),((unsigned char )0x00),((unsigned char )0xed),((unsigned char )0x20),((unsigned char )0xfc),((unsigned char )0xb1),((unsigned char )0x5b),((unsigned char )0x6a),((unsigned char )0xcb),((unsigned char )0xbe),((unsigned char )0x39),((unsigned char )0x4a),((unsigned char )0x4c),((unsigned char )0x58),((unsigned char )0xcf),((unsigned char )0xd0),((unsigned char )0xef),((unsigned char )0xaa),((unsigned char )0xfb),((unsigned char )0x43),((unsigned char )0x4d),((unsigned char )0x33),((unsigned char )0x85),((unsigned char )0x45),((unsigned char )0xf9),((unsigned char )0x02),((unsigned char )0x7f),((unsigned char )0x50),((unsigned char )0x3c),((unsigned char )0x9f),((unsigned char )0xa8),((unsigned char )0x51),((unsigned char )0xa3),((unsigned char )0x40),((unsigned char )0x8f),((unsigned char )0x92),((unsigned char )0x9d),((unsigned char )0x38),((unsigned char )0xf5),((unsigned char )0xbc),((unsigned char )0xb6),((unsigned char )0xda),((unsigned char )0x21),((unsigned char )0x10),((unsigned char )0xff),((unsigned char )0xf3),((unsigned char )0xd2),((unsigned char )0xcd),((unsigned char )0x0c),((unsigned char )0x13),((unsigned char )0xec),((unsigned char )0x5f),((unsigned char )0x97),((unsigned char )0x44),((unsigned char )0x17),((unsigned char )0xc4),((unsigned char )0xa7),((unsigned char )0x7e),((unsigned char )0x3d),((unsigned char )0x64),((unsigned char )0x5d),((unsigned char )0x19),((unsigned char )0x73),((unsigned char )0x60),((unsigned char )0x81),((unsigned char )0x4f),((unsigned char )0xdc),((unsigned char )0x22),((unsigned char )0x2a),((unsigned char )0x90),((unsigned char )0x88),((unsigned char )0x46),((unsigned char )0xee),((unsigned char )0xb8),((unsigned char )0x14),((unsigned char )0xde),((unsigned char )0x5e),((unsigned char )0x0b),((unsigned char )0xdb),((unsigned char )0xe0),((unsigned char )0x32),((unsigned char )0x3a),((unsigned char )0x0a),((unsigned char )0x49),((unsigned char )0x06),((unsigned char )0x24),((unsigned char )0x5c),((unsigned char )0xc2),((unsigned char )0xd3),((unsigned char )0xac),((unsigned char )0x62),((unsigned char )0x91),((unsigned char )0x95),((unsigned char )0xe4),((unsigned char )0x79),((unsigned char )0xe7),((unsigned char )0xc8),((unsigned char )0x37),((unsigned char )0x6d),((unsigned char )0x8d),((unsigned char )0xd5),((unsigned char )0x4e),((unsigned char )0xa9),((unsigned char )0x6c),((unsigned char )0x56),((unsigned char )0xf4),((unsigned char )0xea),((unsigned char )0x65),((unsigned char )0x7a),((unsigned char )0xae),((unsigned char )0x08),((unsigned char )0xba),((unsigned char )0x78),((unsigned char )0x25),((unsigned char )0x2e),((unsigned char )0x1c),((unsigned char )0xa6),((unsigned char )0xb4),((unsigned char )0xc6),((unsigned char )0xe8),((unsigned char )0xdd),((unsigned char )0x74),((unsigned char )0x1f),((unsigned char )0x4b),((unsigned char )0xbd),((unsigned char )0x8b),((unsigned char )0x8a),((unsigned char )0x70),((unsigned char )0x3e),((unsigned char )0xb5),((unsigned char )0x66),((unsigned char )0x48),((unsigned char )0x03),((unsigned char )0xf6),((unsigned char )0x0e),((unsigned char )0x61),((unsigned char )0x35),((unsigned char )0x57),((unsigned char )0xb9),((unsigned char )0x86),((unsigned char )0xc1),((unsigned char )0x1d),((unsigned char )0x9e),((unsigned char )0xe1),((unsigned char )0xf8),((unsigned char )0x98),((unsigned char )0x11),((unsigned char )0x69),((unsigned char )0xd9),((unsigned char )0x8e),((unsigned char )0x94),((unsigned char )0x9b),((unsigned char )0x1e),((unsigned char )0x87),((unsigned char )0xe9),((unsigned char )0xce),((unsigned char )0x55),((unsigned char )0x28),((unsigned char )0xdf),((unsigned char )0x8c),((unsigned char )0xa1),((unsigned char )0x89),((unsigned char )0x0d),((unsigned char )0xbf),((unsigned char )0xe6),((unsigned char )0x42),((unsigned char )0x68),((unsigned char )0x41),((unsigned char )0x99),((unsigned char )0x2d),((unsigned char )0x0f),((unsigned char )0xb0),((unsigned char )0x54),((unsigned char )0xbb),((unsigned char )0x16)};return sbox[t];}",
                        "type": "stmt"
                    },
                    {
                        "line": 21,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 22,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_4_2_0_1",
                        "unparse_info": "const unsigned char sbox[256] = {((unsigned char )0x63),((unsigned char )0x7c),((unsigned char )0x77),((unsigned char )0x7b),((unsigned char )0xf2),((unsigned char )0x6b),((unsigned char )0x6f),((unsigned char )0xc5),((unsigned char )0x30),((unsigned char )0x01),((unsigned char )0x67),((unsigned char )0x2b),((unsigned char )0xfe),((unsigned char )0xd7),((unsigned char )0xab),((unsigned char )0x76),((unsigned char )0xca),((unsigned char )0x82),((unsigned char )0xc9),((unsigned char )0x7d),((unsigned char )0xfa),((unsigned char )0x59),((unsigned char )0x47),((unsigned char )0xf0),((unsigned char )0xad),((unsigned char )0xd4),((unsigned char )0xa2),((unsigned char )0xaf),((unsigned char )0x9c),((unsigned char )0xa4),((unsigned char )0x72),((unsigned char )0xc0),((unsigned char )0xb7),((unsigned char )0xfd),((unsigned char )0x93),((unsigned char )0x26),((unsigned char )0x36),((unsigned char )0x3f),((unsigned char )0xf7),((unsigned char )0xcc),((unsigned char )0x34),((unsigned char )0xa5),((unsigned char )0xe5),((unsigned char )0xf1),((unsigned char )0x71),((unsigned char )0xd8),((unsigned char )0x31),((unsigned char )0x15),((unsigned char )0x04),((unsigned char )0xc7),((unsigned char )0x23),((unsigned char )0xc3),((unsigned char )0x18),((unsigned char )0x96),((unsigned char )0x05),((unsigned char )0x9a),((unsigned char )0x07),((unsigned char )0x12),((unsigned char )0x80),((unsigned char )0xe2),((unsigned char )0xeb),((unsigned char )0x27),((unsigned char )0xb2),((unsigned char )0x75),((unsigned char )0x09),((unsigned char )0x83),((unsigned char )0x2c),((unsigned char )0x1a),((unsigned char )0x1b),((unsigned char )0x6e),((unsigned char )0x5a),((unsigned char )0xa0),((unsigned char )0x52),((unsigned char )0x3b),((unsigned char )0xd6),((unsigned char )0xb3),((unsigned char )0x29),((unsigned char )0xe3),((unsigned char )0x2f),((unsigned char )0x84),((unsigned char )0x53),((unsigned char )0xd1),((unsigned char )0x00),((unsigned char )0xed),((unsigned char )0x20),((unsigned char )0xfc),((unsigned char )0xb1),((unsigned char )0x5b),((unsigned char )0x6a),((unsigned char )0xcb),((unsigned char )0xbe),((unsigned char )0x39),((unsigned char )0x4a),((unsigned char )0x4c),((unsigned char )0x58),((unsigned char )0xcf),((unsigned char )0xd0),((unsigned char )0xef),((unsigned char )0xaa),((unsigned char )0xfb),((unsigned char )0x43),((unsigned char )0x4d),((unsigned char )0x33),((unsigned char )0x85),((unsigned char )0x45),((unsigned char )0xf9),((unsigned char )0x02),((unsigned char )0x7f),((unsigned char )0x50),((unsigned char )0x3c),((unsigned char )0x9f),((unsigned char )0xa8),((unsigned char )0x51),((unsigned char )0xa3),((unsigned char )0x40),((unsigned char )0x8f),((unsigned char )0x92),((unsigned char )0x9d),((unsigned char )0x38),((unsigned char )0xf5),((unsigned char )0xbc),((unsigned char )0xb6),((unsigned char )0xda),((unsigned char )0x21),((unsigned char )0x10),((unsigned char )0xff),((unsigned char )0xf3),((unsigned char )0xd2),((unsigned char )0xcd),((unsigned char )0x0c),((unsigned char )0x13),((unsigned char )0xec),((unsigned char )0x5f),((unsigned char )0x97),((unsigned char )0x44),((unsigned char )0x17),((unsigned char )0xc4),((unsigned char )0xa7),((unsigned char )0x7e),((unsigned char )0x3d),((unsigned char )0x64),((unsigned char )0x5d),((unsigned char )0x19),((unsigned char )0x73),((unsigned char )0x60),((unsigned char )0x81),((unsigned char )0x4f),((unsigned char )0xdc),((unsigned char )0x22),((unsigned char )0x2a),((unsigned char )0x90),((unsigned char )0x88),((unsigned char )0x46),((unsigned char )0xee),((unsigned char )0xb8),((unsigned char )0x14),((unsigned char )0xde),((unsigned char )0x5e),((unsigned char )0x0b),((unsigned char )0xdb),((unsigned char )0xe0),((unsigned char )0x32),((unsigned char )0x3a),((unsigned char )0x0a),((unsigned char )0x49),((unsigned char )0x06),((unsigned char )0x24),((unsigned char )0x5c),((unsigned char )0xc2),((unsigned char )0xd3),((unsigned char )0xac),((unsigned char )0x62),((unsigned char )0x91),((unsigned char )0x95),((unsigned char )0xe4),((unsigned char )0x79),((unsigned char )0xe7),((unsigned char )0xc8),((unsigned char )0x37),((unsigned char )0x6d),((unsigned char )0x8d),((unsigned char )0xd5),((unsigned char )0x4e),((unsigned char )0xa9),((unsigned char )0x6c),((unsigned char )0x56),((unsigned char )0xf4),((unsigned char )0xea),((unsigned char )0x65),((unsigned char )0x7a),((unsigned char )0xae),((unsigned char )0x08),((unsigned char )0xba),((unsigned char )0x78),((unsigned char )0x25),((unsigned char )0x2e),((unsigned char )0x1c),((unsigned char )0xa6),((unsigned char )0xb4),((unsigned char )0xc6),((unsigned char )0xe8),((unsigned char )0xdd),((unsigned char )0x74),((unsigned char )0x1f),((unsigned char )0x4b),((unsigned char )0xbd),((unsigned char )0x8b),((unsigned char )0x8a),((unsigned char )0x70),((unsigned char )0x3e),((unsigned char )0xb5),((unsigned char )0x66),((unsigned char )0x48),((unsigned char )0x03),((unsigned char )0xf6),((unsigned char )0x0e),((unsigned char )0x61),((unsigned char )0x35),((unsigned char )0x57),((unsigned char )0xb9),((unsigned char )0x86),((unsigned char )0xc1),((unsigned char )0x1d),((unsigned char )0x9e),((unsigned char )0xe1),((unsigned char )0xf8),((unsigned char )0x98),((unsigned char )0x11),((unsigned char )0x69),((unsigned char )0xd9),((unsigned char )0x8e),((unsigned char )0x94),((unsigned char )0x9b),((unsigned char )0x1e),((unsigned char )0x87),((unsigned char )0xe9),((unsigned char )0xce),((unsigned char )0x55),((unsigned char )0x28),((unsigned char )0xdf),((unsigned char )0x8c),((unsigned char )0xa1),((unsigned char )0x89),((unsigned char )0x0d),((unsigned char )0xbf),((unsigned char )0xe6),((unsigned char )0x42),((unsigned char )0x68),((unsigned char )0x41),((unsigned char )0x99),((unsigned char )0x2d),((unsigned char )0x0f),((unsigned char )0xb0),((unsigned char )0x54),((unsigned char )0xbb),((unsigned char )0x16)};",
                        "type": "stmt"
                    },
                    {
                        "line": 23,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_4_2_0_2",
                        "unparse_info": "return sbox[t];",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 158,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_8",
                "unparse_info": "void aes_addRoundKey_cpy(unsigned char * buf,unsigned char * key,unsigned char * cpk) {...}",
                "type": "function",
                "name": "aes_addRoundKey_cpy",
                "begin": "159",
                "end": "176",
                "arrays": [],
                "childs": [
                    {
                        "line": 166,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_8_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "166",
                        "end": "174",
                        "lc-trip-count": 16,
                        "loop_label": "cpkey",
                        "loop_body_line": 169,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 173,
                        "col": 6,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2_0_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 173,
                        "col": 30,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2_0_0_1_0_0_0",
                        "unparse_info": "cpk",
                        "type": "var_ref",
                        "name": "cpk"
                    },
                    {
                        "line": 173,
                        "col": 43,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2_0_0_1_0_1_0",
                        "unparse_info": "key",
                        "type": "var_ref",
                        "name": "key"
                    },
                    {
                        "line": 173,
                        "col": 58,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2_0_1_0_0",
                        "unparse_info": "cpk",
                        "type": "var_ref",
                        "name": "cpk"
                    },
                    {
                        "line": 173,
                        "col": 76,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2_0_1_1_0",
                        "unparse_info": "key",
                        "type": "var_ref",
                        "name": "key"
                    }
                ],
                "var_defs": [
                    {
                        "line": 163,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_1_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 172,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_1_1",
                        "unparse_info": "_in_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 158,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_8",
                        "unparse_info": "void aes_addRoundKey_cpy(unsigned char * buf,unsigned char * key,unsigned char * cpk) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 158,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_0",
                        "unparse_info": "unsigned char * buf,unsigned char * key,unsigned char * cpk",
                        "type": "stmt"
                    },
                    {
                        "line": 159,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_8_2",
                        "unparse_info": "function definition: void aes_addRoundKey_cpy(unsigned char * buf,unsigned char * key,unsigned char * cpk) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 159,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0",
                        "unparse_info": "{#pragma HLS INLINEint i = 16;cpkey:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;(buf[15 + -i] ^=((int )(cpk[_in_i] = key[_in_i])) , cpk[16 + _in_i] = key[16 + _in_i]);}i = 0 + - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 161,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 163,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_8_2_0_1",
                        "unparse_info": "int i = 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 164,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2",
                        "unparse_info": "cpkey:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;(buf[15 + -i] ^=((int )(cpk[_in_i] = key[_in_i])) , cpk[16 + _in_i] = key[16 + _in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_8_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 166,
                        "col": 15,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_1",
                        "unparse_info": "i <= 15;",
                        "type": "stmt"
                    },
                    {
                        "line": 169,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_i = 15 + - 1 * i;(buf[15 + -i] ^=((int )(cpk[_in_i] = key[_in_i])) , cpk[16 + _in_i] = key[16 + _in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 171,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 172,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_8_2_0_2_0_3_1",
                        "unparse_info": "int _in_i = 15 + - 1 * i;",
                        "type": "stmt"
                    },
                    {
                        "line": 173,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_2_0_3_2",
                        "unparse_info": "(buf[15 + -i] ^=((int )(cpk[_in_i] = key[_in_i])) , cpk[16 + _in_i] = key[16 + _in_i]);",
                        "type": "stmt"
                    },
                    {
                        "line": 175,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_8_2_0_3",
                        "unparse_info": "i = 0 + - 1;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 179,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_9",
                "unparse_info": "void aes_subBytes(unsigned char * buf) {...}",
                "type": "function",
                "name": "aes_subBytes",
                "begin": "180",
                "end": "199",
                "arrays": [],
                "childs": [
                    {
                        "line": 188,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_9_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "188",
                        "end": "197",
                        "lc-trip-count": 16,
                        "loop_label": "sub",
                        "loop_body_line": 192,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 196,
                                "col": 25,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_9_2_0_2_0_3_2_0_1",
                                "unparse_info": "rj_sbox((int )buf[_in_i])",
                                "type": "callfunction",
                                "name": "rj_sbox",
                                "function_id": "F_0_0_0_4",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 196,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3_2_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 196,
                        "col": 32,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3_2_0_1_1_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 184,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_1_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 195,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3_1_1",
                        "unparse_info": "_in_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 179,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_9",
                        "unparse_info": "void aes_subBytes(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 179,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_0",
                        "unparse_info": "unsigned char * buf",
                        "type": "stmt"
                    },
                    {
                        "line": 180,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_9_2",
                        "unparse_info": "function definition: void aes_subBytes(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 180,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0",
                        "unparse_info": "{#pragma HLS INLINEint i = 16;sub:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] = rj_sbox((int )buf[_in_i]);}i = 0 + - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 182,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 184,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_9_2_0_1",
                        "unparse_info": "int i = 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 186,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2",
                        "unparse_info": "sub:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] = rj_sbox((int )buf[_in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 188,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_9_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 188,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 188,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 188,
                        "col": 15,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_1",
                        "unparse_info": "i <= 15;",
                        "type": "stmt"
                    },
                    {
                        "line": 192,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] = rj_sbox((int )buf[_in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 194,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 195,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_9_2_0_2_0_3_1",
                        "unparse_info": "int _in_i = 15 + - 1 * i;",
                        "type": "stmt"
                    },
                    {
                        "line": 196,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_2_0_3_2",
                        "unparse_info": "buf[_in_i] = rj_sbox((int )buf[_in_i]);",
                        "type": "stmt"
                    },
                    {
                        "line": 198,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_9_2_0_3",
                        "unparse_info": "i = 0 + - 1;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 202,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_10",
                "unparse_info": "void aes_shiftRows(unsigned char * buf) {...}",
                "type": "function",
                "name": "aes_shiftRows",
                "begin": "203",
                "end": "225",
                "arrays": [],
                "childs": [],
                "var_refs": [
                    {
                        "line": 209,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_3_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 210,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_4_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 210,
                        "col": 12,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_4_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 211,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 211,
                        "col": 12,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 212,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_6_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 212,
                        "col": 12,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_6_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 213,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_7_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 214,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_8_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 215,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_9_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 215,
                        "col": 13,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_9_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 216,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_10_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 217,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_11_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 218,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_12_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 218,
                        "col": 12,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_12_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 219,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_13_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 219,
                        "col": 13,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_13_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 220,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_14_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 220,
                        "col": 13,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_14_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 221,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_15_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 222,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_16_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 223,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_17_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 223,
                        "col": 13,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_17_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 224,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_18_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 207,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_1_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 208,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_2_1",
                        "unparse_info": "j",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 202,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_10",
                        "unparse_info": "void aes_shiftRows(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 202,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_0",
                        "unparse_info": "unsigned char * buf",
                        "type": "stmt"
                    },
                    {
                        "line": 203,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_10_2",
                        "unparse_info": "function definition: void aes_shiftRows(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 203,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0",
                        "unparse_info": "{#pragma HLS INLINEregister unsigned char i;register unsigned char j;i = buf[1];buf[1] = buf[5];buf[5] = buf[9];buf[9] = buf[13];buf[13] = i;i = buf[10];buf[10] = buf[2];buf[2] = i;j = buf[3];buf[3] = buf[15];buf[15] = buf[11];buf[11] = buf[7];buf[7] = j;j = buf[14];buf[14] = buf[6];buf[6] = j;}",
                        "type": "stmt"
                    },
                    {
                        "line": 205,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 207,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_10_2_0_1",
                        "unparse_info": "register unsigned char i;",
                        "type": "stmt"
                    },
                    {
                        "line": 208,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_10_2_0_2",
                        "unparse_info": "register unsigned char j;",
                        "type": "stmt"
                    },
                    {
                        "line": 209,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_3",
                        "unparse_info": "i = buf[1];",
                        "type": "stmt"
                    },
                    {
                        "line": 210,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_4",
                        "unparse_info": "buf[1] = buf[5];",
                        "type": "stmt"
                    },
                    {
                        "line": 211,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_5",
                        "unparse_info": "buf[5] = buf[9];",
                        "type": "stmt"
                    },
                    {
                        "line": 212,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_6",
                        "unparse_info": "buf[9] = buf[13];",
                        "type": "stmt"
                    },
                    {
                        "line": 213,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_7",
                        "unparse_info": "buf[13] = i;",
                        "type": "stmt"
                    },
                    {
                        "line": 214,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_8",
                        "unparse_info": "i = buf[10];",
                        "type": "stmt"
                    },
                    {
                        "line": 215,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_9",
                        "unparse_info": "buf[10] = buf[2];",
                        "type": "stmt"
                    },
                    {
                        "line": 216,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_10",
                        "unparse_info": "buf[2] = i;",
                        "type": "stmt"
                    },
                    {
                        "line": 217,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_11",
                        "unparse_info": "j = buf[3];",
                        "type": "stmt"
                    },
                    {
                        "line": 218,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_12",
                        "unparse_info": "buf[3] = buf[15];",
                        "type": "stmt"
                    },
                    {
                        "line": 219,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_13",
                        "unparse_info": "buf[15] = buf[11];",
                        "type": "stmt"
                    },
                    {
                        "line": 220,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_14",
                        "unparse_info": "buf[11] = buf[7];",
                        "type": "stmt"
                    },
                    {
                        "line": 221,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_15",
                        "unparse_info": "buf[7] = j;",
                        "type": "stmt"
                    },
                    {
                        "line": 222,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_16",
                        "unparse_info": "j = buf[14];",
                        "type": "stmt"
                    },
                    {
                        "line": 223,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_17",
                        "unparse_info": "buf[14] = buf[6];",
                        "type": "stmt"
                    },
                    {
                        "line": 224,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_10_2_0_18",
                        "unparse_info": "buf[6] = j;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 243,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_12",
                "unparse_info": "void aes_mixColumns(unsigned char * buf) {...}",
                "type": "function",
                "name": "aes_mixColumns",
                "begin": "244",
                "end": "274",
                "arrays": [],
                "childs": [
                    {
                        "line": 256,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_12_2_0_7_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 3;_s_i++) {...}",
                        "type": "loop",
                        "name": "_s_i",
                        "canonical": "yes",
                        "begin": "256",
                        "end": "272",
                        "lc-trip-count": 4,
                        "loop_label": "mix",
                        "loop_body_line": 259,
                        "loop_body_col": 1,
                        "childs": [
                            {
                                "line": 268,
                                "col": 50,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_7_0_3_7_0_1_1_0",
                                "unparse_info": "(rj_xtime((unsigned char )(((int )a) ^((int )b))))",
                                "type": "callfunction",
                                "name": "rj_xtime",
                                "function_id": "F_0_0_0_11",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 269,
                                "col": 54,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_7_0_3_8_0_1_1_0",
                                "unparse_info": "(rj_xtime((unsigned char )(((int )b) ^((int )c))))",
                                "type": "callfunction",
                                "name": "rj_xtime",
                                "function_id": "F_0_0_0_11",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 270,
                                "col": 54,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_7_0_3_9_0_1_1_0",
                                "unparse_info": "(rj_xtime((unsigned char )(((int )c) ^((int )d))))",
                                "type": "callfunction",
                                "name": "rj_xtime",
                                "function_id": "F_0_0_0_11",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            },
                            {
                                "line": 271,
                                "col": 54,
                                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                                "topo_id": "X_0_0_0_12_2_0_7_0_3_10_0_1_1_0",
                                "unparse_info": "(rj_xtime((unsigned char )(((int )d) ^((int )a))))",
                                "type": "callfunction",
                                "name": "rj_xtime",
                                "function_id": "F_0_0_0_11",
                                "childs": [],
                                "hls_mark_unroll": "yes"
                            }
                        ],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 263,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_2_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 264,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_3_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 265,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_4_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 266,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_5_0_1_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 268,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_7_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 269,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_8_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 270,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_9_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 271,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_10_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    }
                ],
                "var_defs": [
                    {
                        "line": 247,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_1_1",
                        "unparse_info": "a",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 248,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_2_1",
                        "unparse_info": "b",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 249,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_3_1",
                        "unparse_info": "c",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 250,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_4_1",
                        "unparse_info": "d",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 251,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_5_1",
                        "unparse_info": "e",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 252,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_6_1",
                        "unparse_info": "_s_i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 262,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_1_1",
                        "unparse_info": "_in_s_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 243,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_12",
                        "unparse_info": "void aes_mixColumns(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 243,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_0",
                        "unparse_info": "unsigned char * buf",
                        "type": "stmt"
                    },
                    {
                        "line": 244,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_12_2",
                        "unparse_info": "function definition: void aes_mixColumns(unsigned char * buf) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 244,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0",
                        "unparse_info": "{#pragma HLS INLINEregister unsigned char a;register unsigned char b;register unsigned char c;register unsigned char d;register unsigned char e;int _s_i;mix:for(_s_i = 0;_s_i <= 3;_s_i++) {#pragma HLS unrollint _in_s_i =(0 + 4L * _s_i);a = buf[_s_i * 4];b = buf[1 + _s_i * 4];c = buf[2 + _s_i * 4];d = buf[3 + _s_i * 4];e =((unsigned char )(((int )a) ^((int )b) ^((int )c) ^((int )d)));buf[_s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )a) ^((int )b)))));buf[1 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )b) ^((int )c)))));buf[2 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )c) ^((int )d)))));buf[3 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )d) ^((int )a)))));}_s_i =(12 + 4L);}",
                        "type": "stmt"
                    },
                    {
                        "line": 246,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 247,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_1",
                        "unparse_info": "register unsigned char a;",
                        "type": "stmt"
                    },
                    {
                        "line": 248,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_2",
                        "unparse_info": "register unsigned char b;",
                        "type": "stmt"
                    },
                    {
                        "line": 249,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_3",
                        "unparse_info": "register unsigned char c;",
                        "type": "stmt"
                    },
                    {
                        "line": 250,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_4",
                        "unparse_info": "register unsigned char d;",
                        "type": "stmt"
                    },
                    {
                        "line": 251,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_5",
                        "unparse_info": "register unsigned char e;",
                        "type": "stmt"
                    },
                    {
                        "line": 252,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_6",
                        "unparse_info": "int _s_i;",
                        "type": "stmt"
                    },
                    {
                        "line": 253,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7",
                        "unparse_info": "mix:for(_s_i = 0;_s_i <= 3;_s_i++) {#pragma HLS unrollint _in_s_i =(0 + 4L * _s_i);a = buf[_s_i * 4];b = buf[1 + _s_i * 4];c = buf[2 + _s_i * 4];d = buf[3 + _s_i * 4];e =((unsigned char )(((int )a) ^((int )b) ^((int )c) ^((int )d)));buf[_s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )a) ^((int )b)))));buf[1 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )b) ^((int )c)))));buf[2 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )c) ^((int )d)))));buf[3 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )d) ^((int )a)))));}",
                        "type": "stmt"
                    },
                    {
                        "line": 256,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_12_2_0_7_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 3;_s_i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 256,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_0",
                        "unparse_info": "_s_i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 256,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_0_0",
                        "unparse_info": "_s_i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 256,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_1",
                        "unparse_info": "_s_i <= 3;",
                        "type": "stmt"
                    },
                    {
                        "line": 259,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i =(0 + 4L * _s_i);a = buf[_s_i * 4];b = buf[1 + _s_i * 4];c = buf[2 + _s_i * 4];d = buf[3 + _s_i * 4];e =((unsigned char )(((int )a) ^((int )b) ^((int )c) ^((int )d)));buf[_s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )a) ^((int )b)))));buf[1 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )b) ^((int )c)))));buf[2 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )c) ^((int )d)))));buf[3 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )d) ^((int )a)))));}",
                        "type": "stmt"
                    },
                    {
                        "line": 261,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 262,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_12_2_0_7_0_3_1",
                        "unparse_info": "int _in_s_i =(0 + 4L * _s_i);",
                        "type": "stmt"
                    },
                    {
                        "line": 263,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_2",
                        "unparse_info": "a = buf[_s_i * 4];",
                        "type": "stmt"
                    },
                    {
                        "line": 264,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_3",
                        "unparse_info": "b = buf[1 + _s_i * 4];",
                        "type": "stmt"
                    },
                    {
                        "line": 265,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_4",
                        "unparse_info": "c = buf[2 + _s_i * 4];",
                        "type": "stmt"
                    },
                    {
                        "line": 266,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_5",
                        "unparse_info": "d = buf[3 + _s_i * 4];",
                        "type": "stmt"
                    },
                    {
                        "line": 267,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_6",
                        "unparse_info": "e =((unsigned char )(((int )a) ^((int )b) ^((int )c) ^((int )d)));",
                        "type": "stmt"
                    },
                    {
                        "line": 268,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_7",
                        "unparse_info": "buf[_s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )a) ^((int )b)))));",
                        "type": "stmt"
                    },
                    {
                        "line": 269,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_8",
                        "unparse_info": "buf[1 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )b) ^((int )c)))));",
                        "type": "stmt"
                    },
                    {
                        "line": 270,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_9",
                        "unparse_info": "buf[2 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )c) ^((int )d)))));",
                        "type": "stmt"
                    },
                    {
                        "line": 271,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_7_0_3_10",
                        "unparse_info": "buf[3 + _s_i * 4] ^=((int )e) ^((int )(rj_xtime((unsigned char )(((int )d) ^((int )a)))));",
                        "type": "stmt"
                    },
                    {
                        "line": 273,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_12_2_0_8",
                        "unparse_info": "_s_i =(12 + 4L);",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 228,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_11",
                "unparse_info": "unsigned char rj_xtime(unsigned char x) {...}",
                "type": "function",
                "name": "rj_xtime",
                "begin": "229",
                "end": "240",
                "arrays": [],
                "childs": [],
                "var_refs": [],
                "var_defs": [
                    {
                        "line": 232,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_1_1",
                        "unparse_info": "rose_temp",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 228,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_11",
                        "unparse_info": "unsigned char rj_xtime(unsigned char x) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 228,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_0",
                        "unparse_info": "unsigned char x",
                        "type": "stmt"
                    },
                    {
                        "line": 229,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_11_2",
                        "unparse_info": "function definition: unsigned char rj_xtime(unsigned char x) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 229,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0",
                        "unparse_info": "{#pragma HLS INLINEint rose_temp;if((bool )(((int )x) & 0x80)) {rose_temp =((int )x) << 1 ^ 0x1b;}else {rose_temp =((int )x) << 1;}return(unsigned char )rose_temp;}",
                        "type": "stmt"
                    },
                    {
                        "line": 231,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 232,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_11_2_0_1",
                        "unparse_info": "int rose_temp;",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2",
                        "unparse_info": "if((bool )(((int )x) & 0x80)) {rose_temp =((int )x) << 1 ^ 0x1b;}else {rose_temp =((int )x) << 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 7,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_0",
                        "unparse_info": "(bool )(((int )x) & 0x80);",
                        "type": "stmt"
                    },
                    {
                        "line": 233,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_1",
                        "unparse_info": "{rose_temp =((int )x) << 1 ^ 0x1b;}",
                        "type": "stmt"
                    },
                    {
                        "line": 234,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_1_0",
                        "unparse_info": "rose_temp =((int )x) << 1 ^ 0x1b;",
                        "type": "stmt"
                    },
                    {
                        "line": 236,
                        "col": 9,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_2",
                        "unparse_info": "{rose_temp =((int )x) << 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 237,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_2_2_0",
                        "unparse_info": "rose_temp =((int )x) << 1;",
                        "type": "stmt"
                    },
                    {
                        "line": 239,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_11_2_0_3",
                        "unparse_info": "return(unsigned char )rose_temp;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 277,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_13",
                "unparse_info": "void aes_addRoundKey(unsigned char * buf,unsigned char * key) {...}",
                "type": "function",
                "name": "aes_addRoundKey",
                "begin": "278",
                "end": "297",
                "arrays": [],
                "childs": [
                    {
                        "line": 286,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_13_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "loop",
                        "name": "i",
                        "canonical": "yes",
                        "begin": "286",
                        "end": "295",
                        "lc-trip-count": 16,
                        "loop_label": "addkey",
                        "loop_body_line": 290,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 294,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3_2_0_0_0",
                        "unparse_info": "buf",
                        "type": "var_ref",
                        "name": "buf"
                    },
                    {
                        "line": 294,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3_2_0_1_0_0",
                        "unparse_info": "key",
                        "type": "var_ref",
                        "name": "key"
                    }
                ],
                "var_defs": [
                    {
                        "line": 282,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_1_1",
                        "unparse_info": "i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 293,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3_1_1",
                        "unparse_info": "_in_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 277,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_13",
                        "unparse_info": "void aes_addRoundKey(unsigned char * buf,unsigned char * key) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 277,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_0",
                        "unparse_info": "unsigned char * buf,unsigned char * key",
                        "type": "stmt"
                    },
                    {
                        "line": 278,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_13_2",
                        "unparse_info": "function definition: void aes_addRoundKey(unsigned char * buf,unsigned char * key) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 278,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0",
                        "unparse_info": "{#pragma HLS INLINEint i = 16;addkey:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] ^=((int )key[_in_i]);}i = 0 + - 1;}",
                        "type": "stmt"
                    },
                    {
                        "line": 280,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 282,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_13_2_0_1",
                        "unparse_info": "int i = 16;",
                        "type": "stmt"
                    },
                    {
                        "line": 284,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2",
                        "unparse_info": "addkey:for(i = 0;i <= 15;i++) {#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] ^=((int )key[_in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 286,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_13_2_0_2_0",
                        "unparse_info": "for(i = 0;i <= 15;i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 286,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_0",
                        "unparse_info": "i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 286,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_0_0",
                        "unparse_info": "i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 286,
                        "col": 15,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_1",
                        "unparse_info": "i <= 15;",
                        "type": "stmt"
                    },
                    {
                        "line": 290,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_i = 15 + - 1 * i;buf[_in_i] ^=((int )key[_in_i]);}",
                        "type": "stmt"
                    },
                    {
                        "line": 292,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 293,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_13_2_0_2_0_3_1",
                        "unparse_info": "int _in_i = 15 + - 1 * i;",
                        "type": "stmt"
                    },
                    {
                        "line": 294,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_2_0_3_2",
                        "unparse_info": "buf[_in_i] ^=((int )key[_in_i]);",
                        "type": "stmt"
                    },
                    {
                        "line": 296,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_13_2_0_3",
                        "unparse_info": "i = 0 + - 1;",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 26,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_5",
                "unparse_info": "void aes_expandEncKey_1(unsigned char * k,unsigned char * rc) {...}",
                "type": "function",
                "name": "aes_expandEncKey_1",
                "begin": "27",
                "end": "67",
                "arrays": [],
                "childs": [
                    {
                        "line": 30,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_1_0_1_0_0",
                        "unparse_info": "(rj_sbox((int )k[29]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 31,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_2_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[30]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 32,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_3_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[31]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 33,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_4_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[28]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 39,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_5_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "loop",
                        "name": "_s_i_0",
                        "canonical": "yes",
                        "begin": "39",
                        "end": "47",
                        "lc-trip-count": 3,
                        "loop_label": "exp10",
                        "loop_body_line": 42,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 49,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_9_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[12]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 50,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_10_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[13]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 51,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_11_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[14]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 52,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_12_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[15]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 57,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_5_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "loop",
                        "name": "_s_i",
                        "canonical": "yes",
                        "begin": "57",
                        "end": "65",
                        "lc-trip-count": 3,
                        "loop_label": "exp20",
                        "loop_body_line": 60,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 30,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 30,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_1_0_1_0_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 30,
                        "col": 54,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_1_0_1_1_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 31,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_2_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 31,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_2_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 32,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_3_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 32,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_3_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 33,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_4_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 33,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_4_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 34,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_5_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 34,
                        "col": 38,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_5_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 34,
                        "col": 61,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_5_0_1_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 46,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 31,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 59,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 94,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 123,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 158,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 187,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 46,
                        "col": 222,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 49,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_9_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 49,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_9_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 50,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_10_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 50,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_10_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_11_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 51,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_11_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_12_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 52,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_12_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 29,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 55,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 88,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 115,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 148,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 175,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 64,
                        "col": 208,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    }
                ],
                "var_defs": [
                    {
                        "line": 35,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_6_1",
                        "unparse_info": "_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 45,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_1_1",
                        "unparse_info": "_in_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 53,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_13_1",
                        "unparse_info": "_s_i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 63,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_1_1",
                        "unparse_info": "_in_s_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 26,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_5",
                        "unparse_info": "void aes_expandEncKey_1(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 26,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_0",
                        "unparse_info": "unsigned char * k,unsigned char * rc",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_5_2",
                        "unparse_info": "function definition: void aes_expandEncKey_1(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 27,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0",
                        "unparse_info": "{#pragma HLS INLINEk[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));k[1] ^=((int )(rj_sbox((int )k[30])));k[2] ^=((int )(rj_sbox((int )k[31])));k[3] ^=((int )(rj_sbox((int )k[28])));*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));int _s_i_0;exp10:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}_s_i_0 =((int )(((long )12) + 4L));k[16] ^=((int )(rj_sbox((int )k[12])));k[17] ^=((int )(rj_sbox((int )k[13])));k[18] ^=((int )(rj_sbox((int )k[14])));k[19] ^=((int )(rj_sbox((int )k[15])));int _s_i;exp20:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}_s_i =((int )(((long )28) + 4L));}",
                        "type": "stmt"
                    },
                    {
                        "line": 29,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 30,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_1",
                        "unparse_info": "k[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));",
                        "type": "stmt"
                    },
                    {
                        "line": 31,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_2",
                        "unparse_info": "k[1] ^=((int )(rj_sbox((int )k[30])));",
                        "type": "stmt"
                    },
                    {
                        "line": 32,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_3",
                        "unparse_info": "k[2] ^=((int )(rj_sbox((int )k[31])));",
                        "type": "stmt"
                    },
                    {
                        "line": 33,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_4",
                        "unparse_info": "k[3] ^=((int )(rj_sbox((int )k[28])));",
                        "type": "stmt"
                    },
                    {
                        "line": 34,
                        "col": 4,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_5",
                        "unparse_info": "*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));",
                        "type": "stmt"
                    },
                    {
                        "line": 35,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_5_2_0_6",
                        "unparse_info": "int _s_i_0;",
                        "type": "stmt"
                    },
                    {
                        "line": 36,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7",
                        "unparse_info": "exp10:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_5_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_0",
                        "unparse_info": "_s_i_0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_0_0",
                        "unparse_info": "_s_i_0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 39,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_1",
                        "unparse_info": "_s_i_0 <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 42,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 44,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 45,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_5_2_0_7_0_3_1",
                        "unparse_info": "int _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));",
                        "type": "stmt"
                    },
                    {
                        "line": 46,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_7_0_3_2",
                        "unparse_info": "(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 48,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_8",
                        "unparse_info": "_s_i_0 =((int )(((long )12) + 4L));",
                        "type": "stmt"
                    },
                    {
                        "line": 49,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_9",
                        "unparse_info": "k[16] ^=((int )(rj_sbox((int )k[12])));",
                        "type": "stmt"
                    },
                    {
                        "line": 50,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_10",
                        "unparse_info": "k[17] ^=((int )(rj_sbox((int )k[13])));",
                        "type": "stmt"
                    },
                    {
                        "line": 51,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_11",
                        "unparse_info": "k[18] ^=((int )(rj_sbox((int )k[14])));",
                        "type": "stmt"
                    },
                    {
                        "line": 52,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_12",
                        "unparse_info": "k[19] ^=((int )(rj_sbox((int )k[15])));",
                        "type": "stmt"
                    },
                    {
                        "line": 53,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_5_2_0_13",
                        "unparse_info": "int _s_i;",
                        "type": "stmt"
                    },
                    {
                        "line": 54,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14",
                        "unparse_info": "exp20:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_5_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_0",
                        "unparse_info": "_s_i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_0_0",
                        "unparse_info": "_s_i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 57,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_1",
                        "unparse_info": "_s_i <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 60,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 62,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 63,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_5_2_0_14_0_3_1",
                        "unparse_info": "int _in_s_i =(int )(((long )20) + 4L *((long )_s_i));",
                        "type": "stmt"
                    },
                    {
                        "line": 64,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_14_0_3_2",
                        "unparse_info": "(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 66,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_5_2_0_15",
                        "unparse_info": "_s_i =((int )(((long )28) + 4L));",
                        "type": "stmt"
                    }
                ]
            },
            {
                "line": 70,
                "col": 1,
                "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                "topo_id": "F_0_0_0_6",
                "unparse_info": "void aes_expandEncKey_2(unsigned char * k,unsigned char * rc) {...}",
                "type": "function",
                "name": "aes_expandEncKey_2",
                "begin": "71",
                "end": "111",
                "arrays": [],
                "childs": [
                    {
                        "line": 74,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_1_0_1_0_0",
                        "unparse_info": "(rj_sbox((int )k[29]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 75,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_2_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[30]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 76,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_3_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[31]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 77,
                        "col": 26,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_4_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[28]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 83,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_6_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "loop",
                        "name": "_s_i_0",
                        "canonical": "yes",
                        "begin": "83",
                        "end": "91",
                        "lc-trip-count": 3,
                        "loop_label": "exp11",
                        "loop_body_line": 86,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    },
                    {
                        "line": 93,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_9_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[12]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 94,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_10_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[13]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 95,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_11_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[14]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 96,
                        "col": 27,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_12_0_1_0",
                        "unparse_info": "(rj_sbox((int )k[15]))",
                        "type": "callfunction",
                        "name": "rj_sbox",
                        "function_id": "F_0_0_0_4",
                        "childs": []
                    },
                    {
                        "line": 101,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_6_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "loop",
                        "name": "_s_i",
                        "canonical": "yes",
                        "begin": "101",
                        "end": "109",
                        "lc-trip-count": 3,
                        "loop_label": "exp21",
                        "loop_body_line": 104,
                        "loop_body_col": 1,
                        "childs": [],
                        "hls_mark_unroll": "yes"
                    }
                ],
                "var_refs": [
                    {
                        "line": 74,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 74,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_1_0_1_0_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 74,
                        "col": 54,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_1_0_1_1_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 75,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_2_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 75,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_2_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 76,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_3_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 76,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_3_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 77,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_4_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 77,
                        "col": 33,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_4_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 78,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_5_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 78,
                        "col": 38,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_5_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 78,
                        "col": 61,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_5_0_1_0_1_0_0_0_0_0",
                        "unparse_info": "rc",
                        "type": "var_ref",
                        "name": "rc"
                    },
                    {
                        "line": 90,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 31,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 59,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 94,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 123,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 158,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 187,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 90,
                        "col": 222,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 93,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_9_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 93,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_9_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 94,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_10_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 94,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_10_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 95,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_11_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 95,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_11_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 96,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_12_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 96,
                        "col": 34,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_12_0_1_0_1_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_0_0_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 29,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 55,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 88,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 115,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 148,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 175,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    },
                    {
                        "line": 108,
                        "col": 208,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2_0_1_1_0_0",
                        "unparse_info": "k",
                        "type": "var_ref",
                        "name": "k"
                    }
                ],
                "var_defs": [
                    {
                        "line": 79,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_6_1",
                        "unparse_info": "_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 89,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_1_1",
                        "unparse_info": "_in_s_i_0",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 97,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_13_1",
                        "unparse_info": "_s_i",
                        "type": "var_def",
                        "name": ""
                    },
                    {
                        "line": 107,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_1_1",
                        "unparse_info": "_in_s_i",
                        "type": "var_def",
                        "name": ""
                    }
                ],
                "stmts": [
                    {
                        "line": 70,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_6",
                        "unparse_info": "void aes_expandEncKey_2(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 70,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_0",
                        "unparse_info": "unsigned char * k,unsigned char * rc",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "F_0_0_0_6_2",
                        "unparse_info": "function definition: void aes_expandEncKey_2(unsigned char * k,unsigned char * rc) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 71,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0",
                        "unparse_info": "{#pragma HLS INLINEk[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));k[1] ^=((int )(rj_sbox((int )k[30])));k[2] ^=((int )(rj_sbox((int )k[31])));k[3] ^=((int )(rj_sbox((int )k[28])));*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));int _s_i_0;exp11:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}_s_i_0 =((int )(((long )12) + 4L));k[16] ^=((int )(rj_sbox((int )k[12])));k[17] ^=((int )(rj_sbox((int )k[13])));k[18] ^=((int )(rj_sbox((int )k[14])));k[19] ^=((int )(rj_sbox((int )k[15])));int _s_i;exp21:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}_s_i =((int )(((long )28) + 4L));}",
                        "type": "stmt"
                    },
                    {
                        "line": 73,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_0",
                        "unparse_info": "#pragma HLS INLINE",
                        "type": "stmt"
                    },
                    {
                        "line": 74,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_1",
                        "unparse_info": "k[0] ^=((int )(rj_sbox((int )k[29]))) ^((int )( *rc));",
                        "type": "stmt"
                    },
                    {
                        "line": 75,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_2",
                        "unparse_info": "k[1] ^=((int )(rj_sbox((int )k[30])));",
                        "type": "stmt"
                    },
                    {
                        "line": 76,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_3",
                        "unparse_info": "k[2] ^=((int )(rj_sbox((int )k[31])));",
                        "type": "stmt"
                    },
                    {
                        "line": 77,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_4",
                        "unparse_info": "k[3] ^=((int )(rj_sbox((int )k[28])));",
                        "type": "stmt"
                    },
                    {
                        "line": 78,
                        "col": 4,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_5",
                        "unparse_info": "*rc =((unsigned char )(((int )( *rc)) << 1 ^(((int )( *rc)) >> 7 & 1) * 0x1b));",
                        "type": "stmt"
                    },
                    {
                        "line": 79,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_6_2_0_6",
                        "unparse_info": "int _s_i_0;",
                        "type": "stmt"
                    },
                    {
                        "line": 80,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7",
                        "unparse_info": "exp11:for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_6_2_0_7_0",
                        "unparse_info": "for(_s_i_0 = 0;_s_i_0 <= 2;_s_i_0++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_0",
                        "unparse_info": "_s_i_0 = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_0_0",
                        "unparse_info": "_s_i_0 = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 83,
                        "col": 20,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_1",
                        "unparse_info": "_s_i_0 <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 86,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 88,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 89,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_6_2_0_7_0_3_1",
                        "unparse_info": "int _in_s_i_0 =(int )(((long )4) + 4L *((long )_s_i_0));",
                        "type": "stmt"
                    },
                    {
                        "line": 90,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_7_0_3_2",
                        "unparse_info": "(((k[_in_s_i_0] ^=((int )k[((int )_in_s_i_0) - 4]) , k[((int )_in_s_i_0) + 1] ^=((int )k[((int )_in_s_i_0) - 3])) , k[((int )_in_s_i_0) + 2] ^=((int )k[((int )_in_s_i_0) - 2])) , k[((int )_in_s_i_0) + 3] ^=((int )k[((int )_in_s_i_0) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 92,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_8",
                        "unparse_info": "_s_i_0 =((int )(((long )12) + 4L));",
                        "type": "stmt"
                    },
                    {
                        "line": 93,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_9",
                        "unparse_info": "k[16] ^=((int )(rj_sbox((int )k[12])));",
                        "type": "stmt"
                    },
                    {
                        "line": 94,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_10",
                        "unparse_info": "k[17] ^=((int )(rj_sbox((int )k[13])));",
                        "type": "stmt"
                    },
                    {
                        "line": 95,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_11",
                        "unparse_info": "k[18] ^=((int )(rj_sbox((int )k[14])));",
                        "type": "stmt"
                    },
                    {
                        "line": 96,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_12",
                        "unparse_info": "k[19] ^=((int )(rj_sbox((int )k[15])));",
                        "type": "stmt"
                    },
                    {
                        "line": 97,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_6_2_0_13",
                        "unparse_info": "int _s_i;",
                        "type": "stmt"
                    },
                    {
                        "line": 98,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14",
                        "unparse_info": "exp21:for(_s_i = 0;_s_i <= 2;_s_i++) {#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "L_0_0_0_6_2_0_14_0",
                        "unparse_info": "for(_s_i = 0;_s_i <= 2;_s_i++) {...}",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_0",
                        "unparse_info": "_s_i = 0;;",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 8,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_0_0",
                        "unparse_info": "_s_i = 0;",
                        "type": "stmt"
                    },
                    {
                        "line": 101,
                        "col": 18,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_1",
                        "unparse_info": "_s_i <= 2;",
                        "type": "stmt"
                    },
                    {
                        "line": 104,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3",
                        "unparse_info": "{#pragma HLS unrollint _in_s_i =(int )(((long )20) + 4L *((long )_s_i));(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));}",
                        "type": "stmt"
                    },
                    {
                        "line": 106,
                        "col": 1,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_0",
                        "unparse_info": "#pragma HLS unroll",
                        "type": "stmt"
                    },
                    {
                        "line": 107,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "V_0_0_0_6_2_0_14_0_3_1",
                        "unparse_info": "int _in_s_i =(int )(((long )20) + 4L *((long )_s_i));",
                        "type": "stmt"
                    },
                    {
                        "line": 108,
                        "col": 5,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_14_0_3_2",
                        "unparse_info": "(((k[_in_s_i] ^=((int )k[((int )_in_s_i) - 4]) , k[((int )_in_s_i) + 1] ^=((int )k[((int )_in_s_i) - 3])) , k[((int )_in_s_i) + 2] ^=((int )k[((int )_in_s_i) - 2])) , k[((int )_in_s_i) + 3] ^=((int )k[((int )_in_s_i) - 1]));",
                        "type": "stmt"
                    },
                    {
                        "line": 110,
                        "col": 3,
                        "source": "__merlinkernel_aes256_encrypt_ecb_kernel.cpp",
                        "topo_id": "X_0_0_0_6_2_0_15",
                        "unparse_info": "_s_i =((int )(((long )28) + 4L));",
                        "type": "stmt"
                    }
                ]
            }
        ]
    }
]