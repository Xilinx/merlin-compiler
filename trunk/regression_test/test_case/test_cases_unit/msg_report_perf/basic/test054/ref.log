cmd = mars_opt __merlinkernel_test.cpp  -e c -p performance_estimation  -I\/curr\/hanhu\/unit_test\/test_case\/test0  -I\/curr\/hanhu\/unit_test\/test_case\/test0\/src\/  -I\/curr\/hanhu\/WORK\/Merlin_Compiler\/trunk\/build\/..\/\/mars-gen\/lib\/merlin -a STATIC -a kernel_list.json -a gen_token.json -a config.json -a step1.json -a aocl

====== Typedef replace ========>
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
[INFO] Beginning static performance estimation



[INFO] ========================================================
[INFO] 1. Create blocks..
[INFO] ========================================================
[INFO] Reading annotated report : gen_token.json
[INFO] Reading annotated report : gen_token.json
[EST ALGO][MakeNewBlocks, 659] Create TOP TASK.
[EST ALGO][MakeNewBlocks, 648] Create top kernel: F_0_0_0_3
[EST ALGO][GetExecFlowFromInput, 166] Block execute in parallel.
[EST ALGO][AddChildBlock_AOCL, 402] Create a kernel block: SgFunctionDeclaration:void test(long * b,int * c) {....
[EST ALGO][MakeNewBlocks, 655] Create sub kernel: F_0_0_0_3
[EST ALGO][MakeNewBlocks, 678] ExtPortList: 
[EST ALGO][MakeNewBlocks, 680]    SgInitializedName:b
[EST ALGO][MakeNewBlocks, 680]    SgInitializedName:c
[EST ALGO][AddChildBlock_AOCL, 253] Find a function declaration: SgFunctionDeclaration:void test(long * b,int * c) {....
Function body = {#pragma HLS INTERFACE m_axi port=b offset=slave depth=1024#pragma HLS INTERFACE m_axi port=c offset=slave depth=1024#pragma HLS INTERFACE s_axilite port=b bundle=control#pragma HLS INTERFACE s_axilite port=c bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma ACCEL interface variable=b max_depth=1024 depth=1024#pragma ACCEL interface variable=c max_depth=1024 depth=1024for(int i = 0;i < 1024;i++) {#pragma HLS pipelinec[i] = 1;b[i] =((long )1);}return ;}
[EST ALGO][GetExecFlowFromInput, 164] Block execute in serial.
[EST ALGO][AddChildBlock_AOCL, 409] Create a loop block: SgForStatement:for(int i = 0;i < 1024;i++) {....
[EST ALGO][AddChildBlock_AOCL, 268] Find a loop: SgForStatement:for(int i = 0;i < 1024;i++) {....
[EST ALGO][GetExecFlowFromInput, 166] Block execute in parallel.
Find a external reference = c
[EST ALGO][AddChildBlock_AOCL, 533]Read data size = 0, r_ub = 0, r_lb = 0, for : c
[EST ALGO][AddChildBlock_AOCL, 538]Write data size = 1024, w_ub = 1023, w_lb = 0, for : c
[EST ALGO][AddChildBlock_AOCL, 565]One ref data size = 32768 for : c
[EST ALGO][AddChildBlock_AOCL, 568]One ref type size = 32 for : c
Find a external reference = b
[EST ALGO][AddChildBlock_AOCL, 533]Read data size = 0, r_ub = 0, r_lb = 0, for : b
[EST ALGO][AddChildBlock_AOCL, 538]Write data size = 1024, w_ub = 1023, w_lb = 0, for : b
[EST ALGO][AddChildBlock_AOCL, 565]One ref data size = 65536 for : b
[EST ALGO][AddChildBlock_AOCL, 568]One ref type size = 64 for : b
[EST ALGO][GetExecFlowFromInput, 164] Block execute in serial.



[INFO] ========================================================
[INFO] 2. Reading annotated report : gen_token.json
[INFO] ========================================================
[EST ALGO][ReadAnnotatedReportHelper, 514]*******************************
[EST ALGO][ReadAnnotatedReportHelper, 516]Read report for 8, ID = F_0_0_0_3, void test(long * b,int * c) {...}
[EST ALGO][ReadAnnotatedReportHelper, 522]----Checking if updated...
[EST ALGO][ReadAnnotatedReportHelper, 526]----Final updated = 0
[EST ALGO][ReadAnnotatedReportHelper, 528]----Checking glue latency...
[EST ALGO][ReadAnnotatedReportHelper, 532]----Final glue latency = 0
[EST ALGO][ReadAnnotatedReportHelper, 534]----Checking glue latency iteration...
[EST ALGO][ReadAnnotatedReportHelper, 540]----Final glue latency iteration = 0
[EST ALGO][ReadAnnotatedReportHelper, 542]----Checking execution sequence...
[EST ALGO][ReadAnnotatedReportHelper, 547]----execution in 0
[EST ALGO][ReadAnnotatedReportHelper, 549]----Checking logic latency...
[EST ALGO][ReadAnnotatedReportHelper, 553]----Final logic latency = 0
[EST ALGO][ReadAnnotatedReportHelper, 555]----Checking logic latency iteration...
[EST ALGO][ReadAnnotatedReportHelper, 561]----Final logic latency iteration = 0
[EST ALGO][ReadAnnotatedReportHelper, 563]----Checking execution sequence...
[EST ALGO][ReadAnnotatedReportHelper, 568]----execution in 0
[EST ALGO][ReadAnnotatedReportHelper, 570]----Checking instance_number...
[EST ALGO][ReadAnnotatedReportHelper, 575]----instance number 1
[EST ALGO][ReadAnnotatedReportHelper, 725]----Checking latnecy max...
[EST ALGO][ReadAnnotatedReportHelper, 730]----Final latency max = 1
[EST ALGO][ReadAnnotatedReportHelper, 732]----Checking inline...
[EST ALGO][ReadAnnotatedReportHelper, 736]----Final latency max = 1
[EST ALGO][ReadAnnotatedReportHelper, 738]----Checking dead...
[EST ALGO][ReadAnnotatedReportHelper, 742]----Final dead = 0
[EST ALGO][ReadAnnotatedReportHelper, 744]----Checking execution sequence from json file...
[EST ALGO][ReadAnnotatedReportHelper, 757]----Vector size0
[EST ALGO][ReadAnnotatedReportHelper, 514]*******************************
[EST ALGO][ReadAnnotatedReportHelper, 516]Read report for 0, ID = L_0_0_0_3_2_0_7, for(int i = 0;i < 1024;i++) {...}
[EST ALGO][ReadAnnotatedReportHelper, 522]----Checking if updated...
[EST ALGO][ReadAnnotatedReportHelper, 526]----Final updated = 0
[EST ALGO][ReadAnnotatedReportHelper, 528]----Checking glue latency...
[EST ALGO][ReadAnnotatedReportHelper, 532]----Final glue latency = 0
[EST ALGO][ReadAnnotatedReportHelper, 534]----Checking glue latency iteration...
[EST ALGO][ReadAnnotatedReportHelper, 540]----Final glue latency iteration = 0
[EST ALGO][ReadAnnotatedReportHelper, 542]----Checking execution sequence...
[EST ALGO][ReadAnnotatedReportHelper, 547]----execution in 1
[EST ALGO][ReadAnnotatedReportHelper, 549]----Checking logic latency...
[EST ALGO][ReadAnnotatedReportHelper, 553]----Final logic latency = 0
[EST ALGO][ReadAnnotatedReportHelper, 555]----Checking logic latency iteration...
[EST ALGO][ReadAnnotatedReportHelper, 561]----Final logic latency iteration = 0
[EST ALGO][ReadAnnotatedReportHelper, 563]----Checking execution sequence...
[EST ALGO][ReadAnnotatedReportHelper, 568]----execution in 1
[EST ALGO][ReadAnnotatedReportHelper, 570]----Checking instance_number...
[EST ALGO][ReadAnnotatedReportHelper, 575]----instance number 1
[EST ALGO][ReadAnnotatedReportHelper, 579]----Checking TC...
[EST ALGO][ReadAnnotatedReportHelper, 594]----Final TC = 1024
[EST ALGO][ReadAnnotatedReportHelper, 597]----Checking flatten...
[EST ALGO][ReadAnnotatedReportHelper, 614]----Final flatten = 0
[EST ALGO][ReadAnnotatedReportHelper, 617]----Checking unroll factor...
[EST ALGO][SetParentAttributeHaveUnrollLoopOnly, 502] Setting parent loop as not unroll loop.
[EST ALGO][ReadAnnotatedReportHelper, 644]----Final unroll factor = 16
[EST ALGO][ReadAnnotatedReportHelper, 647]----Checking II...
[EST ALGO][ReadAnnotatedReportHelper, 665]----Final II = 1
[EST ALGO][ReadAnnotatedReportHelper, 668]----Checking IL...
[EST ALGO][ReadAnnotatedReportHelper, 677]----Final IL = 3
[EST ALGO][ReadAnnotatedReportHelper, 679]----Checking total latency...
[EST ALGO][ReadAnnotatedReportHelper, 684]----Final total latency = 66
[EST ALGO][ReadAnnotatedReportHelper, 686]----Checking iteration latency...
[EST ALGO][ReadAnnotatedReportHelper, 693]----Final iteration latency = 3
[EST ALGO][ReadAnnotatedReportHelper, 695]----Checking burst...
[EST ALGO][ReadAnnotatedReportHelper, 708]----Final burst = 0. burst width = 0
[EST ALGO][ReadAnnotatedReportHelper, 710]----Checking vendor latnecy...
[EST ALGO][ReadAnnotatedReportHelper, 723]----Final vendor latency = 1
[INFO] ========================================================
[INFO] 3. Compute cycles.
[INFO] ========================================================
[INFO] Reading external memory parameter file: config.json
[WARNING] RBW_GBs not found.
[WARNING] WBW_GBs not found.
[WARNING] RLat_ns not found.
[WARNING] WLat_ns not found.
[WARNING] RandLat_ns not found.
RBW_GBs=10.300000
WBW_GBs=9.600000
RLat_ns=434.000000
WLat_ns=325.000000
RandLat_ns=62.000000
FPGACLK_GHz=0.250000
MAX_BITWIDTH=512.000000
LATENCY=240.000000
Find Top Block = F_0_0_0_3
**********************************************************
3.1 Update cycles by compute all data
**********************************************************
ComputeStaticCycleHelper spawn size = 0
[EST ALGO][ComputeStaticCycleHelper, 1574] Start compute cycles for TASK. 
ComputeStaticCycleHelper spawn size = 0
[EST ALGO][ComputeStaticCycleHelper, 1586] Start compute cycles for top kernel: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][ComputeStaticCycleFromSchedule, 1858]F_0_0_0_3 - schedule sequntial size: 1
[EST ALGO][ComputeStaticCycleFromSchedule, 1861]F_0_0_0_3 - schedule parallel size: 1
[EST ALGO][ComputeStaticCycleFromSchedule, 1870] j=0 ,k=0 ,Block=SgFunctionDeclaration:void test(long * b,int * c) {...}
ComputeStaticCycleHelper spawn size = 0
[EST ALGO][ComputeStaticCycleHelper, 1602] Start compute cycles for function declaration: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][ComputeStaticCycleFromSchedule, 1858]F_0_0_0_3 - schedule sequntial size: 1
[EST ALGO][ComputeStaticCycleFromSchedule, 1861]F_0_0_0_3 - schedule parallel size: 1
[EST ALGO][ComputeStaticCycleFromSchedule, 1870] j=0 ,k=0 ,Block=SgForStatement:for(int i = 0;i < 1024;i++) {...}
ComputeStaticCycleHelper spawn size = 0
[EST ALGO][ComputeStaticCycleHelper, 1670] Start compute cycles for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}
111 Final IL = 3, vendor latency = 1
Final IL = 1, vendor latency = 1
[EST ALGO][ComputeStaticCyclesForLoop, 1219] Loop pipelined, TC=1024, UnrollFactor=16, II=1, IL=1, LogicLatencyIteration=0, GlueLatencyIteration=0, CycleUnitStatic=64
[EST ALGO][ComputeStaticCycleHelper, 1693] Prefinish compute cycles for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}, Cycles: 64, LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0
[EST ALGO][ComputeStaticCycleHelper, 1714] Finish compute cycles for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}, Cycles: 64, LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0
[EST ALGO][ComputeStaticCycleFromSchedule, 1897] ComputeTemp: 64, LogicTemp: 0, GlueTemp: 0, TotalCycles: 64, LogicLatency: 0, GlueLatency: 0
[EST ALGO][ComputeStaticCycleFromSchedule, 1903]F_0_0_0_3 - schedule spawn size: 0
Logic latency = 0, Unit cycles = 64, AccCycles = 64
[EST ALGO][ComputeStaticCycleHelper, 1643] Finish compute cycles for function declaration: SgFunctionDeclaration:void test(long * b,int * c) {...}, Cycles: 64, LogicLatency: 0, GlueLatency: 64
[EST ALGO][ComputeStaticCycleFromSchedule, 1897] ComputeTemp: 64, LogicTemp: 0, GlueTemp: 64, TotalCycles: 64, LogicLatency: 0, GlueLatency: 64
[EST ALGO][ComputeStaticCycleFromSchedule, 1903]F_0_0_0_3 - schedule spawn size: 0
[EST ALGO][ComputeStaticCycleHelper, 1599] Finish compute cycles for top kernel: SgFunctionDeclaration:void test(long * b,int * c) {...}, Cycles: 64
[EST ALGO][ComputeStaticCycleHelper, 1579] Unit cycle of top kernel:64
[EST ALGO][ComputeStaticCycleHelper, 1580] FIRST_CYCLES=64
[EST ALGO][ComputeStaticCycles, 38] Print schedule for initial framework.

FuncDecl(0):void test(long * b,int * c) {...} TopoID:F_0_0_0_3
-ExtPort0:b
-ExtPort1:c
-Schedule:
Function: TopoID:F_0_0_0_3 Unit Cycles:64 LogicLatency:0 GlueLatency:64
  (0,0) for(int i = 0;;,i < 1024;,i++) TopoID:L_0_0_0_3_2_0_7 II:1 IL:1 UF:16 Flat:0 TCStatic:1024 Unit Cycles:64 Total Cycles:0
            LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0
**********************************************************
3.2 Update cycles by memory burst
**********************************************************
**********************************************************
3.2.1 Update burst data size
**********************************************************
[EST ALGO][UpdateBurstCyclesBySelf, 1984] Start compute for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 1998] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCyclesBySelf, 2001] - schedule parallel size: 1
[EST ALGO][UpdateBurstCyclesBySelf, 1984] Start compute for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 1998] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCyclesBySelf, 2001] - schedule parallel size: 1
[EST ALGO][UpdateBurstCyclesBySelf, 1984] Start compute for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2044] SubBlocksBitwidth = 0, SubBlocksDataSize = 0, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2093] Start compute for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}
one ref = c bitwidth = 512 OneDataSize 1 = 32768 Cycles = 64
one ref = b bitwidth = 512 OneDataSize 1 = 65536 Cycles = 128
[EST ALGO][UpdateBurstCyclesBySelf, 2157] Finish compute for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2174] VarRefTotalData = 98304, VarRefBitWidth = 512, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2200] Get Burst Data Size = 98304, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2203] Get Burst Bit Width = 512, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
Sub block bitwidth = 512
parallel bitwidth = 512
[EST ALGO][UpdateBurstCyclesBySelf, 2044] SubBlocksBitwidth = 512, SubBlocksDataSize = 98304, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2174] VarRefTotalData = 0, VarRefBitWidth = 0, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2200] Get Burst Data Size = 98304, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2203] Get Burst Bit Width = 512, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
Sub block bitwidth = 512
parallel bitwidth = 512
[EST ALGO][UpdateBurstCyclesBySelf, 2044] SubBlocksBitwidth = 512, SubBlocksDataSize = 98304, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2174] VarRefTotalData = 0, VarRefBitWidth = 0, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2200] Get Burst Data Size = 98304, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesBySelf, 2203] Get Burst Bit Width = 512, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
**********************************************************
3.2.2 Update burst cycles factor
**********************************************************
[EST ALGO][UpdateBurstCyclesFactor, 2217] Start update factor for type : 9, block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2218] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCyclesFactor, 2223] - schedule parallel size: 1
[EST ALGO][UpdateBurstCyclesFactor, 2232] 111 Child Data Size = 98304, Parent Data Size = 98304, for block = void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2246] 222 Child Data Size = 98304, Parent Data Size = 98304, for block = void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2258] Factor = 1, for block = void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2217] Start update factor for type : 8, block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2218] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCyclesFactor, 2223] - schedule parallel size: 1
[EST ALGO][UpdateBurstCyclesFactor, 2217] Start update factor for type : 0, block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2218] - schedule sequntial size: 0
[EST ALGO][UpdateBurstCyclesFactor, 2273] BurstFactor = 1, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2273] BurstFactor = 1, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCyclesFactor, 2273] BurstFactor = 1, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
**********************************************************
3.2.3 Update burst cycles
**********************************************************
[EST ALGO][UpdateBurstCycles, 2288] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCycles, 2292] - schedule parallel size: 1
[EST ALGO][UpdateBurstCycles, 2301] Start calculate as subblock for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCycles, 2302] ChildBurstFactor = 1
[EST ALGO][UpdateBurstCycles, 2288] - schedule sequntial size: 1
[EST ALGO][UpdateBurstCycles, 2292] - schedule parallel size: 1
[EST ALGO][UpdateBurstCycles, 2301] Start calculate as subblock for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCycles, 2302] ChildBurstFactor = 1
[EST ALGO][UpdateBurstCycles, 2288] - schedule sequntial size: 0
Prefinish block Cycles calculation: ChildBurstCyclesSum=0, ChildUnitCyclesSum=0, for block: for(int i = 0;i < 1024;i++) {...}
Finish block Cycles calculation: ChildBurstCyclesSum=0, ChildUnitCyclesSum=0, for block: for(int i = 0;i < 1024;i++) {...}
Child unit cycles sum = 0, Child burst cycles sum = 0, Burst var ref cycles = 0
[EST ALGO][UpdateBurstCycles, 2422] CycleUnitStatic = 192, CycleUnitStaticOrg = 64, BurstCycles = 192, SubBlocksCycles = 0, VarRefCycles = 0, ComboBurstFactor = 1, for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
[EST ALGO][UpdateBurstCycles, 2333] Finish calculate as subblock for block: SgForStatement:for(int i = 0;i < 1024;i++) {...}
ChildBurstCyclesMax = 192, ChildUnitCyclesMax = 192
Finish calculate for one parallel scope: Child burst cycles max = 192, Child unit cycles max = 192
Prefinish block Cycles calculation: ChildBurstCyclesSum=192, ChildUnitCyclesSum=192, for block: void test(long * b,int * c) {...}
Finish block Cycles calculation: ChildBurstCyclesSum=192, ChildUnitCyclesSum=192, for block: void test(long * b,int * c) {...}
Child unit cycles sum = 192, Child burst cycles sum = 192, Burst var ref cycles = 0
[EST ALGO][UpdateBurstCycles, 2422] CycleUnitStatic = 192, CycleUnitStaticOrg = 64, BurstCycles = 192, SubBlocksCycles = 192, VarRefCycles = 0, ComboBurstFactor = 1, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateBurstCycles, 2333] Finish calculate as subblock for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
ChildBurstCyclesMax = 192, ChildUnitCyclesMax = 192
Finish calculate for one parallel scope: Child burst cycles max = 192, Child unit cycles max = 192
Prefinish block Cycles calculation: ChildBurstCyclesSum=192, ChildUnitCyclesSum=192, for block: void test(long * b,int * c) {...}
Finish block Cycles calculation: ChildBurstCyclesSum=192, ChildUnitCyclesSum=192, for block: void test(long * b,int * c) {...}
Child unit cycles sum = 192, Child burst cycles sum = 192, Burst var ref cycles = 0
[EST ALGO][UpdateBurstCycles, 2422] CycleUnitStatic = 192, CycleUnitStaticOrg = 64, BurstCycles = 192, SubBlocksCycles = 192, VarRefCycles = 0, ComboBurstFactor = 1, for block: SgFunctionDeclaration:void test(long * b,int * c) {...}
[EST ALGO][UpdateCycleByMemoryBurstTop, 92] Total cycle of top kernel:0
SECOND_CYCLES=192
[EST ALGO][ComputeStaticCycles, 48] Print schedule for after memory burst updating.

FuncDecl(0):void test(long * b,int * c) {...} TopoID:F_0_0_0_3
-ExtPort0:b
-ExtPort1:c
-Schedule:
Function: TopoID:F_0_0_0_3 Unit Cycles:192 LogicLatency:0 GlueLatency:64
  (0,0) for(int i = 0;;,i < 1024;,i++) TopoID:L_0_0_0_3_2_0_7 II:1 IL:1 UF:16 Flat:0 TCStatic:1024 Unit Cycles:192 Total Cycles:0
            LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0
**********************************************************
3.3 Update total cycles.
**********************************************************
[EST ALGO][ComputeTotalStaticCycle, 2585] Start compute cycles for TASK. 
[EST ALGO][ComputeTotalStaticCycle, 2597] Start compute cycles for func void test(long * b,int * c) {...}
[EST ALGO][ComputeTotalStaticCycle, 2598] Input Factor = 1
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2766]F_0_0_0_3 - schedule sequntial size: 1
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2769]F_0_0_0_3 - schedule parallel size: 1
[EST ALGO][ComputeTotalStaticCycle, 2597] Start compute cycles for func void test(long * b,int * c) {...}
[EST ALGO][ComputeTotalStaticCycle, 2598] Input Factor = 1
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2766]F_0_0_0_3 - schedule sequntial size: 1
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2769]F_0_0_0_3 - schedule parallel size: 1
[EST ALGO][ComputeTotalStaticCycle, 2640] Start compute cycles for loop for(int i = 0;i < 1024;i++) {...}
[EST ALGO][ComputeTotalStaticCycle, 2642] Input Factor = 1
[EST ALGO][ComputeTotalStaticCycle, 2678] UnrollFactor = 16, TCStatic = 1024, TmpTCStatic = 64, NewFactor = 1
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2766]L_0_0_0_3_2_0_7 - schedule sequntial size: 0
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2783]L_0_0_0_3_2_0_7 - schedule spawn size: 0
[EST ALGO][ComputeTotalStaticCycle, 2686] Compute cycles for loop: SgForStatement:for(int i = 0;i < 1024;i++) {...}, IsPipeline=1, TotalCycles 192
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2783]F_0_0_0_3 - schedule spawn size: 0
[EST ALGO][ComputeTotalStaticCycle, 2613] Factor = 1, Cycles 192
[EST ALGO][ComputeTotalStaticCycle, 2617] Compute cycles for function declaration: SgFunctionDeclaration:void test(long * b,int * c) {...}, TotalCycles 192. TmpCycles 192
[EST ALGO][ComputeTotalStaticCycleFromSchedule, 2783]F_0_0_0_3 - schedule spawn size: 0
[EST ALGO][ComputeTotalStaticCycle, 2613] Factor = 1, Cycles 192
[EST ALGO][ComputeTotalStaticCycle, 2617] Compute cycles for function declaration: SgFunctionDeclaration:void test(long * b,int * c) {...}, TotalCycles 192. TmpCycles 192
[EST ALGO][ComputeTotalStaticCycle, 2590] Unit cycle of top kernel:192
[EST ALGO][ComputeTotalStaticCycle, 2591] THIRD_CYCLES=192
[EST ALGO][ComputeStaticCycles, 59] Print schedule for after compute total cycle.

FuncDecl(0):void test(long * b,int * c) {...} TopoID:F_0_0_0_3
-ExtPort0:b
-ExtPort1:c
-Schedule:
Function: TopoID:F_0_0_0_3 Unit Cycles:192 LogicLatency:0 GlueLatency:64
  (0,0) for(int i = 0;;,i < 1024;,i++) TopoID:L_0_0_0_3_2_0_7 II:1 IL:1 UF:16 Flat:0 TCStatic:1024 Unit Cycles:192 Total Cycles:192
            LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0

FuncDecl(1):void test(long * b,int * c) {...} TopoID:F_0_0_0_3
-Schedule:
Function: TopoID:F_0_0_0_3 Unit Cycles:192 LogicLatency:0 GlueLatency:64
  (0,0) void test(long * b,int * c) {...} TopoID:F_0_0_0_3 Unit Cycles=192 Total Cycles:192
            LogicLatency: 0, GlueLatency: 64, LogicLatencyIteration: 0, GlueLatencyIteration: 0
Function: TopoID:F_0_0_0_3 Unit Cycles:192 LogicLatency:0 GlueLatency:64
  (0,0) for(int i = 0;;,i < 1024;,i++) TopoID:L_0_0_0_3_2_0_7 II:1 IL:1 UF:16 Flat:0 TCStatic:1024 Unit Cycles:192 Total Cycles:192
            LogicLatency: 0, GlueLatency: 0, LogicLatencyIteration: 0, GlueLatencyIteration: 0
[INFO] ========================================================
[INFO] 4. Merge Json file.
[INFO] ========================================================
[INFO] Writing performance report : step1.json
ID = F_0_0_0_3
Report unit number = 0
[EST ALGO][AddSimOutputMaker, 1067]DBW - DRAMDataByteStatic: 0
[EST ALGO][AddSimOutputMaker, 1068]DBW - CycleStatic: 192
[EST ALGO][AddSimOutputMaker, 1069]DBW - FPGACLK_GHz: 0.25
{
    "F_0_0_0_3": {
        "serially_execution":"0",
        "CYCLE_BURST":"192",
        "CYCLE_COMPUTE":"64",
    "CYCLE_UNIT":"192",
        "CYCLE_TOT":"0",
        "DBW":"0.00",
        "poison":"0"
    },
ID = L_0_0_0_3_2_0_7
Report unit number = 1
[EST ALGO][AddSimOutputMaker, 1067]DBW - DRAMDataByteStatic: 0
[EST ALGO][AddSimOutputMaker, 1068]DBW - CycleStatic: 192
[EST ALGO][AddSimOutputMaker, 1069]DBW - FPGACLK_GHz: 0.25
    "L_0_0_0_3_2_0_7": {
        "CYCLE_BURST":"192",
        "CYCLE_COMPUTE":"64",
    "CYCLE_UNIT":"192",
        "CYCLE_TOT":"0",
        "DBW":"0.00",
        "trip-count":"1024",
        "unroll-factor":"16",

        "poison":"0"
    },
ID = F_0_0_0_3
Report unit number = 2
[EST ALGO][AddSimOutputMaker, 1067]DBW - DRAMDataByteStatic: 0
[EST ALGO][AddSimOutputMaker, 1068]DBW - CycleStatic: 192
[EST ALGO][AddSimOutputMaker, 1069]DBW - FPGACLK_GHz: 0.25
    "TOP_test": {
        "CYCLE_UNIT":"192",
        "CYCLE_TOT":"0",
        "DBW":"0.00",
        "poison":"0",
        "func_name": "test",
             "topo_id": "TOP_test",
             "type":"top_kernel"
     },
ID = F_0_0_0_3
Report unit number = 3
[EST ALGO][AddSimOutputMaker, 1067]DBW - DRAMDataByteStatic: 0
[EST ALGO][AddSimOutputMaker, 1068]DBW - CycleStatic: 192
[EST ALGO][AddSimOutputMaker, 1069]DBW - FPGACLK_GHz: 0.25
    "F_0_0_0_3": {
        "serially_execution":"0",
        "CYCLE_BURST":"192",
        "CYCLE_COMPUTE":"64",
    "CYCLE_UNIT":"192",
        "CYCLE_TOT":"0",
        "DBW":"0.00",
        "poison":"0"
    },
ID = L_0_0_0_3_2_0_7
Report unit number = 4
[EST ALGO][AddSimOutputMaker, 1067]DBW - DRAMDataByteStatic: 0
[EST ALGO][AddSimOutputMaker, 1068]DBW - CycleStatic: 192
[EST ALGO][AddSimOutputMaker, 1069]DBW - FPGACLK_GHz: 0.25
    "L_0_0_0_3_2_0_7": {
        "CYCLE_BURST":"192",
        "CYCLE_COMPUTE":"64",
    "CYCLE_UNIT":"192",
        "CYCLE_TOT":"0",
        "DBW":"0.00",
        "trip-count":"1024",
        "unroll-factor":"16",

        "poison":"0"
    }
}
Finish write file step1.json
#################################################
Delete some attribtues from json step1.json.
#################################################
Write output.json file.


#################################################
Delete some attribtues from json gen_token.json.
#################################################
Write output.json file.


[INFO] Performance estimation complete

====== Typedef replace ========>
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_extern_int_merlin_include_G_() {...}
=> nondefine func Orig: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
=> nondefine func REPLACE: SgFunctionDeclaration:void __merlin_dummy_kernel_pragma() {...}
[INFO] Beginning merging simulation output step1.json and annotated report gen_token.json into performance report perf_est.json
[INFO] Reading simulation output : step1.json
[INFO] Reading annotated report : gen_token.json
[INFO] Generating output file : perf_est.json
[INFO] Merge complete
cd .//lc_sim; merlin_safe_exec mars_opt __merlinkernel_test.cpp  -e c -p performance_estimation  -I\/curr\/hanhu\/unit_test\/test_case\/test0  -I\/curr\/hanhu\/unit_test\/test_case\/test0\/src\/  -I\/curr\/hanhu\/WORK\/Merlin_Compiler\/trunk\/build\/..\/\/mars-gen\/lib\/merlin -a MERGE -a step1.json -a gen_token.json -a perf_est.json :: __merlinkernel_test.cpp  :: 0
