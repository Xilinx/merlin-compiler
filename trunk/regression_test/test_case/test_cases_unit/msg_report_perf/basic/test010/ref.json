{
    "F_0_0_0_3": {
        "CYCLE_BURST": "128",
        "CYCLE_COMPUTE": "1536",
        "CYCLE_TOT": "1536",
        "CYCLE_UNIT": "1536",
        "DBW": "0.00",
        "begin": "0",
        "col": "10",
        "depth": "",
        "end": "12",
        "filename": "",
        "function": "",
        "inline": "",
        "line": "12",
        "linenum": "",
        "name": "test",
        "pipelined": "none",
        "poison": "0",
        "serially_execution": "0",
        "source": "__merlinkernel_test.cpp",
        "stmts": "[{u'topo_id': u'F_0_0_0_3', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'void test(char * a,int * b,long * c) {...}', u'line': 12, u'type': u'stmt', u'col': 10}, {u'topo_id': u'X_0_0_0_3_0', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'char * a,int * b,long * c', u'line': 12, u'type': u'stmt', u'col': 10}, {u'topo_id': u'F_0_0_0_3_2', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'void test(char *a,int *b,long *c){#pragma HLS INTERFACE m_axi port=a offset=slave depth=128#pragma HLS INTERFACE m_axi port=b offset=slave depth=128#pragma HLS INTERFACE m_axi port=c offset=slave depth=128#pragma HLS INTERFACE s_axilite port=a bundle=control#pragma HLS INTERFACE s_axilite port=b bundle=control#pragma HLS INTERFACE s_axilite port=c bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma ACCEL interface variable=a max_depth=128 depth=128#pragma ACCEL interface variable=b max_depth=128 depth=128#pragma ACCEL interface variable=c max_depth=128 depth=128int i = 0;while(i < 128){#pragma HLS pipeline#pragma HLS loop_tripcount max=128c[i] =((long )(((int )a[i]) + b[i]));i++;}return ;}', u'line': 13, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'{#pragma HLS INTERFACE m_axi port=a offset=slave depth=128#pragma HLS INTERFACE m_axi port=b offset=slave depth=128#pragma HLS INTERFACE m_axi port=c offset=slave depth=128#pragma HLS INTERFACE s_axilite port=a bundle=control#pragma HLS INTERFACE s_axilite port=b bundle=control#pragma HLS INTERFACE s_axilite port=c bundle=control#pragma HLS INTERFACE s_axilite port=return bundle=control#pragma ACCEL interface variable=a max_depth=128 depth=128#pragma ACCEL interface variable=b max_depth=128 depth=128#pragma ACCEL interface variable=c max_depth=128 depth=128int i = 0;while(i < 128){#pragma HLS pipeline#pragma HLS loop_tripcount max=128c[i] =((long )(((int )a[i]) + b[i]));i++;}return ;}', u'line': 13, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_0', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE m_axi port=a offset=slave depth=128', u'line': 15, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_1', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE m_axi port=b offset=slave depth=128', u'line': 17, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_2', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE m_axi port=c offset=slave depth=128', u'line': 19, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_3', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE s_axilite port=a bundle=control', u'line': 21, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_4', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE s_axilite port=b bundle=control', u'line': 23, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_5', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE s_axilite port=c bundle=control', u'line': 25, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_6', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS INTERFACE s_axilite port=return bundle=control', u'line': 27, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_7', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma ACCEL interface variable=a max_depth=128 depth=128', u'line': 29, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_8', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma ACCEL interface variable=b max_depth=128 depth=128', u'line': 31, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_9', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma ACCEL interface variable=c max_depth=128 depth=128', u'line': 33, u'type': u'stmt', u'col': 1}, {u'topo_id': u'V_0_0_0_3_2_0_10', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'int i = 0;', u'line': 34, u'type': u'stmt', u'col': 3}, {u'topo_id': u'L_0_0_0_3_2_0_11', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'while(i < 128){#pragma HLS pipeline#pragma HLS loop_tripcount max=128c[i] =((long )(((int )a[i]) + b[i]));i++;}', u'line': 35, u'type': u'stmt', u'col': 3}, {u'topo_id': u'X_0_0_0_3_2_0_11_0', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i < 128;', u'line': 35, u'type': u'stmt', u'col': 9}, {u'topo_id': u'X_0_0_0_3_2_0_11_1', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'{#pragma HLS pipeline#pragma HLS loop_tripcount max=128c[i] =((long )(((int )a[i]) + b[i]));i++;}', u'line': 37, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_0', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS pipeline', u'line': 39, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_1', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'#pragma HLS loop_tripcount max=128', u'line': 41, u'type': u'stmt', u'col': 1}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'c[i] =((long )(((int )a[i]) + b[i]));', u'line': 42, u'type': u'stmt', u'col': 5}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_3', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i++;', u'line': 43, u'type': u'stmt', u'col': 5}, {u'topo_id': u'X_0_0_0_3_2_0_12', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'return ;', u'line': 45, u'type': u'stmt', u'col': 3}]",
        "topo_id": "F_0_0_0_3",
        "total-BRAM": "4",
        "total-DSP": "0",
        "total-FF": "1568",
        "total-LUT": "2027",
        "total-URAM": "0",
        "type": "kernel",
        "unparse_info": "void test(char * a,int * b,long * c) {...}",
        "util-BRAM": "0.09",
        "util-DSP": "0.0",
        "util-FF": "0.07",
        "util-LUT": "0.17",
        "util-URAM": "0.0",
        "var_defs": "[{u'topo_id': u'X_0_0_0_3_2_0_10_1', u'name': u'', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 34, u'type': u'var_def', u'col': 3}]",
        "var_refs": "[{u'topo_id': u'X_0_0_0_3_2_0_11_0_0_0', u'name': u'i', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 35, u'type': u'var_ref', u'col': 9}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_0_0', u'name': u'c', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'c', u'line': 42, u'type': u'var_ref', u'col': 5}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_0_1', u'name': u'i', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 42, u'type': u'var_ref', u'col': 7}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_1_0_0_0_0', u'name': u'a', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'a', u'line': 42, u'type': u'var_ref', u'col': 28}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_1_0_0_0_1', u'name': u'i', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 42, u'type': u'var_ref', u'col': 30}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_1_0_1_0', u'name': u'b', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'b', u'line': 42, u'type': u'var_ref', u'col': 36}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_2_0_1_0_1_1', u'name': u'i', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 42, u'type': u'var_ref', u'col': 38}, {u'topo_id': u'X_0_0_0_3_2_0_11_1_3_0_0', u'name': u'i', u'source': u'__merlinkernel_test.cpp', u'unparse_info': u'i', u'line': 43, u'type': u'var_ref', u'col': 5}]",
        "var_type": ""
    },
    "L_0_0_0_3_2_0_11": {
        "CYCLE_BURST": "128",
        "CYCLE_COMPUTE": "1536",
        "CYCLE_TOT": "1536",
        "CYCLE_UNIT": "1536",
        "DBW": "0.00",
        "II": "2",
        "begin": "35",
        "canonical": "no",
        "col": "3",
        "depth": "1",
        "end": "43",
        "filename": "",
        "flatten": "",
        "flatten-parent": "",
        "flatten-son": "",
        "func_name": "test",
        "function": "",
        "initiation-interval": "2",
        "iteration-latency": "12",
        "lc-trip-count": "0",
        "line": "35",
        "linenum": "",
        "name": "Loop 1",
        "pipelined": "no",
        "poison": "0",
        "source": "__merlinkernel_test.cpp",
        "topo_id": "L_0_0_0_3_2_0_11",
        "total-BRAM": "",
        "total-DSP": "",
        "total-FF": "",
        "total-LUT": "",
        "trip-count": "128",
        "type": "loop",
        "unparse_info": "while(i < 128){#pragma HLS pipeline#pragma HLS loop_tripcount max=128c[i] =((long )(((int )a[i]) + b[i]));i++;}",
        "unroll-factor": "1",
        "unrolled": "",
        "util-BRAM": "",
        "util-DSP": "",
        "util-FF": "",
        "util-LUT": "",
        "var_type": ""
    },
    "TOP_test": {
        "CYCLE_TOT": "1536",
        "CYCLE_UNIT": "1536",
        "DBW": "0.00",
        "func_name": "test",
        "poison": "0",
        "topo_id": "TOP_test",
        "type": "top_kernel"
    },
    "X_0_0_0_3_0_0": {
        "col": "26",
        "const": "yes",
        "line": "12",
        "name": "a",
        "source": "__merlinkernel_test.cpp",
        "topo_id": "X_0_0_0_3_0_0",
        "type": "interface",
        "unparse_info": "a",
        "var_type": "array"
    },
    "X_0_0_0_3_0_1": {
        "col": "33",
        "const": "yes",
        "line": "12",
        "name": "b",
        "source": "__merlinkernel_test.cpp",
        "topo_id": "X_0_0_0_3_0_1",
        "type": "interface",
        "unparse_info": "b",
        "var_type": "array"
    },
    "X_0_0_0_3_0_2": {
        "col": "41",
        "const": "yes",
        "line": "12",
        "name": "c",
        "source": "__merlinkernel_test.cpp",
        "topo_id": "X_0_0_0_3_0_2",
        "type": "interface",
        "unparse_info": "c",
        "var_type": "array"
    }
}