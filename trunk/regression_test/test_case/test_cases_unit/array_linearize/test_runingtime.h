//(C) Copyright 2016-2021 Xilinx, Inc.
//All Rights Reserved.
//
//Licensed to the Apache Software Foundation (ASF) under one
//or more contributor license agreements.  See the NOTICE file
//distributed with this work for additional information
//regarding copyright ownership.  The ASF licenses this file
//to you under the Apache License, Version 2.0 (the
//"License"); you may not use this file except in compliance
//with the License.  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing,
//software distributed under the License is distributed on an
//"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
//KIND, either express or implied.  See the License for the
//specific language governing permissions and limitations
//under the License. (edited)

#ifndef __MERLIN_TYPE_DEFINE_H__

#define __MERLIN_TYPE_DEFINE_H__
typedef enum _BLOCK_SHAPE {NON_SQUARE_18=0,NON_SQUARE_14=1,NON_SQUARE_12=2,SQUARE=3,NON_SQUARE_21=4,NON_SQUARE_41=5,NON_SQUARE_81=6,NUM_BLOCK_SHAPE=7}BLOCK_SHAPE;
typedef enum _SPLIT_MODE {NO_SPLIT=0,SPLIT_BI_VER=1,SPLIT_BI_HOR=2,SPLIT_EQT_VER=3,SPLIT_EQT_HOR=4,SPLIT_QUAD=5,NUM_SPLIT_MODE=6}SPLIT_MODE;
typedef struct _COM_RPL {int slice_type;int poc;int tid;int ref_pic_num;int ref_pic_active_num;int ref_pics[17];int ref_pics_ddoi[17];int ref_pics_doi[17];}COM_RPL;
typedef struct _COM_SQH {unsigned char profile_id;unsigned char level_id;unsigned char progressive_sequence;unsigned char field_coded_sequence;unsigned char chroma_format;unsigned char encoding_precision;unsigned char output_reorder_delay;unsigned char sample_precision;unsigned char aspect_ratio;unsigned char frame_rate_code;unsigned int bit_rate_lower;unsigned int bit_rate_upper;unsigned char low_delay;unsigned char temporal_id_enable_flag;unsigned int bbv_buffer_size;unsigned char max_dpb_size;int horizontal_size;int vertical_size;unsigned char log2_max_cu_width_height;unsigned char min_cu_size;unsigned char max_part_ratio;unsigned char max_split_times;unsigned char min_qt_size;unsigned char max_bt_size;unsigned char max_eqt_size;unsigned char max_dt_size;int rpl1_index_exist_flag;int rpl1_same_as_rpl0_flag;COM_RPL rpls_l0[32];COM_RPL rpls_l1[32];int rpls_l0_num;int rpls_l1_num;int num_ref_default_active_minus1[2];int ipcm_enable_flag;unsigned char amvr_enable_flag;int umve_enable_flag;int ipf_enable_flag;int emvr_enable_flag;unsigned char affine_enable_flag;unsigned char smvd_enable_flag;unsigned char dt_intra_enable_flag;unsigned char num_of_hmvp_cand;unsigned char tscpm_enable_flag;unsigned char sample_adaptive_offset_enable_flag;unsigned char adaptive_leveling_filter_enable_flag;unsigned char secondary_transform_enable_flag;unsigned char position_based_transform_enable_flag;unsigned char wq_enable;unsigned char seq_wq_mode;unsigned char wq_4x4_matrix[16];unsigned char wq_8x8_matrix[64];unsigned char patch_stable;unsigned char cross_patch_loop_filter;unsigned char patch_ref_colocated;unsigned char patch_uniform;unsigned char patch_width_minus1;unsigned char patch_height_minus1;unsigned char patch_columns;unsigned char patch_rows;int column_width[64];int row_height[32];}COM_SQH;
enum PredDirection {PRED_L0=0,PRED_L1=1,PRED_BI=2,PRED_DIR_NUM=3};
typedef struct _COM_SBAC_CTX {unsigned int skip_flag[4];unsigned int skip_idx_ctx[3 + 1 + 8 - 1];unsigned int direct_flag[2];unsigned int umve_flag;unsigned int umve_base_idx[1];unsigned int umve_step_idx[1];unsigned int umve_dir_idx[2];unsigned int inter_dir[3];unsigned int intra_dir[10];unsigned int pred_mode[6];unsigned int cons_mode[1];unsigned int ipf_flag[1];unsigned int refi[3];unsigned int mvr_idx[5 - 1];unsigned int affine_mvr_idx[3 - 1];unsigned int mvp_from_hmvp_flag[1];unsigned int mvd[2][3];unsigned int ctp_zero_flag[2];unsigned int cbf[3];unsigned int tb_split[1];unsigned int run[6 * 4];unsigned int run_rdoq[6 * 4];unsigned int last1[6 * 2];unsigned int last2[12 * 2 - 2];unsigned int level[6 * 4];unsigned int split_flag[4];unsigned int bt_split_flag[9];unsigned int split_dir[5];unsigned int split_mode[3];unsigned int affine_flag[1];unsigned int affine_mrg_idx[5 - 1];unsigned int smvd_flag[1];unsigned int part_size[6];unsigned int sao_merge_flag[3];unsigned int sao_mode[1];unsigned int sao_offset[1];unsigned int alf_lcu_enable[1];unsigned int delta_qp[4];}COM_SBAC_CTX;
typedef struct _ENC_SBAC {unsigned int range;unsigned int code;int left_bits;unsigned int stacked_ff;unsigned int pending_byte;unsigned int is_pending_byte;COM_SBAC_CTX ctx;unsigned int bitcounter;unsigned char is_bitcount;}ENC_SBAC;
struct _COM_BSW {unsigned int code;int leftbits;unsigned char *cur;unsigned char *end;unsigned char *beg;unsigned char *buftmp;int size;int ndata[4];ENC_SBAC *pdata[4];};
typedef struct _COM_BSW COM_BSW;
enum PIC_BUFS {PIC_IDX_ORG=0,PIC_IDX_REC=1,PIC_BUF_NUM=2};
typedef struct _COM_CNKH {int ver;int ctype;int broken;}COM_CNKH;
typedef struct ALFParam {int alf_flag;int num_coeff;int filters_per_group;int componentID;int *filterPattern;int **coeffmulti;}ALFParam;
typedef struct _COM_PIC_HEADER {unsigned char low_delay;signed int poc;int rpl_l0_idx;int rpl_l1_idx;COM_RPL rpl_l0;COM_RPL rpl_l1;unsigned char num_ref_idx_active_override_flag;unsigned char ref_pic_list_sps_flag[2];unsigned int dtr;unsigned char slice_type;unsigned char temporal_id;unsigned char loop_filter_disable_flag;unsigned int bbv_delay;unsigned short bbv_check_times;unsigned char loop_filter_parameter_flag;int alpha_c_offset;int beta_offset;unsigned char chroma_quant_param_disable_flag;signed char chroma_quant_param_delta_cb;signed char chroma_quant_param_delta_cr;int tool_alf_on;int *pic_alf_on;ALFParam **m_alfPictureParam;int fixed_picture_qp_flag;int random_access_decodable_flag;int time_code_flag;int time_code;int decode_order_index;int picture_output_delay;int progressive_frame;int picture_structure;int top_field_first;int repeat_first_field;int top_field_picture_flag;int picture_qp;int affine_subblock_size_idx;int pic_wq_enable;int pic_wq_data_idx;int wq_param;int wq_model;int wq_param_vector[6];unsigned char wq_4x4_matrix[16];unsigned char wq_8x8_matrix[64];}COM_PIC_HEADER;
typedef struct _COM_SH_EXT {unsigned char slice_sao_enable[3];unsigned char fixed_slice_qp_flag;unsigned char slice_qp;}COM_SH_EXT;
typedef struct _COM_INFO {COM_CNKH cnkh;COM_PIC_HEADER pic_header;COM_SH_EXT shext;COM_SQH sqh;int pic_width;int pic_height;int max_cuwh;int log2_max_cuwh;int pic_width_in_lcu;int pic_height_in_lcu;int f_lcu;int pic_width_in_scu;int pic_height_in_scu;int f_scu;int bit_depth_internal;int bit_depth_input;int qp_offset_bit_depth;}COM_INFO;
struct _COM_IMGB {int cs;int np;int horizontal_size;int vertical_size;int width[4];int height[4];int stride[4];unsigned char *addr_plane[4];long long ts[4];int width_aligned[4];int height_aligned[4];int pad_left[4];int pad_right[4];int pad_up[4];int pad_down[4];unsigned char *buf_addr[4];int buf_size[4];int refcnt;};
typedef struct _COM_IMGB COM_IMGB;
typedef struct _COM_PIC {signed short *y;signed short *u;signed short *v;int stride_luma;int stride_chroma;int width_luma;int height_luma;int width_chroma;int height_chroma;int padsize_luma;int padsize_chroma;COM_IMGB *imgb;int dtr;int ptr;int picture_output_delay;unsigned char is_ref;unsigned char need_for_out;unsigned char temporal_id;signed short(*map_mv)[2][2];signed char(*map_refi)[2];unsigned int list_ptr[17];unsigned int list_is_library_pic[17];}COM_PIC;
typedef struct _ENC_PICO {COM_PIC pic;unsigned int pic_icnt;unsigned char is_used;COM_PIC *spic;}ENC_PICO;
typedef struct _COM_PART_INFO {unsigned char num_sub_part;int sub_x[4];int sub_y[4];int sub_w[4];int sub_h[4];int sub_scup[4];}COM_PART_INFO;
typedef struct _COM_MODE {int x_scu;int y_scu;int cud;int cu_width;int cu_height;int cu_width_log2;int cu_height_log2;int x_pos;int y_pos;int scup;int cu_mode;int pb_part;int tb_part;COM_PART_INFO pb_info;COM_PART_INFO tb_info;signed short rec[3][(1 << 7) *(1 << 7)];signed short coef[3][(1 << 7) *(1 << 7)];signed short pred[3][(1 << 7) *(1 << 7)];int num_nz[4][3];signed char refi[2];unsigned char mvr_idx;unsigned char umve_flag;unsigned char umve_idx;unsigned char skip_idx;unsigned char mvp_from_hmvp_flag;signed short mvd[2][2];signed short mv[2][2];unsigned char affine_flag;int affine_mv[2][4][2];signed short affine_mvd[2][4][2];unsigned char smvd_flag;unsigned char mpm[4][2];signed char ipm[4][2];unsigned char ipf_flag;}COM_MODE;
typedef struct _ENC_CU_DATA {signed char split_mode[6][7][(1 << 7) *(1 << 7) /((1 << 2) *(1 << 2))];int *pb_part;int *tb_part;unsigned char *pred_mode;unsigned char **mpm;unsigned char **mpm_ext;signed char **ipm;signed char **refi;unsigned char *mvr_idx;unsigned char *umve_flag;unsigned char *umve_idx;unsigned char *skip_idx;unsigned char *mvp_from_hmvp_flag;signed short mv[(1 << 7) *(1 << 7) /((1 << 2) *(1 << 2))][2][2];signed short mvd[(1 << 7) *(1 << 7) /((1 << 2) *(1 << 2))][2][2];int *num_nz_coef[3];unsigned int *map_scu;unsigned char *affine_flag;unsigned char *smvd_flag;unsigned int *map_cu_mode;unsigned int *map_pb_tb_part;signed char *depth;unsigned char *ipf_flag;signed short *coef[3];signed short *reco[3];}ENC_CU_DATA;
typedef struct _ENC_BEF_DATA {int visit;int nosplit;int split;int split_visit;double split_cost[6];int mvr_idx_history;int affine_flag_history;int mvr_hmvp_idx_history;unsigned char num_inter_pred;unsigned short inter_pred_dist[10];unsigned char inter_tb_part[10];unsigned char best_part_size_intra[2];unsigned char num_intra_history;}ENC_BEF_DATA;
typedef struct _COM_MOTION {signed short mv[2][2];signed char ref_idx[2];}COM_MOTION;
typedef struct _ENC_CORE {COM_MODE mod_info_best;COM_MODE mod_info_curr;COM_MODE mod_info_save;int best_pb_part_intra;int best_tb_part_intra;signed short coef[3][(1 << 7) *(1 << 7)];ENC_CU_DATA cu_data_best[6][6];ENC_CU_DATA cu_data_temp[6][6];signed short ctmp[3][(1 << 7) *(1 << 7)];signed short nb[3][2][(1 << 7) * 3];int lcu_num;int qp_y;int qp_u;int qp_v;int x_lcu;int y_lcu;int x_scu;int y_scu;int x_pel;int y_pel;int cup;int cud;unsigned char skip_flag;unsigned char split_flag;COM_BSW bs_temp;ENC_SBAC s_curr_best[6][6];ENC_SBAC s_next_best[6][6];ENC_SBAC s_temp_best;ENC_SBAC s_temp_run;ENC_SBAC s_temp_prev_comp_best;ENC_SBAC s_temp_prev_comp_run;ENC_SBAC s_temp_pb_part_best;ENC_SBAC s_curr_before_split[6][6];ENC_BEF_DATA bef_data[6][6][1024];unsigned char best_tb_part_hist;signed long long dist_pred_luma;ENC_SBAC s_sao_init;ENC_SBAC s_sao_cur_blk;ENC_SBAC s_sao_next_blk;ENC_SBAC s_sao_cur_type;ENC_SBAC s_sao_next_type;ENC_SBAC s_sao_cur_mergetype;ENC_SBAC s_sao_next_mergetype;ENC_SBAC s_alf_cu_ctr;ENC_SBAC s_alf_initial;double cost_best;unsigned int inter_satd;signed int dist_cu;signed int dist_cu_best;COM_MOTION motion_cands[8];signed char cnt_hmvp_cands;unsigned char skip_mvps_check;}ENC_CORE;
typedef struct _COM_REFP {COM_PIC *pic;int ptr;signed short(*map_mv)[2][2];signed char(*map_refi)[2];unsigned int *list_ptr;}COM_REFP;
typedef struct _ENC_PARAM {int horizontal_size;int vertical_size;int pic_width;int pic_height;int qp;int fps;int i_period;int f_ifrm;int bit_depth_input;int bit_depth_internal;int use_pic_sign;int max_b_frames;int force_output;int disable_hgop;int gop_size;int use_dqp;int frame_qp_add;int pb_frame_qp_offset;int ipcm_enable_flag;int amvr_enable_flag;int affine_enable_flag;int smvd_enable_flag;int use_deblock;int num_of_hmvp_cand;int ipf_flag;int tscpm_enable_flag;int umve_enable_flag;int emvr_enable_flag;int dt_intra_enable_flag;int wq_enable;int seq_wq_mode;char seq_wq_user[2048];int pic_wq_data_idx;char pic_wq_user[2048];int wq_param;int wq_model;char wq_param_detailed[256];char wq_param_undetailed[256];int sample_adaptive_offset_enable_flag;int adaptive_leveling_filter_enable_flag;int secondary_transform_enable_flag;unsigned char position_based_transform_enable_flag;unsigned char library_picture_enable_flag;unsigned char delta_qp_flag;unsigned char chroma_format;unsigned char encoding_precision;COM_RPL rpls_l0[32];COM_RPL rpls_l1[32];int rpls_l0_cfg_num;int rpls_l1_cfg_num;int patch_stable;int cross_patch_loop_filter;int patch_uniform;int patch_ref_colocated;int patch_width_in_lcu;int patch_height_in_lcu;int patch_columns;int patch_rows;int patch_column_width[64];int patch_row_height[128];int sub_sample_ratio;int frames_to_be_encoded;unsigned char ctu_size;unsigned char min_cu_size;unsigned char max_part_ratio;unsigned char max_split_times;unsigned char min_qt_size;unsigned char max_bt_size;unsigned char max_eqt_size;unsigned char max_dt_size;int qp_offset_cb;int qp_offset_cr;int qp_offset_adp;int bit_depth;}ENC_PARAM;
struct _PICBUF_ALLOCATOR {int width;int height;int pad_l;int pad_c;int ndata[4];int *pdata[4];};
typedef struct _PICBUF_ALLOCATOR PICBUF_ALLOCATOR;
typedef struct _COM_PM {COM_PIC *pic[34];COM_PIC *pic_ref[17];int max_num_ref_pics;int cur_num_ref_pics;int num_refp[2];int ptr_next_output;int ptr_increase;int max_pb_size;int cur_pb_size;COM_PIC *pic_lease;PICBUF_ALLOCATOR pa;}COM_PM;
typedef struct _ENC_PINTRA {signed short pred[3][(1 << 7) *(1 << 7)];signed short pred_cache[33][(1 << 7) *(1 << 7)];signed short rec[3][(1 << 7) *(1 << 7)];signed short *addr_org[3];int stride_org[3];signed short *addr_rec_pic[3];int stride_rec[3];unsigned char qp_y;unsigned char qp_u;unsigned char qp_v;int slice_type;int complexity;int *pdata[4];int *ndata[4];int bit_depth;}ENC_PINTRA;
struct _ENC_PINTER {int bit_depth;signed short pred_buf[(1 << 7) *(1 << 7)];signed short rec_buf[3][(1 << 7) *(1 << 7)];signed short mvp_scale[2][4][2];signed short mv_scale[2][4][2];unsigned char curr_mvr;int max_imv[2];int max_search_range;int affine_mvp_scale[2][4][4][2];int affine_mv_scale[2][4][4][2];int best_mv_uni[2][4][2];signed short p_error[(1 << 7) *(1 << 7)];int i_gradient[2][16384];signed short org_bi[(1 << 7) *(1 << 7)];signed int mot_bits[2];unsigned char num_refp;signed short min_mv_offset[2];signed short max_mv_offset[2];signed short search_range_ipel[2];signed short search_range_spel[2];signed char(*search_pattern_hpel)[2];unsigned char search_pattern_hpel_cnt;signed char(*search_pattern_qpel)[2];unsigned char search_pattern_qpel_cnt;COM_PIC *pic_org;signed short *Yuv_org[3];int stride_org[3];signed short(*map_mv)[2][2];int pic_width_in_scu;int qp_y;int qp_u;int qp_v;unsigned int lambda_mv;COM_REFP(*refp)[2];int slice_type;int me_level;int complexity;int *pdata[4];int *ndata[4];int ptr;int gop_size;};
typedef struct _ENC_PINTER ENC_PINTER;
typedef struct _COM_MAP {unsigned int *map_scu;signed char(*map_split)[6][7][(1 << 7) *(1 << 7) /((1 << 2) *(1 << 2))];signed short(*map_mv)[2][2];signed char(*map_refi)[2];signed char *map_ipm;unsigned int *map_cu_mode;unsigned int *map_pb_tb_part;signed char *map_depth;signed char *map_delta_qp;signed char *map_patch_idx;}COM_MAP;
struct SAOstatdata {long long diff[32];int count[32];};
typedef struct SAOstatdata SAOStatData;
typedef struct {int modeIdc;int typeIdc;int startBand;int startBand2;int deltaband;int offset[32];}SAOBlkParam;
typedef struct _AlfCorrData {double ***ECorr;double **yCorr;double *pixAcc;int componentID;}AlfCorrData;
typedef struct _EncALFVar {AlfCorrData **m_alfCorr[3];AlfCorrData **m_alfNonSkippedCorr[3];AlfCorrData *m_alfCorrMerged[3];double *m_y_merged[16];double **m_E_merged[16];double m_y_temp[9];double m_pixAcc_merged[16];double **m_E_temp;ALFParam **m_alfPictureParam;int *m_coeffNoFilter[16];int **m_filterCoeffSym;int m_varIndTab[16];int *m_numSlicesDataInOneLCU;signed short **m_varImg;int **m_AlfLCUEnabled;unsigned int m_uiBitIncrement;}EncALFVar;
typedef struct _PATCH_INFO {int stable;int cross_patch_loop_filter;int ref_colocated;int uniform;int height;int width;int columns;int rows;int idx;int x_pel;int y_pel;int skip_patch_flag;int *width_in_lcu;int *height_in_lcu;int x_pat;int y_pat;int left_pel;int right_pel;int up_pel;int down_pel;signed char *patch_sao_enable;}PATCH_INFO;
struct _ENC_CTX {COM_INFO info;ENC_PICO *pico_buf[32];ENC_PICO *pico;unsigned int pico_idx;int pico_max_cnt;unsigned int magic;int *id;ENC_CORE *core;COM_PIC *pic[2];COM_REFP refp[17][2];ENC_PARAM param;COM_BSW bs;COM_BSW bs_temp;COM_PM rpm;unsigned int pic_cnt;int pic_icnt;unsigned int pic_ticnt;unsigned char force_slice;int force_ignored_cnt;int frm_rnum;int slice_num;int sl_first_mb;unsigned char slice_type;unsigned char slice_depth;unsigned char ref_depth;unsigned char slice_ref_flag;int poc;unsigned char max_cud;ENC_SBAC sbac_enc;COM_IMGB *inbuf[32];int last_intra_ptr;int lcu_cnt;unsigned char log2_culine;unsigned char log2_cudim;ENC_PINTRA pintra;ENC_PINTER pinter;PICBUF_ALLOCATOR pa;int dtr;int ptr;unsigned char temporal_id;ENC_CU_DATA *map_cu_data;COM_MAP map;unsigned char tree_status;unsigned char cons_pred_mode;COM_PIC *pic_dbk;signed long long delta_dist;signed long long dist_nofilt;signed long long dist_filter;int **ppbEdgeFilter[2];COM_PIC *pic_sao;SAOStatData ***saostatData;SAOBlkParam **saoBlkParams;SAOBlkParam **rec_saoBlkParams;int pic_alf_on[3];EncALFVar *Enc_ALF;COM_PIC *pic_alf_Org;COM_PIC *pic_alf_Rec;double lambda[3];double sqrt_lambda[3];double dist_chroma_weight[2];PATCH_INFO *patch;unsigned char *wq[2];};
typedef struct _ENC_CTX ENC_CTX;
typedef enum _CONS_PRED_MODE {NO_MODE_CONS=0,ONLY_INTER=1,ONLY_INTRA=2}CONS_PRED_MODE;
typedef enum _SPLIT_DIR {SPLIT_VER=0,SPLIT_HOR=1,SPLIT_QT=2}SPLIT_DIR;
typedef struct _COM_SPLIT_STRUCT {int part_count;int cud;int width[4];int height[4];int log_cuw[4];int log_cuh[4];int x_pos[4];int y_pos[4];int cup[4];}COM_SPLIT_STRUCT;
typedef enum _TREE_STATUS {TREE_LC=0,TREE_L=1,TREE_C=2}TREE_STATUS;
typedef enum _PART_SIZE {SIZE_2Nx2N=0,SIZE_2NxnU=1,SIZE_2NxnD=2,SIZE_nLx2N=3,SIZE_nRx2N=4,SIZE_NxN=5,SIZE_2NxhN=6,SIZE_hNx2N=7,NUM_PART_SIZE=8}PART_SIZE;

#endif
