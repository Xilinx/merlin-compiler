
int add_func_1(int a,int b)
{
  return a + b;
}

int add_func_2(int a[100],int b[100],int i,int j)
{
  return a[i] + b[j];
}
#pragma ACCEL kernel

void func_top_0()
{
  int a[100];
  int b[100];
  
#pragma HLS array_partition variable=b complete dim=1
  int i;
  int j;
  for (i = 0; i < 99; i++) {
    for (j = 0; j < 90; j++) 
// Original: #pragma ACCEL PIPELINE II = 1
{
      
#pragma HLS pipeline II=1
      a[i] = add_func_1(b[j],b[j + 1]);
      a[i] += add_func_2(b,b,i,i + 1);
    }
  }
  for (i = 0; i < 99; i++) 
// Original: #pragma ACCEL PIPELINE II = 1
{
    
#pragma HLS pipeline II=1
    for (j = 0; j < 99; j++) 
// Original: #pragma ACCEL PARALLEL COMPLETE
{
      
#pragma HLS unroll
      a[i] = add_func_2(b,b,j,j + 1);
    }
    a[99] += add_func_1(b[99],b[98]);
  }
}

int main()
{
  func_top_0();
}
