====> pragma outside loop 
function: denoise2D
SgBasicBlock:{int a[64][64];int i;int j;for(j = 1;j < 64;j++) {for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}for(i = 0;i < 64;++i) {b[i][i] = 0;}}
function: denoise3D
SgBasicBlock:{int a[64][64];int i;int j;for(j = 1;j < 64;j++) {for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}for(i = 0;i < 64;++i) {b[i][i] = 0;}}
function: denoise2D, loop: L_0, coarse grained
SgBasicBlock:{for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}
function: denoise2D, loop: L_1, fine grained
SgBasicBlock:{b[i][i] = 0;}
function: denoise3D, loop: L_0, coarse grained
SgBasicBlock:{for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}
function: denoise3D, loop: L_1, fine grained
SgBasicBlock:{b[i][i] = 0;}
function: denoise2D, loop: L_0_0, fine grained
SgBasicBlock:{b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}
function: denoise3D, loop: L_0_0, fine grained
SgBasicBlock:{b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}
====> pragma in loop 
function: denoise2D
SgBasicBlock:{int a[64][64];int i;int j;for(j = 1;j < 64;j++) {for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}for(i = 0;i < 64;++i) {b[i][i] = 0;}}
function: denoise3D
SgBasicBlock:{int a[64][64];int i;int j;for(j = 1;j < 64;j++) {for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}for(i = 0;i < 64;++i) {b[i][i] = 0;}}
function: denoise2D, loop: L_0, coarse grained
SgBasicBlock:{for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}
function: denoise2D, loop: L_1, fine grained
SgBasicBlock:{b[i][i] = 0;}
function: denoise3D, loop: L_0, coarse grained
SgBasicBlock:{for(i = 1;i < 64;i++) {b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}}
function: denoise3D, loop: L_1, fine grained
SgBasicBlock:{b[i][i] = 0;}
function: denoise2D, loop: L_0_0, fine grained
SgBasicBlock:{b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}
function: denoise3D, loop: L_0_0, fine grained
SgBasicBlock:{b[j][i] =(a[j + 1][i] + a[j - 1][i] + a[j][i + 1] + a[j][i - 1]) / 4;}
