#include <stdio.h>
// Testing different loop test
#pragma ACCEL kernel

void func_loop()
{
  int a[10];
  int b[10];
  int c[10];
  int i = 0;
  int j = 0;
  int x;
  int y;
  int z;
  int N = 100;
// Standardize from: for(i = 0;i < N;i += 1) {...}
  for (i = 0; i <= 99; i++) {
    int _in_i = 0 + 1L * i;
/* block 1*/
    c[_in_i] = a[_in_i] + b[_in_i];
  }
  i = 99 + 1L;
// Standardize from: for(i = 0;i <= N;i += 1) {...}
  for (i = 0; i <= 100; i++) {
    int _in_i_0 = 0 + 1L * i;
/* block 2*/
    c[_in_i_0] = a[_in_i_0] + b[_in_i_0];
  }
  i = 100 + 1L;
  for ((i = 0 , j = 3); (i != N , j != N); i += 2) {
/* block 3*/
    c[i] = a[i] + b[i];
  }
  for (i = 0; i != N; i += 2) {
/* block 4*/
    c[i] = a[i] + b[i];
  }
  for ((i = N , j = 1); j > i && i > 0; i--) {
/* block 5*/
    c[i] = a[i] + b[i];
    j--;
  }
  j = 3;
// Canonicalized from: for((i = 0 , j = 3);10 > i;i++) {...}
  for (i = 0; i <= 9; ++i) {
/* block 6*/
    c[i] = a[i] + b[i];
  }
  j = 3;
// Canonicalized from: for((i = N , j = 3);0 < i;--i) {...}
// Standardize from: for(i = N;i >= 1;--i) {...}
  for (i = 0; i <= 99; i++) {
    int _in_i_1 = 100 + -1 * i;
/* block 7*/
    c[_in_i_1] = a[_in_i_1] + b[_in_i_1];
  }
  i = 1 + -1;
// Loop range is loop invariant
  j = 3;
// Canonicalized from: for((i = N , j = 3);i > b[i];--i) {...}
  for (i = N; i >= 1 + b[i]; --i) {
/* block 8*/
    c[i] = a[i] + b[i];
  }
  for (i = N; i > b[0]; --i) {
/* block 9*/
    c[i] = a[i] + b[i];
  }
  for (i = N; i >= b[0]; i -= 0.99) {
/* block 10*/
    c[i] = a[i] + b[i];
  }
// TODO
  for (i = N; i <= 101; i += 1.28) {
/* block 11*/
    printf("1) %d\n",i);
  }
// TODO
  for (i = N; i <= 120; i += 1.51) {
/* block 12*/
    printf("2) %d\n",i);
  }
// TODO
  for (i = N; i > 95; i -= 1.51) {
/* block 13*/
    printf("3) %d\n",i);
  }
// TODO
  for (i = 0; i > - 5; i -= 1.51) {
/* block 14*/
    printf("4) %d\n",i);
  }
// TODO
  for (i = - 5; i <= 0; i += 1.51) {
/* block 15*/
    printf("5) %d\n",i);
  }
// TODO
  for (i = - 10; i <= 10; i += 1.51) {
/* block 16*/
    printf("6) %d\n",i);
  }
  j = 3;
// Canonicalized from: for((i = N , j = 3);i > b[i] * 2;--i) {...}
  for (i = N; i >= 1 + b[i] * 2; --i) {
/* block 17*/
    c[i] = a[i] + b[i];
  }
  j = 3;
// Canonicalized from: for((i = 0 , j = 3);2 + 3 * 4 / 6 > i;i++) {...}
  for (i = 0; i <= 3; ++i) {
/* block 18*/
    c[i] = a[i] + b[i];
  }
}

int main()
{
  func_loop();
  return 0;
}
