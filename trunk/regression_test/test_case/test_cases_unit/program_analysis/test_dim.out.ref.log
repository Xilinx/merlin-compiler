Hello Program Analysis ... 
**** Test Array/Point Type by Reference**** 
(__builtin_bswap64(__bsx)): 
b: b int [11]
c + 1: c int [12]
&c[1]: 
c[0]: c int 
c_multi_calls: 
a_malloc: d int [256]
a_calloc: e double [1024]
a_new: f int [2323]
a_two_level: f int [2323]
b_two_level: b int [31]
sub91(a,b[0]): 
a: a int [10][20]
a[0]: a int [20]
a[0][1]: a int 
sub1(b): 
sub2(c): 
sub5(c): 
sub5(c): 
d =((int *)(malloc(1024))): 
sub6(d): 
(double *)(calloc(8,1024)): 
sub7(e): 
f =(new int [2323]): 
sub8(f): 
sub9(f,g): 
new int [n]: 
new_1: new_1 int [101]
n1 = a[0][1]: 
n1 >= 0 && n1 <= 10?(static_cast < void > (0)) : __assert_fail("n1 >= 0 && n1 <= 10","test_dim.cpp",84,__PRETTY_FUNCTION__): 
new int [n1]: 
new_2: new_2 int [10]
(int *)(malloc(sizeof(int ) * n1)): 
new_3: new_3 int [10]
cmost_malloc_1d((void **)(&new_4),"input",(sizeof(int )),n1): 
new_4: new_4 int [10]
cmost_malloc((void **)(&new_5),sizeof(int ) * n1): 
new_5: new_5 int [10]
posix_memalign((void **)(&new_6),16,sizeof(int ) * n1): 
new_6: new_6 int [10]
(int *)(calloc(sizeof(int ),n1)): 
new_7: new_7 int [10]
cmost_malloc_1d((void **)(&new_4_c),"input",(sizeof(int )),100): 
new_4_c: new_4_c int [100]
cmost_malloc((void **)(&new_5_c),sizeof(int ) * 100): 
new_5_c: new_5_c int [100]
posix_memalign((void **)(&new_6_c),16,sizeof(int ) * 100): 
new_6_c: new_6_c int [100]

