#include<assert.h>
void func_2(float *a);
void func_0(float *a);

void func_1(float *a)
{
  int i;
  int j;
  for (i = 0; i < 100; i++) 
    for (j = 0; j < 100; j++) {
      a[i];
      a[i - 1];
      a[i + 1];
    }
}

void func_3(float *f,int n)
{
  n < 10?((void )0) : __assert_fail("n < 10","test_dep.c",19,__PRETTY_FUNCTION__);
  int i;
  int j;
  for (i = 0; i < 100; i++) 
    for (j = 0; j < 100; j++) {
      f[i];
      f[i - n];
      f[i + n];
    }
}

void main()
{
  int n;
  int a[1024];
  func_2(a);
  func_3(a,n);
}

void func_2(float *a)
{
  int k;
  int i;
  int j;
  for (k = 0; k < 100; k++) 
    func_0(a);
  int b[10][10];
  int c[10][10];
  int d[10];
  int e[10];
  for (i = 0; i < 100 / 10; i++) {
    b[i][0];
    for (j = 0; j < 10; j++) {
      b[i - 1][j * 100];
      a[i * 10 + j];
      a[i * 10 + 10 + j];
      a[i * 10 + 10 + j - 1];
      c[i][j];
      c[i][j - 1];
      c[i - 1][j];
      c[i - 1][j - 1];
      d[i - 1];
      d[i - 1];
      e[d[i]];
      e[d[i - 1]];
    }
  }
}

void func_0(float *a)
{
  int ii;
  for (ii = 0; ii < 100; ii++) {
    a[256];
// not been supported, ZP 20150812
    func_1(a);
//        func_1(a+1);
  }
}
