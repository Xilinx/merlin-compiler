#include "memcpy_128_1d.h"
#include "memcpy_512_1d.h"
#include "memcpy_128.h"
#include "memcpy_512.h"
#include<string.h>
extern int __merlin_include__GB_memcpy_512_h_3;
extern int __merlin_include__GB_memcpy_128_h_2;
extern int __merlin_include__GB_memcpy_512_1d_h_1;
extern int __merlin_include__GB_memcpy_128_1d_h_0;

void func1_sub(ap_uint<512> *a,signed char a_buf[1000],int k)
{
  
#pragma  HLS array_partition  variable=a_buf cyclic factor = 64 dim=1
  memcpy_wide_bus_read_char_512((char *)a_buf,(ap_uint<512> *)a,k * 1,sizeof(signed char ) * ((unsigned long )1000),1000L);
}

void func2_sub(ap_uint<128> *a,signed char a_buf[1000])
{
  
#pragma  HLS array_partition  variable=a_buf cyclic factor = 16 dim=1
  memcpy_wide_bus_write_char_128((ap_uint<128> *)a,(char *)(&a_buf[2]),1 * 0,sizeof(signed char ) * ((unsigned long )1000),1000L);
  for (int i = 0; i < 16; ++i) {
    signed char tmp;
    tmp = (a_buf[i] + i);
    memcpy_wide_bus_single_write_char_128((ap_uint<128> *)a,tmp,1 * i);
  }
}
extern "C" {
#pragma ACCEL kernel

void func1_kernel(ap_uint<512> *a,ap_uint<128> *b,signed char k)
{
  
#pragma HLS DATA_PACK VARIABLE=b
  
#pragma HLS DATA_PACK VARIABLE=a
  signed char a_buf[1000];
  func1_sub(a,a_buf,k);
  func2_sub(b,a_buf);
}
}

int main()
{
  signed char *a;
  signed char *b;
  signed char *c;
  int k;
  func1_kernel((ap_uint<512> *)a,(ap_uint<128> *)b,k);
  return 0;
}
