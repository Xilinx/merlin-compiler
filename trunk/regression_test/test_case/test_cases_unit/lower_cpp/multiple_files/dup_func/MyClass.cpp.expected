
struct ::MyClass 
{
  int MyValue;
}
;
void p_ZN7MyClass14ProcessMyValueEi(struct MyClass *this_,int x);
void p_ZN7MyClass25ProcessMyValueDifferentlyEi(struct MyClass *this_,int x);
void p_ZN7MyClassC2Ei(struct MyClass *this_,int x);
int p_ZN7MyClass8getValueEv(struct MyClass *this_);

void p_ZN7MyClassC2Ei(struct MyClass *this_,int x)
{
  this_ -> MyValue = x;
}

void p_ZN7MyClass14ProcessMyValueEi(struct MyClass *this_,int x)
{
  for (int i = 0; i < 1024; i++) {
// should be pipelined
    this_ -> MyValue += x;
    p_ZN7MyClass25ProcessMyValueDifferentlyEi(this_,x);
  }
}

void p_ZN7MyClass25ProcessMyValueDifferentlyEi(struct MyClass *this_,int x)
{
  for (int i = 0; i < 4; i++) {
    this_ -> MyValue += x / 2;
  }
}

int p_ZN7MyClass8getValueEv(struct MyClass *this_)
{
  return this_ -> MyValue;
}
static void __merlin_dummy_SgClassDeclaration_struct_MyC_();
#include "MyClass.h"
static void __merlin_dummy_SgMemberFunctionDeclaration_void_MyCla_();
static void __merlin_dummy_SgMemberFunctionDeclaration_void_Proce_();
static void __merlin_dummy_SgMemberFunctionDeclaration_void_Proce_();
static void __merlin_dummy_SgMemberFunctionDeclaration_int_getVal_();
