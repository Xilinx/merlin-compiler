#pragma ACCEL kernel
/*,
		int yy[32][32],
		int sum[32][32],
		int sumi[32][32]*/

void kernel_durbin(int n,int alpha[32],int beta[32],int r[32],int out[32])
{
  int yy[32][32];
  int sum[32][32];
  int sumi[32][32];
  int i;
  int k;
  int y[32][32];
  y[0][0] = r[0];
  beta[0] = 1;
  alpha[0] = r[0];
  for (k = 1; k < 32; k++) {
    beta[k] = beta[k - 1] - alpha[k - 1] * alpha[k - 1] * beta[k - 1];
    sum[0][k] = r[k];
    for (i = 0; i <= k - 1; i++) {
      
#pragma ACCEL PIPELINE AUTO
      sumi[i + 1][k] = sum[i][k] + r[k - i - 1] * y[i][k - 1];
    }
    alpha[k] = -sumi[k][k] * beta[k];
    for (i = 0; i <= k - 1; i += 2) {
      
#pragma ACCEL PARALLEL COMPLETE 
      yy[i][k] = y[i][k - 1] + alpha[k] * y[k - i - 1][k - 1];
      yy[i][k + 1] = y[i][k] + alpha[k + 1] * y[k - i][k];
    }
    yy[k][k] = alpha[k];
  }
  for (i = 0; i < 32; i++) {
    
#pragma ACCEL PIPELINE AUTO
    out[i] = yy[i][32 - 1];
  }
}
